1️⃣ 选择器决定将格式化应用到哪些元素，而声明则定义要应用的格式化。

 元素的类型或名称，如图 9.1.1 所示。
 元素所在的上下文，如图 9.1.2 所示。
 元素的类或 ID，如图 9.1.3 和图 9.1.4所示。
 元素的伪类或伪元素，如图 9.1.5 所示放心，我将在后面解释伪类和伪元素）。
 元素是否有某些属性和值，如图 9.1.6所示。

要选择的元素的名称
h1 {
 color: red;
}

上下文   要选择的元素的名称
h1 em {
 color: red;
}
这个样式只应用于 h1 元素中的 em 元素。其他地方的 em 元素不受影响

类
.error {
 color: red;
}

ID
#gaudi {
 color: red;
}

要选择的元素的名称
strong.error {
 color: red;
}
通过在 class 或 id 选择器前面添加目标元素的名称，可以增强选择器的特殊性。在这个例子中，第一个选择器仅选择属于 error 类的 strong元素，而不是属于 error 类的任何元素。除非确有
必要，一般不要使用这种方法。

名称：伪类
a:link {
 color: red;
}
选择器选择属于 link 伪类的 a 元素（即页面上还未访问的链接）

名称【属性】
a[title] {
 color: red;
}
a[href="http://www.wikipedia.org"] {
 color: red;
}
可以在选择器中使用方括号添加关于目标元素的属性或值的信息，第一个例子针对的是所有具有 title 属性的 a 元素，第二个例子针对的只是指向维基百科页面的 a 元素

2️⃣按名称选择元素
按照类型选择要格式化的元素

通配符 *（星号）匹配代码中的任何元素名称。
使用 * { border: 2px solid green; } 会让每个元素都有一个 2 像素宽的绿色实线边框！因为匹配范围太广，会让浏览器加载页面变慢，因此应该谨慎使用通配符。

可以在一个选择器中使用一组元素名称，名称之间用逗号分隔。

3️⃣　按类或 ID 选择元素
而 h1.news { color: red; } 只会影响属于 news 类的 h1 元素。

如果要定位的元素有多个类名，可以在选择器中将它们连在一起，就像.architect.bio { color: blue; } 这样。任何 .architect
或 .bio 选择器的规则仍会应用于该元素，但.architect.bio 的规则的特殊性更高，因此如果有样式冲突，.architect.bio 的规则的优先
级更高。注意类名之间没有空格。如果有空格，就会针对任何 architect 类的元素嵌套的 bio类元素设置样式

4️⃣按上下文选择元素
 .architect p { color: red;
}
这里组合使用了类选择器和类型选择器。 .architect 和 p 之间的空格表示这个选择器会寻找 任何作为 architect 类元素后代(无论是第几代) 的 p 元素。

/* 得到相同效果的其他方式 -------------------------------------- */
/* 是任意article祖先的所有p元素，这是三个中特殊性最低的一个 */
article p {
color: red;
}

/* 属于architect类article元素的祖先的任意p元素，是三个中特殊性最高的一个 */
article.architect p { color: red;
}
在类名(尤其是 ID 名)之前添加元素名 通常会让特殊性比实际需要的要高

article. architect p表 示“ 包 含 在class等 于 architect 的 article 元素里的任何 p 元素”。
相比之下，特殊性低一些的 .architect p 表 示“包含在 class 等于 architect 的任意元素 里的所有 p 元素”

 .architect > p { color: red;
}
这个选择器仅选择 architect 类元素的 子元素(而非子子元素、子子子元素等)的 p 元素。 包含于任何其他元素的 p 元素均不会被选中

按相邻同胞元素选择要格式化的元素
同胞 (sibling)元素是拥有同一父元素的任何类型 的子元素。相邻同胞元素(adjacent sibling) 是直接相互毗邻的元素，即它们之间没有其 他的同胞元素。
 .architect p+p { color: red;
}
相邻同胞结合符只选择直接跟在同胞 p 元素之后的元素
只有直接跟在同胞 p 元素后面的 p 元素 显示为红色。如果后面还有第三个、第四个以及更 多的段落，它们也将显示为红色。
例如，如果要对 除第一个段落以外的所有段落进行缩进，相邻同胞 结合符就很有用

普通同胞结合符： 通过它可以选择那些并非直接出现在另一同 胞元素后面的同胞元素。它与相邻同胞结合 符的唯一区别是使用~(波浪号)代替 + 分 隔同胞元素。
例如，h1 ~ h2 { color: red; } 会让任何属于同一父元素的同胞 h1 后面的 h2 元素显示为红色(它们可以直接相邻，也可 以不直接相邻)。

5️⃣选择第一个或最后一个子元素
就要用到 :first-child 和 :last-child 伪 类

li:first-child { color: red;
}
这个选择器会选择作为父元素的第一个 子元素的 li 元素

假设你希望每个 li 的下边都有 20 像素的外边距，但最后一个 li 除外。你可 以设置li { margin-bottom: 0; margin-top: 20px; }，
让每个列表项目都拥有 20 像素的上 外边距，没有下外边距。然后使用 li:first- child { margin-top: 0; } 取消第一个元素的 上外边距。
这相当于反过来编写代码，但可 以达到完全一样的效果。

提 示 在伪类之前添加其他选择器可以使 其 特 殊 性 更 高。
例 如 .architect h1:first- child { color: red; } 仅 对 作 为 architect 类元素的第一个子元素的 h1 应用样式。

6️⃣选择元素的第一个字母或者第一行
我 们 可 以 分 别 使 用 :first-letter 和 :first-line 伪元素只选择元素的第一个字母 (参见图 9.6.1、图 9.6.2 和图 9.6.3)或第一行
如果要选择包含 在 project 类元素中的每个段落的第一个字 母，可以使用 .project p:first-letter。

只有某些特定的 CSS 属性可以应用于 :first-letter 伪 元 素， 包 括 font、color、 background、text-decoration、vertical- align(只要 :first-letter 不是浮动的)、
text-transform、line-height、margin、 padding、border、float 和 clear。我们将在 第 10 章和第 11 章讲到这些属性。

在 CSS3 中，:first-line 的 语 法 为 ::first-line，:first-letter 的 语 法 为 ::first- letter。注意，它们用两个冒号代替了单个冒号。这样修改的目的是将伪元素
(有四个， 包 括 ::first-line、::first-letter、::before 和 ::after) 与 伪 类( 如 :first-child、 :link、:hover 等)区分开。

7️⃣按状态选择链接元素
也可以对其他类型的元素使用 :active 和 :hover 伪类。例如，设置 p:hover { color: red; }以后，鼠标停留在任何段 落上段落都会显示为红色。

一定要 按照下面的顺序定义规则:link、visited、 focus、hover、active( 缩 写 为 LVFHA)。

8️⃣按属性选择元素
 p[class] { color: red;
}
方括号包围目标属性和目标属性值。这 个例子中没有属性值，它选择的是所有具有 class 属性的段落

如果选择 器是 p[class="intro"]，只有第一个段落会显 示为红色。如果选择器是 p[class^="intro"]，
则 第 一 个 段 落 以 及 class="introduction" 和 class="introductory" 的段落也显示为红色

如在 HTML 中，[lang|="en"] 会同时匹配 lang="en" 和 lang="en-US"
属性选择器参考表

选 择 器                           属 性 值
[attribute]                       匹配指定属性，不论具体值是什么
[attribute="value"]               完全匹配指定属性值
[attribute~="value"]              属性值是以空格分隔的多个单词，其中有一个完全匹配指定值
[attribute|="value"]              属性值以 value- 打头
[attribute^="value"]              属性值以 value 开头，value 为完整的单词或单词的一部分
[attribute$="value"]              属性值以 value 结尾，value 为完整的单词或单词的一部分
[attribute*="value"]              属性值为指定值的子字符串

更多属性选择器示例
对任何链 接到站外页面的 a 元素(即外部链接)添加 rel="external" 是非常好的习惯。
a[rel="external"] { color: red;
}

通过使用通用选择器，这个选择器选择任何带有 lang 属性且属性值以 es 开头的元素。
*[lang|="es"] { color: red;
}
通过联合使用多种方法，这个选择器选择所有既有任意 href 属性，又有任意属性值 包含单词 howdy 的 title 属性的 a 元素。a[href][title~="howdy"] { color: red;}

9️⃣指定元素组
  h1, h2 {color: red; 
}

提 示 可以组合使用任何类型的选择器，从 最简单的(如图 9.9.2 所示)到最复杂的都可 以。例如，可以使用 h2, .project p:first- letter 来选择二级标题以及包含在 class 等于 project 的所有元素中的 p 元素的第一个字母

🔟组合使用选择器
 .project h2[lang|="es"] + p em { color: red;}


所有 CSS3 选择器及其 完整描述见 www.w3.org/TR/css3-selectors/#selectors，简介与示例参见 www.w3.org/wiki/CSS/Selectors。








