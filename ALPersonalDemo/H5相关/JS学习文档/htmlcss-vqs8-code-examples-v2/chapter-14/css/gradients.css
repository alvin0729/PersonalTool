body {
	padding: 1.25em; /* 20px/16px, so 20px on each side */
	font-size: 100%;
}

div {
	float: left;
	height: 150px;
	margin: 10px;
	width: 150px;
}

p {
	color: #fff;
	font: bold 1.25em/1 sans-serif; /* 20px/16px */
	padding-top: 1.65em; /* 33px/16px */
	text-align: center;
}

/*
NOTE: The gradients below are in the standard CSS3 syntax. The browsers that 
support them are Chrome 26+, Firefox 16+, IE 10+, and Opera 12.10+. 

See gradients-with-browser-prefixes.css for the same gradient effects, 
but with the vendor prefix code also included so the gradients will work 
on several older browsers.

A background with a "fallback" comment is the color that will show 
in browsers that don't support the gradient syntax. You can use a background
image as a fallback as well (either on its own or in combination with a color).
For example, background: red url(gradient-image.jpg) no-repeat;.
*/


/* LINEAR GRADIENTS
------------------------------------------ */
/* :::: Vertical :::: */
.vertical-down {
	background: silver; /* fallback */

	/* default gradient, so you don't need to specify "to bottom" before the colors */
	background: linear-gradient(silver, black);
}

.vertical-up {
	background: silver;
	background: linear-gradient(to top, silver, black);
}

/* :::: Horizontal :::: */
.horizontal-rt {
	background: silver; /* fallback */
	background: linear-gradient(to right, silver, black);
}

.horizontal-lt {
	background: silver; /* fallback */
	background: linear-gradient(to left, silver, black);
}


/* :::: Diagonal Angles :::: */
/* Note: The figures on page 377 show aqua as the fallback color, but I've switched it
to navy below because the white text will be easier to read on a navy background. */

.angle-bot-rt {
	background: navy; /* fallback */
	background: linear-gradient(to bottom right, aqua, navy);
}

.angle-bot-lt {
	background: navy; /* fallback */
	background: linear-gradient(to bottom left, aqua, navy);
}

.angle-top-rt {
	background: navy; /* fallback */
	background: linear-gradient(to top right, aqua, navy);
}

.angle-top-lt {
	background: navy; /* fallback */
	background: linear-gradient(to top left, aqua, navy);
}

/* :::: Angles via Degrees :::: */
.angle-120deg {
	background: navy; /* fallback */
	background: linear-gradient(120deg, aqua, navy);
}

.angle-290deg {
	background: navy; /* fallback */
	background: linear-gradient(290deg, aqua, navy);
}


/*

数值代表的是圆周上的点的位置：0代表最顶端的点，90代表最左边的点，180 代表最底端的点，270 代表最右边的点。你列
出的值决定的是渐变结束的点的位置。因此，0deg等价于 to top，90deg 等价于 to right，以此类推。

 */





/* RADIAL GRADIENTS
------------------------------------------ */
/* :::: Radial :::: */
.radial p {
	text-shadow: 0 0 3px #000;
}

.radial-center {
	background: red; /* fallback */
	background: radial-gradient(yellow, red); /* default */
}

.radial-top {
	background: red; /* fallback */
	background: radial-gradient(at top, yellow, red);
}

.radial-size-1 {
	background: red; /* fallback */
	background: radial-gradient(100px 50px, yellow, red);
}

.radial-size-2 {
	background: red; /* fallback */
	background: radial-gradient(70% 90% at bottom left, yellow, red);/*   */
}

.radial-various-1 {
	background: red; /* fallback */
	background: radial-gradient(closest-side at 70px 60px, yellow, lime, red);
}

/*.radial-various-1   .radial-various-2
它们都有三个颜色。位于 at 后面的值指定的是渐变的中心坐标。在第二个例子中，30px 30px标记了渐变的尺寸。
在第一个例子中，closest-side 决定了渐变的尺寸，它告诉浏览器从中心（指定为 at 70px 60px）向包含该渐变的区域的最近的一边伸展。
 */


.radial-various-2 {
	background: red; /* fallback */
	background: radial-gradient(30px 30px at 65% 70%, yellow, lime, red);
}


/* LINEAR GRADIENTS WITH COLOR STOPS
------------------------------------------ */
.color-stops div {
	margin-bottom: 30px;
}

.color-stops p {
	padding-top: 25px;
	text-shadow: 0 0 3px #000;
}

.color-stops-2 p {
	font-size: 18px;
	line-height: 1.05;
}

.color-stops-1 {
	background: green; /* fallback */
	background: linear-gradient(yellow 10%, green);
}

.color-stops-2 {
	background: green; /* fallback */
	background: linear-gradient(to top right, yellow, green 70%, blue);
}

/*
2. 定义线性渐变
(1) 输入background: linear-gradient(。
(2) 如果你希望渐变的方向是从上往下（默认方向），则跳过这一步。
输入方向后面加一个逗号，这里的方向指的是 to top、to right、to left、to bottom right、to bottom left、to top right 或 to top left 这样的值。
或者输入方向后面加一个逗号，这里的方向指的是角度值（如 45deg、107deg、180deg 或 310deg）。

3. 定义径向渐变
(1) 输入background: radial-gradient(。
(2) 指定渐变的形状。如果你希望渐变的形状根据第 (3) 步中指定的尺寸自行确定，则跳过这一步。否则，输入circle或ellipse。（注意这一声明在某些情况下会被忽略。）

(3) 指定渐变的尺寸。如果你希望渐变的尺寸为自动指定的值（默认值为 farthestcorner，最远的角），则跳过这一步。输入 size，这里的 size 可以是同时代表渐变宽度和高度的一个长度值
（如 200px 或7em），也可以是代表宽度和高度的一对值（如390px 175px 或 60% 85%）。注意，如果只使用一个值，则这个值不能是百分数。
或者输入 size，这里的 size 是 closestside、farthest-side、closest-corner
或farthest-corner。这些关键字代表相对于渐变的中心，渐变可以伸展到多大的空间。边界决定了渐变的尺寸。

(4) 指定渐变的位置。如果你希望渐变从元素的中心开始（默认值），则跳过这一步。输 入 pos，这里的 pos 是 at top、at right、at left、at bottom right、at bottom
left、at top right 或 at top left 等表示渐变中心位置的值。或者输入 pos，这里的 pos 是表示渐变中心位置的一对坐标，并以 at 开头。例如 at 200px 43px、
at 33% 70%、at 50% -10px 等。仅指定一对。）

(5) 如果指定了第 (2) 步至第 (4) 步中的任何一步，输入一个逗号。需要说明的是，如果指定了这些步骤中的多个值，这些值之间不需要以逗号分隔。


不妨访问 Lea Verou 的CSS3 Patterns Gallery（http://lea.verou.me/css3patterns/）看看有哪些有趣的效果。

提 示 可以使用 Microsoft 提供的 CSS 渐变背௿制作器（http://ie.microsoft.com/testdrive/graphics/cssgradientbackgroundmaker/）这样
的可视化工具替代繁琐的代码编写工作。这个工具还可以帮你创建全部的厂商前缀属性，让渐变获得最大程度的浏览器支持。
ColorZilla 的渐变生成器（http://colorzilla.com/gradient-editor/）也是类似的，但需要注意的是通常它生成的代码要比实际需要的多得多。

 */


