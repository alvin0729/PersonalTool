{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c0\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww22420\viewh15940\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \
8.2 
\f1 \'b4\'ab\'b5\'dd\'ca\'b5\'b2\'ce
\f0 \
8.2.1 
\f1 \'ce\'bb\'d6\'c3\'ca\'b5\'b2\'ce
\f0 \
 
\f1 \'d7\'ee\'bc\'f2\'b5\'a5\'b5\'c4\'b9\'d8\'c1\'aa\'b7\'bd\'ca\'bd\'ca\'c7\'bb\'f9\'d3\'da\'ca\'b5\'b2\'ce\'b5\'c4\'cb\'b3\'d0\'f2\'a1\'a3
\f0  
\f1 \'d5\'e2\'d6\'d6\'b9\'d8\'c1\'aa\'b7\'bd\'ca\'bd\'b1\'bb\'b3\'c6\'ce\'aa\'ce\'bb\'d6\'c3\'ca\'b5\'b2\'ce
\f0  
\f1 \'a1\'a3
\f0 \
1. 
\f1 \'b5\'f7\'d3\'c3\'ba\'af\'ca\'fd\'b6\'e0\'b4\'ce
\f0 \
2. 
\f1 \'ce\'bb\'d6\'c3\'ca\'b5\'b2\'ce\'b5\'c4\'cb\'b3\'d0\'f2\'ba\'dc\'d6\'d8\'d2\'aa
\f0 \
\
8.2.2 
\f1 \'b9\'d8\'bc\'fc\'d7\'d6\'ca\'b5\'b2\'ce
\f0 \

\f1 \'b9\'d8\'bc\'fc\'d7\'d6\'ca\'b5\'b2\'ce
\f0  
\f1 \'ca\'c7\'b4\'ab\'b5\'dd\'b8\'f8\'ba\'af\'ca\'fd\'b5\'c4\'c3\'fb\'b3\'c6
\f0 \'97
\f1 \'d6\'b5\'b6\'d4\'a1\'a3
\f0  
\f1 \'c4\'e3\'d6\'b1\'bd\'d3\'d4\'da\'ca\'b5\'b2\'ce\'d6\'d0\'bd\'ab\'c3\'fb\'b3\'c6\'ba\'cd\'d6\'b5\'b9\'d8\'c1\'aa\'c6\'f0\'c0\'b4\'c1\'cb\'a3\'ac
\f0  
\f1 \'d2\'f2\'b4\'cb\'cf\'f2\'ba\'af\'ca\'fd\'b4\'ab\'b5\'dd\'ca\'b5\'b2\'ce\'ca\'b1\'b2\'bb\'bb\'e1\'bb\'ec\'cf\'fd\'a3\'a8
\f0  
\f1 \'b2\'bb\'bb\'e1\'b5\'c3\'b5\'bd\'c3\'fb\'ce\'aa
\f0 Hamster
\f1 \'b5\'c4
\f0 harry
\f1 \'d5\'e2\'d1\'f9\'b5\'c4\'bd\'e1\'b9\'fb\'a3\'a9
\f0  
\f1 \'a1\'a3
\f0  \
def describe_pet(animal_type, pet_name):\
    """
\f1 \'cf\'d4\'ca\'be\'b3\'e8\'ce\'ef\'b5\'c4\'d0\'c5\'cf\'a2
\f0 """\
    print("\\nI have a " + animal_type + ".")\
    print("My " + animal_type + "'s name is " + pet_name.title() + ".")\
describe_pet(animal_type='hamster', pet_name='harry')\
\
describe_pet(animal_type='hamster', pet_name='harry')\
describe_pet(pet_name='harry', animal_type='hamster')\
\
8.2.3 
\f1 \'c4\'ac\'c8\'cf\'d6\'b5
\f0 \

\f1 \'b1\'e0\'d0\'b4\'ba\'af\'ca\'fd\'ca\'b1\'a3\'ac
\f0  
\f1 \'bf\'c9\'b8\'f8\'c3\'bf\'b8\'f6\'d0\'ce\'b2\'ce\'d6\'b8\'b6\'a8\'c4\'ac\'c8\'cf\'d6\'b5
\f0  
\f1 \'a1\'a3
\f0 \
def describe_pet(pet_name, animal_type='dog'):\
    """
\f1 \'cf\'d4\'ca\'be\'b3\'e8\'ce\'ef\'b5\'c4\'d0\'c5\'cf\'a2
\f0 """\
    print("\\nI have a " + animal_type + ".")\
    print("My " + animal_type + "'s name is " + pet_name.title() + ".")\
describe_pet(pet_name='willie')\
describe_pet('willie')\
describe_pet(pet_name='harry', animal_type='hamster')\
\

\f1 \'d7\'a2\'d2\'e2
\f0  
\f1 \'ca\'b9\'d3\'c3\'c4\'ac\'c8\'cf\'d6\'b5\'ca\'b1\'a3\'ac
\f0  
\f1 \'d4\'da\'d0\'ce\'b2\'ce\'c1\'d0\'b1\'ed\'d6\'d0\'b1\'d8\'d0\'eb\'cf\'c8\'c1\'d0\'b3\'f6\'c3\'bb\'d3\'d0\'c4\'ac\'c8\'cf\'d6\'b5\'b5\'c4\'d0\'ce\'b2\'ce\'a3\'ac
\f0  
\f1 \'d4\'d9\'c1\'d0\'b3\'f6\'d3\'d0\'c4\'ac\'c8\'cf\'d6\'b5\'b5\'c4\'ca\'b5\'b2\'ce\'a1\'a3
\f0  \
\
8.2.4 
\f1 \'b5\'c8\'d0\'a7\'b5\'c4\'ba\'af\'ca\'fd\'b5\'f7\'d3\'c3
\f0 \
def describe_pet(pet_name, animal_type='dog'):\

\f1 \'cf\'c2\'c3\'e6\'b6\'d4\'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'b5\'c4\'cb\'f9\'d3\'d0\'b5\'f7\'d3\'c3\'b6\'bc\'bf\'c9\'d0\'d0\'a3\'ba
\f0 \
# 
\f1 \'d2\'bb\'cc\'f5\'c3\'fb\'ce\'aa
\f0 Willie
\f1 \'b5\'c4\'d0\'a1\'b9\'b7
\f0 \
describe_pet('willie')\
describe_pet(pet_name='willie')\
# 
\f1 \'d2\'bb\'d6\'bb\'c3\'fb\'ce\'aa
\f0 Harry
\f1 \'b5\'c4\'b2\'d6\'ca\'f3
\f0 \
describe_pet('harry', 'hamster')\
describe_pet(pet_name='harry', animal_type='hamster')\
describe_pet(animal_type='hamster', pet_name='harry')\
\
8.2.5 
\f1 \'b1\'dc\'c3\'e2\'ca\'b5\'b2\'ce\'b4\'ed\'ce\'f3
\f0 \
\
8.3 
\f1 \'b7\'b5\'bb\'d8\'d6\'b5
\f0 \
8.3.1 
\f1 \'b7\'b5\'bb\'d8\'bc\'f2\'b5\'a5\'d6\'b5
\f0 \
def get_formatted_name(first_name, last_name):\
    """
\f1 \'b7\'b5\'bb\'d8\'d5\'fb\'bd\'e0\'b5\'c4\'d0\'d5\'c3\'fb
\f0 """\
    full_name = first_name + ' ' + last_name\
    return full_name.title()\
musician = get_formatted_name('jimi', 'hendrix')\
print(musician)\
\
8.3.2 
\f1 \'c8\'c3\'ca\'b5\'b2\'ce\'b1\'e4\'b3\'c9\'bf\'c9\'d1\'a1\'b5\'c4
\f0 \
def get_formatted_name(first_name, last_name, middle_name=''):\
    """
\f1 \'b7\'b5\'bb\'d8\'d5\'fb\'bd\'e0\'b5\'c4\'d0\'d5\'c3\'fb
\f0 """\
    f middle_name:\
        full_name = first_name + ' ' + middle_name + ' ' + last_name\
    else:\
        full_name = first_name + ' ' + last_name\
    return full_name.title()\
musician = get_formatted_name('jimi', 'hendrix')\
print(musician)\
musician = get_formatted_name('john', 'hooker', 'lee')\
print(musician)\
\
8.3.3 
\f1 \'b7\'b5\'bb\'d8\'d7\'d6\'b5\'e4
\f0 \
def build_person(first_name, last_name):\
    """
\f1 \'b7\'b5\'bb\'d8\'d2\'bb\'b8\'f6\'d7\'d6\'b5\'e4\'a3\'ac
\f0  
\f1 \'c6\'e4\'d6\'d0\'b0\'fc\'ba\'ac\'d3\'d0\'b9\'d8\'d2\'bb\'b8\'f6\'c8\'cb\'b5\'c4\'d0\'c5\'cf\'a2
\f0 """\
    person = \{'first': first_name, 'last': last_name\}\
    return person\
musician = build_person('jimi', 'hendrix')\
print(musician)\
\
8.3.4 
\f1 \'bd\'e1\'ba\'cf\'ca\'b9\'d3\'c3\'ba\'af\'ca\'fd\'ba\'cd
\f0 while 
\f1 \'d1\'ad\'bb\'b7
\f0 \
def get_formatted_name(first_name, last_name):\
    """
\f1 \'b7\'b5\'bb\'d8\'d5\'fb\'bd\'e0\'b5\'c4\'d0\'d5\'c3\'fb
\f0 """\
    full_name = first_name + ' ' + last_name\
    return full_name.title()\
# 
\f1 \'d5\'e2\'ca\'c7\'d2\'bb\'b8\'f6\'ce\'de\'cf\'de\'d1\'ad\'bb\'b7
\f0 !\
while True:\
    print("\\nPlease tell me your name:")\
    print("(enter 'q' at any time to quit)")\
    f_name = input("First name: ")\
    if f_name == 'q':\
        break\
    l_name = input("Last name: ")\
    if l_name == 'q':\
        break\
    formatted_name = get_formatted_name(f_name, l_name)\
    print("\\nHello, " + formatted_name + "!")\
\
\
8.4 
\f1 \'b4\'ab\'b5\'dd\'c1\'d0\'b1\'ed
\f0 \
8.4.1 
\f1 \'d4\'da\'ba\'af\'ca\'fd\'d6\'d0\'d0\'de\'b8\'c4\'c1\'d0\'b1\'ed
\f0 \

\f1 \'bd\'ab\'c1\'d0\'b1\'ed\'b4\'ab\'b5\'dd\'b8\'f8\'ba\'af\'ca\'fd\'ba\'f3\'a3\'ac
\f0  
\f1 \'ba\'af\'ca\'fd\'be\'cd\'bf\'c9\'b6\'d4\'c6\'e4\'bd\'f8\'d0\'d0\'d0\'de\'b8\'c4\'a1\'a3
\f0  
\f1 \'d4\'da\'ba\'af\'ca\'fd\'d6\'d0\'b6\'d4\'d5\'e2\'b8\'f6\'c1\'d0\'b1\'ed\'cb\'f9\'d7\'f6\'b5\'c4\'c8\'ce\'ba\'ce\'d0\'de\'b8\'c4\'b6\'bc\'ca\'c7\'d3\'c0\'be\'c3\'d0\'d4\'b5\'c4
\f0 \
def print_models(unprinted_designs, completed_models):\
    """\
    
\f1 \'c4\'a3\'c4\'e2\'b4\'f2\'d3\'a1\'c3\'bf\'b8\'f6\'c9\'e8\'bc\'c6\'a3\'ac
\f0  
\f1 \'d6\'b1\'b5\'bd\'c3\'bb\'d3\'d0\'ce\'b4\'b4\'f2\'d3\'a1\'b5\'c4\'c9\'e8\'bc\'c6\'ce\'aa\'d6\'b9
\f0 \
    
\f1 \'b4\'f2\'d3\'a1\'c3\'bf\'b8\'f6\'c9\'e8\'bc\'c6\'ba\'f3\'a3\'ac
\f0  
\f1 \'b6\'bc\'bd\'ab\'c6\'e4\'d2\'c6\'b5\'bd\'c1\'d0\'b1\'ed
\f0 completed_models
\f1 \'d6\'d0
\f0 \
    """\
    while unprinted_designs:\
        current_design = unprinted_designs.pop()\
        # 
\f1 \'c4\'a3\'c4\'e2\'b8\'f9\'be\'dd\'c9\'e8\'bc\'c6\'d6\'c6\'d7\'f7
\f0 3D
\f1 \'b4\'f2\'d3\'a1\'c4\'a3\'d0\'cd\'b5\'c4\'b9\'fd\'b3\'cc
\f0 \
        print("Printing model: " + current_design)\
        completed_models.append(current_design)\
def show_completed_models(completed_models):\
    """
\f1 \'cf\'d4\'ca\'be\'b4\'f2\'d3\'a1\'ba\'c3\'b5\'c4\'cb\'f9\'d3\'d0\'c4\'a3\'d0\'cd
\f0 """\
    print("\\nThe following models have been printed:")\
    for completed_model in completed_models:\
        print(completed_model)\
\
unprinted_designs = ['iphone case', 'robot pendant', 'dodecahedron']\
completed_models = []\
\
print_models(unprinted_designs, completed_models)\
show_completed_models(completed_models)\
\
8.4.2 
\f1 \'bd\'fb\'d6\'b9\'ba\'af\'ca\'fd\'d0\'de\'b8\'c4\'c1\'d0\'b1\'ed
\f0 \

\f1 \'d2\'aa\'bd\'ab\'c1\'d0\'b1\'ed\'b5\'c4\'b8\'b1\'b1\'be\'b4\'ab\'b5\'dd\'b8\'f8\'ba\'af\'ca\'fd\'a3\'ac
\f0  
\f1 \'bf\'c9\'d2\'d4\'cf\'f1\'cf\'c2\'c3\'e6\'d5\'e2\'d1\'f9\'d7\'f6\'a3\'ba
\f0 \
function_name(list_name[:])\

\f1 \'c7\'d0\'c6\'ac\'b1\'ed\'ca\'be\'b7\'a8
\f0 \cf2 [:]\cf0  
\f1 \'b4\'b4\'bd\'a8\'c1\'d0\'b1\'ed\'b5\'c4\'b8\'b1\'b1\'be\'a1\'a3
\f0  \

\f1 \'c8\'e7\'b9\'fb\'b2\'bb\'cf\'eb\'c7\'e5\'bf\'d5\'ce\'b4\'b4\'f2\'d3\'a1\'b5\'c4\'c9\'e8\'bc\'c6\'c1\'d0\'b1\'ed
\f0 : print_models(unprinted_designs[:], completed_models)\
\
8.5 
\f1 \'b4\'ab\'b5\'dd\'c8\'ce\'d2\'e2\'ca\'fd\'c1\'bf\'b5\'c4\'ca\'b5\'b2\'ce
\f0 \

\f1 \'d0\'ce\'b2\'ce\'c3\'fb
\f0 *toppings 
\f1 \'d6\'d0\'b5\'c4\'d0\'c7\'ba\'c5\'c8\'c3
\f0 Python
\f1 \'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'c3\'fb\'ce\'aa
\f0 toppings 
\f1 \'b5\'c4\'bf\'d5\'d4\'aa\'d7\'e9\'a3\'ac
\f0  
\f1 \'b2\'a2\'bd\'ab\'ca\'d5\'b5\'bd\'b5\'c4\'cb\'f9\'d3\'d0\'d6\'b5\'b6\'bc\'b7\'e2\'d7\'b0\'b5\'bd\'d5\'e2\'b8\'f6\'d4\'aa\'d7\'e9\'d6\'d0\'a1\'a3
\f0 \
def make_pizza(*toppings):\
    """
\f1 \'b4\'f2\'d3\'a1\'b9\'cb\'bf\'cd\'b5\'e3\'b5\'c4\'cb\'f9\'d3\'d0\'c5\'e4\'c1\'cf
\f0 """\
    print(toppings)\
make_pizza('pepperoni')\
make_pizza('mushrooms', 'green peppers', 'extra cheese')\
\
def make_pizza(*toppings):\
   """
\f1 \'b8\'c5\'ca\'f6\'d2\'aa\'d6\'c6\'d7\'f7\'b5\'c4\'b1\'c8\'c8\'f8
\f0 """\
   print("\\nMaking a pizza with the following toppings:")\
   for topping in toppings:\
       print("- " + topping)\
make_pizza('pepperoni')\
\
8.5.1 
\f1 \'bd\'e1\'ba\'cf\'ca\'b9\'d3\'c3\'ce\'bb\'d6\'c3\'ca\'b5\'b2\'ce\'ba\'cd\'c8\'ce\'d2\'e2\'ca\'fd\'c1\'bf\'ca\'b5\'b2\'ce
\f0 \

\f1 \'c8\'e7\'b9\'fb\'d2\'aa\'c8\'c3\'ba\'af\'ca\'fd\'bd\'d3\'ca\'dc\'b2\'bb\'cd\'ac\'c0\'e0\'d0\'cd\'b5\'c4\'ca\'b5\'b2\'ce\'a3\'ac
\f0  
\f1 \'b1\'d8\'d0\'eb\'d4\'da\'ba\'af\'ca\'fd\'b6\'a8\'d2\'e5\'d6\'d0\'bd\'ab\'bd\'d3\'c4\'c9\'c8\'ce\'d2\'e2\'ca\'fd\'c1\'bf\'ca\'b5\'b2\'ce\'b5\'c4\'d0\'ce\'b2\'ce\'b7\'c5\'d4\'da\'d7\'ee\'ba\'f3\'a1\'a3
\f0  Python
\f1 \'cf\'c8\'c6\'a5\'c5\'e4\'ce\'bb\'d6\'c3\'ca\'b5\'b2\'ce\'ba\'cd\'b9\'d8\'bc\'fc\'d7\'d6\'ca\'b5\'b2\'ce\'a3\'ac
\f0  
\f1 \'d4\'d9\'bd\'ab\'d3\'e0\'cf\'c2\'b5\'c4\'ca\'b5\'b2\'ce\'b6\'bc\'ca\'d5\'bc\'af\'b5\'bd\'d7\'ee\'ba\'f3\'d2\'bb\'b8\'f6\'d0\'ce\'b2\'ce\'d6\'d0
\f0 \
def make_pizza(size, *toppings):\
   """
\f1 \'b8\'c5\'ca\'f6\'d2\'aa\'d6\'c6\'d7\'f7\'b5\'c4\'b1\'c8\'c8\'f8
\f0 """\
   print("\\nMaking a " + str(size) + "-inch pizza with the following toppings:")\
   for topping in toppings:\
      print("- " + topping)\
make_pizza(16, 'pepperoni')\
make_pizza(12, 'mushrooms', 'green peppers', 'extra cheese')\
\
8.5.2 
\f1 \'ca\'b9\'d3\'c3\'c8\'ce\'d2\'e2\'ca\'fd\'c1\'bf\'b5\'c4\'b9\'d8\'bc\'fc\'d7\'d6\'ca\'b5\'b2\'ce
\f0 \

\f1 \'d3\'d0\'ca\'b1\'ba\'f2\'a3\'ac
\f0  
\f1 \'d0\'e8\'d2\'aa\'bd\'d3\'ca\'dc\'c8\'ce\'d2\'e2\'ca\'fd\'c1\'bf\'b5\'c4\'ca\'b5\'b2\'ce\'a3\'ac
\f0  
\f1 \'b5\'ab\'d4\'a4\'cf\'c8\'b2\'bb\'d6\'aa\'b5\'c0\'b4\'ab\'b5\'dd\'b8\'f8\'ba\'af\'ca\'fd\'b5\'c4\'bb\'e1\'ca\'c7\'ca\'b2\'c3\'b4\'d1\'f9\'b5\'c4\'d0\'c5\'cf\'a2\'a1\'a3
\f0 \

\f1 \'bf\'c9\'bd\'ab\'ba\'af\'ca\'fd\'b1\'e0\'d0\'b4\'b3\'c9\'c4\'dc\'b9\'bb\'bd\'d3\'ca\'dc\'c8\'ce\'d2\'e2\'ca\'fd\'c1\'bf\'b5\'c4\'bc\'fc
\f0 \'97
\f1 \'d6\'b5\'b6\'d4
\f0 \'97\'97
\f1 \'b5\'f7\'d3\'c3\'d3\'ef\'be\'e4\'cc\'e1\'b9\'a9\'c1\'cb\'b6\'e0\'c9\'d9\'be\'cd\'bd\'d3\'ca\'dc\'b6\'e0\'c9\'d9\'a1\'a3
\f0 \
def build_profile(first, last, **user_info):\
    """
\f1 \'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'d7\'d6\'b5\'e4\'a3\'ac
\f0  
\f1 \'c6\'e4\'d6\'d0\'b0\'fc\'ba\'ac\'ce\'d2\'c3\'c7\'d6\'aa\'b5\'c0\'b5\'c4\'d3\'d0\'b9\'d8\'d3\'c3\'bb\'a7\'b5\'c4\'d2\'bb\'c7\'d0
\f0 """\
    profile = \{\}\
    profile['first_name'] = first\
    profile['last_name'] = last\
    for key, value in user_info.items():\
        profile[key] = value\
    return profile\
user_profile = build_profile('albert', 'einstein',location='princeton',field='physics')\
print(user_profile)\
\
8.6 
\f1 \'bd\'ab\'ba\'af\'ca\'fd\'b4\'e6\'b4\'a2\'d4\'da\'c4\'a3\'bf\'e9\'d6\'d0\
8.6.1 \'b5\'bc\'c8\'eb\'d5\'fb\'b8\'f6\'c4\'a3\'bf\'e9
\f0 \
\cb2 pizza.py\cb1 \
def make_pizza(size, *toppings):\
    """
\f1 \'b8\'c5\'ca\'f6\'d2\'aa\'d6\'c6\'d7\'f7\'b5\'c4\'b1\'c8\'c8\'f8
\f0 """\
    print("\\nMaking a " + str(size) + "-inch pizza with the following toppings:")\
    for topping in toppings:\
        print("- " + topping)\
\
import pizza\
pizza.make_pizza(16, 'pepperoni')\
pizza.make_pizza(12, 'mushrooms', 'green peppers', 'extra cheese')\
\
8.6.2 
\f1 \'b5\'bc\'c8\'eb\'cc\'d8\'b6\'a8\'b5\'c4\'ba\'af\'ca\'fd
\f0 \
from module_name import function_name\
from module_name import function_0, function_1, function_2\
\
from pizza import make_pizza\
make_pizza(16, 'pepperoni')\
make_pizza(12, 'mushrooms', 'green peppers', 'extra cheese')\
\
8.6.3 
\f1 \'ca\'b9\'d3\'c3
\f0 as 
\f1 \'b8\'f8\'ba\'af\'ca\'fd\'d6\'b8\'b6\'a8\'b1\'f0\'c3\'fb
\f0 \
from pizza import make_pizza as mp\
mp(16, 'pepperoni')\
mp(12, 'mushrooms', 'green peppers', 'extra cheese')\
\

\f1 \'d6\'b8\'b6\'a8\'b1\'f0\'c3\'fb\'b5\'c4\'cd\'a8\'d3\'c3\'d3\'ef\'b7\'a8\'c8\'e7\'cf\'c2\'a3\'ba
\f0 \
from module_name import function_name as fn\
\
8.6.4 
\f1 \'ca\'b9\'d3\'c3
\f0 as 
\f1 \'b8\'f8\'c4\'a3\'bf\'e9\'d6\'b8\'b6\'a8\'b1\'f0\'c3\'fb
\f0 \
import pizza as p\
p.make_pizza(16, 'pepperoni')\
p.make_pizza(12, 'mushrooms', 'green peppers', 'extra cheese')\
\
8.6.5 
\f1 \'b5\'bc\'c8\'eb\'c4\'a3\'bf\'e9\'d6\'d0\'b5\'c4\'cb\'f9\'d3\'d0\'ba\'af\'ca\'fd
\f0 \

\f1 \'ca\'b9\'d3\'c3\'d0\'c7\'ba\'c5\'a3\'a8
\f0  * 
\f1 \'a3\'a9
\f0  
\f1 \'d4\'cb\'cb\'e3\'b7\'fb\'bf\'c9\'c8\'c3
\f0 Python
\f1 \'b5\'bc\'c8\'eb\'c4\'a3\'bf\'e9\'d6\'d0\'b5\'c4\'cb\'f9\'d3\'d0\'ba\'af\'ca\'fd\'a3\'ba
\f0 \
from pizza import *\
make_pizza(16, 'pepperoni')\
make_pizza(12, 'mushrooms', 'green peppers', 'extra cheese')\
\
\

\f1 \'b5\'da
\f0  9 
\f1 \'d5\'c2
\f0  
\f1 \'c0\'e0
\f0 \
9.1 
\f1 \'b4\'b4\'bd\'a8\'ba\'cd\'ca\'b9\'d3\'c3\'c0\'e0
\f0 \
9.1.1 
\f1 \'b4\'b4\'bd\'a8
\f0 Dog 
\f1 \'c0\'e0
\f0 \
class Dog():\
    """
\f1 \'d2\'bb\'b4\'ce\'c4\'a3\'c4\'e2\'d0\'a1\'b9\'b7\'b5\'c4\'bc\'f2\'b5\'a5\'b3\'a2\'ca\'d4
\f0 """\
    def __init__(self, name, age):\
        """
\f1 \'b3\'f5\'ca\'bc\'bb\'af\'ca\'f4\'d0\'d4
\f0 name
\f1 \'ba\'cd
\f0 age"""\
        self.name = name\
        self.age = age\
    def sit(self):\
        """
\f1 \'c4\'a3\'c4\'e2\'d0\'a1\'b9\'b7\'b1\'bb\'c3\'fc\'c1\'ee\'ca\'b1\'b6\'d7\'cf\'c2
\f0 """\
        print(self.name.title() + " is now sitting.")\
    def roll_over(self):\
        """
\f1 \'c4\'a3\'c4\'e2\'d0\'a1\'b9\'b7\'b1\'bb\'c3\'fc\'c1\'ee\'ca\'b1\'b4\'f2\'b9\'f6
\f0 """\
        print(self.name.title() + " rolled over!")\
1. 
\f1 \'b7\'bd\'b7\'a8
\f0 __init__()\

\f1 \'d0\'ce\'b2\'ce
\f0 self 
\f1 \'b1\'d8\'b2\'bb\'bf\'c9\'c9\'d9\'a3\'ac
\f0  
\f1 \'bb\'b9\'b1\'d8\'d0\'eb\'ce\'bb\'d3\'da\'c6\'e4\'cb\'fb\'d0\'ce\'b2\'ce\'b5\'c4\'c7\'b0\'c3\'e6\'a1\'a3
\f0  \

\f1 \'d2\'d4
\f0 self 
\f1 \'ce\'aa\'c7\'b0\'d7\'ba\'b5\'c4\'b1\'e4\'c1\'bf\'b6\'bc\'bf\'c9\'b9\'a9\'c0\'e0\'d6\'d0\'b5\'c4\'cb\'f9\'d3\'d0\'b7\'bd\'b7\'a8\'ca\'b9\'d3\'c3\'a3\'ac
\f0  
\f1 \'ce\'d2\'c3\'c7\'bb\'b9\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'c0\'e0\'b5\'c4\'c8\'ce\'ba\'ce\'ca\'b5\'c0\'fd\'c0\'b4\'b7\'c3\'ce\'ca\'d5\'e2\'d0\'a9\'b1\'e4\'c1\'bf\'a1\'a3
\f0 \
 sit() 
\f1 \'ba\'cd
\f0 roll_over() 
\f1 :
\f0  
\f1 \'d3\'c9\'d3\'da\'d5\'e2\'d0\'a9\'b7\'bd\'b7\'a8\'b2\'bb\'d0\'e8\'d2\'aa\'b6\'ee\'cd\'e2\'b5\'c4\'d0\'c5\'cf\'a2\'a3\'ac
\f0  
\f1 \'c8\'e7\'c3\'fb\'d7\'d6\'bb\'f2\'c4\'ea\'c1\'e4\'a3\'ac
\f0  
\f1 \'d2\'f2\'b4\'cb\'cb\'fc\'c3\'c7\'d6\'bb\'d3\'d0\'d2\'bb\'b8\'f6\'d0\'ce\'b2\'ce
\f0 self 
\f1 \'a1\'a3
\f0 \
\
9.1.2 
\f1 \'b8\'f9\'be\'dd\'c0\'e0\'b4\'b4\'bd\'a8\'ca\'b5\'c0\'fd
\f0 \
my_dog = Dog('willie', 6)\
print("My dog's name is " + my_dog.name.title() + ".")\
print("My dog is " + str(my_dog.age) + " years old.")\
\
1. 
\f1 \'b7\'c3\'ce\'ca\'ca\'f4\'d0\'d4
\f0 \
my_dog.name\
2. 
\f1 \'b5\'f7\'d3\'c3\'b7\'bd\'b7\'a8
\f0 \
my_dog = Dog('willie', 6)\
my_dog.sit()\
my_dog.roll_over()\
3. 
\f1 \'b4\'b4\'bd\'a8\'b6\'e0\'b8\'f6\'ca\'b5\'c0\'fd
\f0 \
my_dog = Dog('willie', 6)\
your_dog = Dog('lucy', 3)\
\
print("My dog's name is " + my_dog.name.title() + ".")\
print("My dog is " + str(my_dog.age) + " years old.")\
my_dog.sit()\
\
print("\\nYour dog's name is " + your_dog.name.title() + ".")\
print("Your dog is " + str(your_dog.age) + " years old.")\
your_dog.sit()\
\
9.2 
\f1 \'ca\'b9\'d3\'c3\'c0\'e0\'ba\'cd\'ca\'b5\'c0\'fd
\f0 \
9.2.1 Car 
\f1 \'c0\'e0
\f0 \
class Car():\
    """
\f1 \'d2\'bb\'b4\'ce\'c4\'a3\'c4\'e2\'c6\'fb\'b3\'b5\'b5\'c4\'bc\'f2\'b5\'a5\'b3\'a2\'ca\'d4
\f0 """\
    def __init__(self, make, model, year):\
        """
\f1 \'b3\'f5\'ca\'bc\'bb\'af\'c3\'e8\'ca\'f6\'c6\'fb\'b3\'b5\'b5\'c4\'ca\'f4\'d0\'d4
\f0 """\
        self.make = make\
        self.model = model\
        self.year = year\
\
    def get_descriptive_name(self):\
        """
\f1 \'b7\'b5\'bb\'d8\'d5\'fb\'bd\'e0\'b5\'c4\'c3\'e8\'ca\'f6\'d0\'d4\'d0\'c5\'cf\'a2
\f0 """\
        long_name = str(self.year) + ' ' + self.make + ' ' + self.model\
        return long_name.title()\
my_new_car = Car('audi', 'a4', 2016)\
print(my_new_car.get_descriptive_name())\
\
9.2.2 
\f1 \'b8\'f8\'ca\'f4\'d0\'d4\'d6\'b8\'b6\'a8\'c4\'ac\'c8\'cf\'d6\'b5\
\'cc\'ed\'bc\'d3\'d2\'bb\'b8\'f6\'c3\'fb\'ce\'aaodometer_reading \'b5\'c4\'ca\'f4\'d0\'d4\'a3\'ac \'c6\'e4\'b3\'f5\'ca\'bc\'d6\'b5\'d7\'dc\'ca\'c7\'ce\'aa0\'a1\'a3 
\f0 \
class Car():\
    """
\f1 \'d2\'bb\'b4\'ce\'c4\'a3\'c4\'e2\'c6\'fb\'b3\'b5\'b5\'c4\'bc\'f2\'b5\'a5\'b3\'a2\'ca\'d4
\f0 """\
    def __init__(self, make, model, year):\
        """
\f1 \'b3\'f5\'ca\'bc\'bb\'af\'c3\'e8\'ca\'f6\'c6\'fb\'b3\'b5\'b5\'c4\'ca\'f4\'d0\'d4
\f0 """\
        self.make = make\
        self.model = model\
        self.year = year\
        self.odometer_reading = 0\
\
    def get_descriptive_name(self):\
        """
\f1 \'b7\'b5\'bb\'d8\'d5\'fb\'bd\'e0\'b5\'c4\'c3\'e8\'ca\'f6\'d0\'d4\'d0\'c5\'cf\'a2
\f0 """\
        long_name = str(self.year) + ' ' + self.make + ' ' + self.model\
        return long_name.title()\
    def read_odometer(self):\
        """
\f1 \'b4\'f2\'d3\'a1\'d2\'bb\'cc\'f5\'d6\'b8\'b3\'f6\'c6\'fb\'b3\'b5\'c0\'ef\'b3\'cc\'b5\'c4\'cf\'fb\'cf\'a2
\f0 """\
        print("This car has " + str(self.odometer_reading) + " miles on it.")\
my_new_car = Car('audi', 'a4', 2016)\
print(my_new_car.get_descriptive_name())\
my_new_car.read_odometer()\
\
9.2.3 
\f1 \'d0\'de\'b8\'c4\'ca\'f4\'d0\'d4\'b5\'c4\'d6\'b5\
1. \'d6\'b1\'bd\'d3\'d0\'de\'b8\'c4\'ca\'f4\'d0\'d4\'b5\'c4\'d6\'b5
\f0 \
my_new_car = Car('audi', 'a4', 2016)\
print(my_new_car.get_descriptive_name())\
my_new_car.odometer_reading = 23\
my_new_car.read_odometer()\
\
2. 
\f1 \'cd\'a8\'b9\'fd\'b7\'bd\'b7\'a8\'d0\'de\'b8\'c4\'ca\'f4\'d0\'d4\'b5\'c4\'d6\'b5
\f0 \
def update_odometer(self, mileage):\
    """
\f1 \'bd\'ab\'c0\'ef\'b3\'cc\'b1\'ed\'b6\'c1\'ca\'fd\'c9\'e8\'d6\'c3\'ce\'aa\'d6\'b8\'b6\'a8\'b5\'c4\'d6\'b5
\f0 """\
    self.odometer_reading = mileage\
\
my_new_car = Car('audi', 'a4', 2016)\
print(my_new_car.get_descriptive_name())\
my_new_car.update_odometer(23)\
my_new_car.read_odometer()\
\
3. 
\f1 \'cd\'a8\'b9\'fd\'b7\'bd\'b7\'a8\'b6\'d4\'ca\'f4\'d0\'d4\'b5\'c4\'d6\'b5\'bd\'f8\'d0\'d0\'b5\'dd\'d4\'f6
\f0 \
def increment_odometer(self, miles):\
    """
\f1 \'bd\'ab\'c0\'ef\'b3\'cc\'b1\'ed\'b6\'c1\'ca\'fd\'d4\'f6\'bc\'d3\'d6\'b8\'b6\'a8\'b5\'c4\'c1\'bf
\f0 """\
    self.odometer_reading += miles\
\
\
9.3 
\f1 \'bc\'cc\'b3\'d0
\f0 \
9.3.1 
\f1 \'d7\'d3\'c0\'e0\'b5\'c4\'b7\'bd\'b7\'a8
\f0 __init__()\
class Car():\
    """
\f1 \'d2\'bb\'b4\'ce\'c4\'a3\'c4\'e2\'c6\'fb\'b3\'b5\'b5\'c4\'bc\'f2\'b5\'a5\'b3\'a2\'ca\'d4
\f0 """\
    def __init__(self, make, model, year):\
        self.make = make\
        self.model = model\
        self.year = year\
        self.odometer_reading = 0\
    def get_descriptive_name(self):\
        long_name = str(self.year) + ' ' + self.make + ' ' + self.model\
        return long_name.title()\
    def read_odometer(self):\
        print("This car has " + str(self.odometer_reading) + " miles on it.")\
    def update_odometer(self, mileage):\
        if mileage >= self.odometer_reading:\
            self.odometer_reading = mileage\
        else:\
            print("You can't roll back an odometer!")\
    def increment_odometer(self, miles):\
        self.odometer_reading += miles\
\
class ElectricCar(Car):\
    """
\f1 \'b5\'e7\'b6\'af\'c6\'fb\'b3\'b5\'b5\'c4\'b6\'c0\'cc\'d8\'d6\'ae\'b4\'a6
\f0 """\
    def __init__(self, make, model, year):\
        """
\f1 \'b3\'f5\'ca\'bc\'bb\'af\'b8\'b8\'c0\'e0\'b5\'c4\'ca\'f4\'d0\'d4
\f0 """\
        super().__init__(make, model, year)\
my_tesla = ElectricCar('tesla', 'model s', 2016)\
print(my_tesla.get_descriptive_name())\
\
\
9.3.3 
\f1 \'b8\'f8\'d7\'d3\'c0\'e0\'b6\'a8\'d2\'e5\'ca\'f4\'d0\'d4\'ba\'cd\'b7\'bd\'b7\'a8
\f0 \
    def __init__(self, make, model, year):\
        """
\f1 \'b3\'f5\'ca\'bc\'bb\'af\'b8\'b8\'c0\'e0\'b5\'c4\'ca\'f4\'d0\'d4
\f0 """\
        super().__init__(make, model, year)\
        self.battery_size = 70\
    def describe_battery(self):\
        """
\f1 \'b4\'f2\'d3\'a1\'d2\'bb\'cc\'f5\'c3\'e8\'ca\'f6\'b5\'e7\'c6\'bf\'c8\'dd\'c1\'bf\'b5\'c4\'cf\'fb\'cf\'a2
\f0 """\
        print("This car has a " + str(self.battery_size) + "-kWh battery.")\
\
9.3.4 
\f1 \'d6\'d8\'d0\'b4\'b8\'b8\'c0\'e0\'b5\'c4\'b7\'bd\'b7\'a8
\f0 \

\f1 \'bc\'d9\'c9\'e8
\f0 Car 
\f1 \'c0\'e0\'d3\'d0\'d2\'bb\'b8\'f6\'c3\'fb\'ce\'aa
\f0 fill_gas_tank() 
\f1 \'b5\'c4\'b7\'bd\'b7\'a8\'a3\'ac
\f0  
\f1 \'cb\'fc\'b6\'d4\'c8\'ab\'b5\'e7\'b6\'af\'c6\'fb\'b3\'b5\'c0\'b4\'cb\'b5\'ba\'c1\'ce\'de\'d2\'e2\'d2\'e5\'a3\'ac
\f0  
\f1 \'d2\'f2\'b4\'cb\'c4\'e3\'bf\'c9\'c4\'dc\'cf\'eb\'d6\'d8\'d0\'b4\'cb\'fc\'a1\'a3
\f0  
\f1 \'cf\'c2\'c3\'e6\'d1\'dd\'ca\'be\'c1\'cb\'d2\'bb\'d6\'d6\'d6\'d8\'d0\'b4\'b7\'bd\'ca\'bd\'a3\'ba
\f0 \
def ElectricCar(Car):\
    --snip--\
    def fill_gas_tank():\
        """
\f1 \'b5\'e7\'b6\'af\'c6\'fb\'b3\'b5\'c3\'bb\'d3\'d0\'d3\'cd\'cf\'e4
\f0 """\
        print("This car doesn't need a gas tank!")\
\
9.3.5 
\f1 \'bd\'ab\'ca\'b5\'c0\'fd\'d3\'c3\'d7\'f7\'ca\'f4\'d0\'d4
\f0 \
class Battery():\
    """
\f1 \'d2\'bb\'b4\'ce\'c4\'a3\'c4\'e2\'b5\'e7\'b6\'af\'c6\'fb\'b3\'b5\'b5\'e7\'c6\'bf\'b5\'c4\'bc\'f2\'b5\'a5\'b3\'a2\'ca\'d4
\f0 """\
    def __init__(self, battery_size=70):\
        """
\f1 \'b3\'f5\'ca\'bc\'bb\'af\'b5\'e7\'c6\'bf\'b5\'c4\'ca\'f4\'d0\'d4
\f0 """\
        self.battery_size = battery_size\
    def describe_battery(self):\
        """
\f1 \'b4\'f2\'d3\'a1\'d2\'bb\'cc\'f5\'c3\'e8\'ca\'f6\'b5\'e7\'c6\'bf\'c8\'dd\'c1\'bf\'b5\'c4\'cf\'fb\'cf\'a2
\f0 """\
        print("This car has a " + str(self.battery_size) + "-kWh battery.")\
\
class ElectricCar(Car):\
    """
\f1 \'b5\'e7\'b6\'af\'c6\'fb\'b3\'b5\'b5\'c4\'b6\'c0\'cc\'d8\'d6\'ae\'b4\'a6
\f0 """\
    def __init__(self, make, model, year):\
        """
\f1 \'b3\'f5\'ca\'bc\'bb\'af\'b8\'b8\'c0\'e0\'b5\'c4\'ca\'f4\'d0\'d4
\f0 """\
        super().__init__(make, model, year)\
        self.battery_size = 70\
        self.battery = Battery()\
    def describe_battery(self):\
        """
\f1 \'b4\'f2\'d3\'a1\'d2\'bb\'cc\'f5\'c3\'e8\'ca\'f6\'b5\'e7\'c6\'bf\'c8\'dd\'c1\'bf\'b5\'c4\'cf\'fb\'cf\'a2
\f0 """\
        print("This car has a " + str(self.battery_size) + "-kWh battery.")\
\
my_tesla = ElectricCar('tesla', 'model s', 2016)\
print(my_tesla.get_descriptive_name())\
my_tesla.battery.describe_battery()\
\
9.4 
\f1 \'b5\'bc\'c8\'eb\'c0\'e0
\f0 \
9.4.1 
\f1 \'b5\'bc\'c8\'eb\'b5\'a5\'b8\'f6\'c0\'e0
\f0 \
from car import Car\
my_new_car = Car('audi', 'a4', 2016)\
print(my_new_car.get_descriptive_name())\
my_new_car.odometer_reading = 23\
my_new_car.read_odometer()\
\
\
9.4.2 
\f1 \'d4\'da\'d2\'bb\'b8\'f6\'c4\'a3\'bf\'e9\'d6\'d0\'b4\'e6\'b4\'a2\'b6\'e0\'b8\'f6\'c0\'e0
\f0 \
9.4.3 
\f1 \'b4\'d3\'d2\'bb\'b8\'f6\'c4\'a3\'bf\'e9\'d6\'d0\'b5\'bc\'c8\'eb\'b6\'e0\'b8\'f6\'c0\'e0\
from car import Car, ElectricCar
\f0 \
9.4.4 
\f1 \'b5\'bc\'c8\'eb\'d5\'fb\'b8\'f6\'c4\'a3\'bf\'e9
\f0 \
import car\
9.4.5 
\f1 \'b5\'bc\'c8\'eb\'c4\'a3\'bf\'e9\'d6\'d0\'b5\'c4\'cb\'f9\'d3\'d0\'c0\'e0
\f0 \
from module_name import *\
9.4.6 
\f1 \'d4\'da\'d2\'bb\'b8\'f6\'c4\'a3\'bf\'e9\'d6\'d0\'b5\'bc\'c8\'eb\'c1\'ed\'d2\'bb\'b8\'f6\'c4\'a3\'bf\'e9
\f0 \
\
9.4.7 
\f1 \'d7\'d4\'b6\'a8\'d2\'e5\'b9\'a4\'d7\'f7\'c1\'f7\'b3\'cc
\f0 \
\
9.5 Python
\f1 \'b1\'ea\'d7\'bc\'bf\'e2\
\'bd\'ab\'d2\'d4\'cc\'ed\'bc\'d3\'b5\'c4\'cb\'b3\'d0\'f2\'bb\'f1\'c8\'a1\'b5\'f7\'b2\'e9\'bd\'e1\'b9\'fb
\f0 \
from collections import OrderedDict\
favorite_languages = OrderedDict()\
favorite_languages['jen'] = 'python'\
favorite_languages['sarah'] = 'c'\
favorite_languages['edward'] = 'ruby'\
favorite_languages['phil'] = 'python'\
for name, language in favorite_languages.items():\
    print(name.title() + "'s favorite language is " + language.title() + ".")\
\
https://pymotw.com/3/\
\
9.6 
\f1 \'c0\'e0\'b1\'e0\'c2\'eb\'b7\'e7\'b8\'f1
\f0 \

\f1 \'c0\'e0\'c3\'fb\'d3\'a6\'b2\'c9\'d3\'c3\'cd\'d5\'b7\'e5\'c3\'fc\'c3\'fb\'b7\'a8
\f0  \
\
\
\
\
\
\
\
\
\
\
}