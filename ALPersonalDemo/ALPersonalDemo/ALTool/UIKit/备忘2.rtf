{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 Helvetica;
\f3\fnil\fcharset134 PingFangSC-Regular;\f4\fswiss\fcharset0 ArialMT;\f5\fnil\fcharset0 Consolas;
\f6\fnil\fcharset0 Consolas-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red170\green13\blue145;\red63\green110\blue116;
\red255\green255\blue255;\red46\green13\blue110;\red92\green38\blue153;\red196\green26\blue22;\red28\green0\blue207;
\red100\green56\blue32;\red0\green116\blue0;\red38\green71\blue75;\red53\green53\blue53;\red255\green255\blue255;
\red255\green255\blue255;\red38\green38\blue38;\red74\green74\blue74;\red210\green0\blue5;\red10\green82\blue135;
\red7\green68\blue184;\red27\green31\blue34;\red21\green23\blue26;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c24700\c43100\c45600;
\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c11000\c0\c81000;
\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c0\c45600\c0;\csgenericrgb\c14900\c27800\c29400;\cssrgb\c27059\c27059\c27059;\cssrgb\c100000\c100000\c100000;
\csgray\c100000;\cssrgb\c20000\c20000\c20000;\cssrgb\c36078\c36078\c36078;\cssrgb\c86667\c0\c0;\cssrgb\c0\c40000\c60000;
\cssrgb\c0\c36078\c77255;\cssrgb\c14118\c16078\c18039;\cssrgb\c10588\c12157\c13725\c29804;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab692
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 \CocoaLigature0 <MMEmotionCentre: 0x1c1c64580> sel:setAppkey:platformId:\
k51hidwqkextb,\
464878039ce8441a8a0a9f88d8efed4b\
\
select * from t_anchor where id = 9\
select * from t_anchor_record where user_id = 10020 and id > 945\
update t_anchor set birthday = NULL where id = 9\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\b0\fs26 \cf3    \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf3 layer.cornerRadius\
layer.masksToBounds\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf4 \cb5 \CocoaLigature1 WWChatGroupListViewController\cf2  *chatGroupListVC = [[\cf4 WWChatGroupListViewController\cf2  \cf6 alloc\cf2 ] \cf6 init\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     chatGroupListVC.\cf4 groupList\cf2  = \cf3 self\cf2 .\cf4 subGroupList\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     chatGroupListVC.\cf4 arrayGroups\cf2  = [\cf3 self\cf2 .\cf4 arrayGroups\cf2  \cf6 mutableCopy\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 CATransition\cf2  *transition = [\cf7 CATransition\cf2  \cf6 animation\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     transition.\cf7 type\cf2 =\cf7 kCATransitionPush\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     transition.\cf7 subtype\cf2 =\cf7 kCATransitionFromTop\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [\cf3 self\cf2 .\cf7 navigationController\cf2 .\cf7 view\cf2 .\cf7 layer\cf2  \cf6 addAnimation\cf2 :transition \cf6 forKey\cf2 :\cf7 kCATransition\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [\cf3 self\cf2 .\cf7 navigationController\cf2  \cf6 pushViewController\cf2 :chatGroupListVC \cf6 animated\cf2 :\cf3 NO\cf2 ];\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs26 \cf3 \cb1 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2     
\fs28 \cf7 \cb5 \CocoaLigature1 CABasicAnimation\cf2  *rotationAnimation = [\cf7 CABasicAnimation\cf2  \cf6 animationWithKeyPath\cf2 :\cf8 @"transform.rotation.z"\cf2 ];
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2         rotationAnimation.\cf7 fromValue\cf2  = \cf9 @0\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         rotationAnimation.\cf7 toValue\cf2  = [\cf7 NSNumber\cf2  \cf6 numberWithFloat\cf2 : \cf10 M_PI\cf2  * \cf9 2.0\cf2  ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         rotationAnimation.\cf7 duration\cf2  = \cf9 4\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         rotationAnimation.\cf7 repeatCount\cf2  = \cf10 HUGE_VALF\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         rotationAnimation.\cf7 fillMode\cf2  = \cf7 kCAFillModeBoth\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         [cella.\cf4 view2\cf2 .\cf4 animation\cf2 .\cf7 layer\cf2  \cf6 addAnimation\cf2 :rotationAnimation \cf6 forKey\cf2 :\cf3 nil\cf2 ];\
\
(CAGradientLayer *)\ulth \ulc2 s\ulnone ideGradLayer.colors = \cf9 @[\cf2 (\cf3 __bridge\cf2  \cf3 id\cf2 )color.CGColor,(\cf3 __bridge\cf2  \cf3 id\cf2 )[color colorWithAlphaComponent:\cf9 0.2\cf2 ].CGColor\cf9 ]\cf2 ;\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs26 \cf2 \cb1 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
    \cf7 UIImageView\cf2  *imageView = [[\cf7 UIImageView\cf2  \cf6 alloc\cf2 ]\cf6 initWithFrame\cf2 :\cf3 self\cf2 .\cf4 chatSessionInputBarControl\cf2 .\cf7 bounds\cf2 ];\
    \cf11 //imageView.image = [UIImage imageWithColor:[UIColor colorWithHexString:@"ffffff"]];\cf2 \
    imageView.\cf7 backgroundColor\cf2  = [\cf7 UIColor\cf2  \cf6 whiteColor\cf2 ];\
    \cf11 //
\f3 \'bf\'aa\'ca\'bc\'b6\'d4
\f1 imageView
\f3 \'bd\'f8\'d0\'d0\'bb\'ad\'cd\'bc
\f1 \cf2 \
    \cf6 UIGraphicsBeginImageContextWithOptions\cf2 (imageView.\cf7 bounds\cf2 .\cf7 size\cf2 , \cf3 YES\cf2 , [\cf7 UIScreen\cf2  \cf6 mainScreen\cf2 ].\cf7 scale\cf2 );\
    \cf11 //
\f3 \'ca\'b9\'d3\'c3\'b1\'b4\'c8\'fb\'b6\'fb\'c7\'fa\'cf\'df\'bb\'ad\'b3\'f6\'d2\'bb\'b8\'f6\'d4\'b2\'d0\'ce\'cd\'bc
\f1 \cf2 \
    \cf7 UIBezierPath\cf2  *bezierPath = [\cf7 UIBezierPath\cf2  \cf6 bezierPathWithRoundedRect\cf2 :\cf3 self\cf2 .\cf4 chatSessionInputBarControl\cf2 .\cf7 bounds\cf2  \cf6 byRoundingCorners\cf2 :(\cf6 UIRectCornerTopLeft\cf2  | \cf6 UIRectCornerTopRight\cf2 ) \cf6 cornerRadii\cf2 :\cf6 CGSizeMake\cf2 (\cf9 12\cf2 , \cf9 12\cf2 )];\
    [bezierPath \cf6 addClip\cf2 ];\
    [bezierPath \cf6 setLineWidth\cf2 :\cf9 1\cf2 ];\
    [[\cf7 UIColor\cf2  \cf6 redColor\cf2 ] \cf6 setStroke\cf2 ];\
    [bezierPath \cf6 stroke\cf2 ];\
    [imageView \cf6 drawRect\cf2 :imageView.\cf7 bounds\cf2 ];\
    imageView.\cf7 image\cf2  = \cf6 UIGraphicsGetImageFromCurrentImageContext\cf2 ();\
    \cf11 //
\f3 \'bd\'e1\'ca\'f8\'bb\'ad\'cd\'bc
\f1 \cf2 \
    \cf6 UIGraphicsEndImageContext\cf2 ();\
    \cf3 self\cf2 .\cf4 layerCornerBgView\cf2  = imageView;\cf3 \
\
//
\f3 \'c3\'b6\'be\'d9\'ca\'fd\'d7\'e9
\f1 \
\cf4 WBadgeAnimType\cf2  animations[] = \{\cf12 WBadgeAnimTypeShake\cf2 , \cf12 WBadgeAnimTypeBounce\cf2 , \cf12 WBadgeAnimTypeBreathe\cf2 , \cf12 WBadgeAnimTypeScale\cf2 \};\cf3 \
\

\f3 \'d7\'a5\'b0\'fc\'a3\'ba
\f1 \
\pard\pardeftab720\partightenfactor0

\f3\fs36 \cf13 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'d7\'a5iphone\'ca\'fd\'be\'dd
\fs32 \cb15 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb14 \'cf\'eb\'d7\'a5iphone\'b5\'c4\'ca\'fd\'be\'dd\'a3\'ac\'ca\'d7\'cf\'c8\'d0\'e8\'d2\'aa\'c8\'c3iphone\'ca\'fd\'be\'dd\'cd\'a8\'b9\'fdmac\'b2\'c5\'d0\'d0\'a1\'a3\'bf\'b4\'b5\'bd\'cd\'f8\'c9\'cf\'ba\'dc\'b6\'e0\'c9\'e8\'b4\'fa\'c0\'ed\'ca\'b2\'c3\'b4\'b5\'c4\'b7\'bd\'b7\'a8\'a3\'ac\'b1\'c8\'bd\'cf\'b8\'b4\'d4\'d3\'a3\'ac\'d3\'d0\'b5\'c4\'bb\'b9\'d2\'aa\'d4\'bd\'d3\'fc\'a1\'a3\'c6\'e4\'ca\'b5\'c3\'bb\'b1\'d8\'d2\'aa\'a1\'a3\'d6\'bb\'d2\'aa\'c1\'b4\'c9\'cf\'ca\'fd\'be\'dd\'cf\'df\'a3\'ac\'c8\'bb\'ba\'f3\'d4\'damac\'b5\'c4\'d6\'d5\'b6\'cb\'d6\'b4\'d0\'d0\'a3\'ba\cb15 \
\cb14 	
\b rvictl -s iphone\'c9\'e8\'b1\'b8id
\b0 \cb15 \
\cb14 \'d5\'e2\'ca\'b1\'a3\'ac\'cb\'f9\'d3\'d0iphone\'cd\'f8\'c2\'e7\'c1\'f7\'c1\'bf\'b6\'bc\'bb\'e1\'be\'ad\'b9\'fdiphone\'cb\'f9\'c1\'b4\'bd\'d3\'b5\'c4mac\'a3\'ac\'b2\'a2\'c7\'d2iphone\'ca\'fd\'be\'dd\'bb\'b9\'ca\'c7\'d7\'df\'d7\'d4\'bc\'ba\'b5\'c4\'cd\'f8\'c2\'e7\'a3\'ac\'b1\'c8\'c8\'e7iphone\'c1\'b4\'bd\'d3\'d4\'da3g\'cd\'f8\'c2\'e7\'a3\'ac\'ca\'fd\'be\'dd\'bb\'b9\'ca\'c7\'bb\'e1\'cd\'a8\'b9\'fd3G\'ca\'d5\'b7\'a2\'a3\'ac\'b6\'f8\'b2\'bb\'ca\'c7\'cd\'a8\'b9\'fdmac\'b5\'c4\'cd\'f8\'c2\'e7\'a1\'a3\'b6\'cf\'bf\'aa\'c1\'ac\'bd\'d3\'a3\'ba\cb15 \
\cb14 	
\b rvictl -x iphone\'c9\'e8\'b1\'b8id
\b0 \cb15 \
\cb14 \'c9\'e8\'b1\'b8\'c1\'ac\'bd\'d3\'ba\'f3\'a3\'acmac\'bb\'e1\'b3\'f6\'cf\'d6\'d2\'bb\'b8\'f6\'b6\'d4\'d3\'a6\'b5\'c4\'d0\'e9\'c4\'e2\'cd\'f8\'c2\'e7\'bd\'d3\'bf\'da\'a3\'ac\'c3\'fb\'d7\'d6\'ca\'c7rvi0\'a3\'a8\'c8\'e7\'b9\'fb\'d3\'d0\'b6\'e0\'b8\'f6iphone\'d4\'f2\'c0\'db\'bc\'d3\'a3\'acrvi1\'a3\'acrvi2\'a1\'ad\'a3\'a9\
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf3 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\
\cf2  \cf3 if\cf2  (object == \cf3 self\cf2 .\cf4 contentWebview\cf2 .\cf7 scrollView\cf2  && [keyPath \cf6 isEqualToString\cf2 :\cf8 @"contentOffset"\cf2 ])\{\
        \cf3 if\cf2  ([\cf3 self\cf2 .\cf4 contentWebview\cf2  \cf6 respondsToSelector\cf2 :\cf3 @selector\cf2 (_updateVisibleContentRects)]) \{\
            ((\cf3 void\cf2 (*)(\cf3 id\cf2 ,\cf3 SEL\cf2 ,\cf3 BOOL\cf2 ))\cf6 objc_msgSend\cf2 )(\cf3 self\cf2 .\cf4 contentWebview\cf2 ,\cf3 @selector\cf2 (_updateVisibleContentRects),\cf3 NO\cf2 );\
        \}\
    \}\
\
\cf3 static\cf2  \cf3 void\cf2  *WWReportViewControllerObserverContext = &\cf4 WWReportViewControllerObserverContext\cf2 ;\
[\cf3 self\cf2  \cf6 addObserver\cf2 :\cf3 self\cf2  \cf6 forKeyPath\cf2 :\cf8 @"isCommitBtnEnabled"\cf2  \cf6 options\cf2 :\cf6 NSKeyValueObservingOptionNew\cf2  \cf6 context\cf2 :\cf4 WWReportViewControllerObserverContext\cf2 ];\
- (\cf3 void\cf2 )observeValueForKeyPath:(\cf7 NSString\cf2  *)keyPath ofObject:(\cf3 id\cf2 )object change:(\cf7 NSDictionary\cf2  *)change context:(\cf3 void\cf2  *)context \{\
    \cf3 if\cf2  ( context == \cf4 WWReportViewControllerObserverContext\cf2 ) \{\
        \cf3 BOOL\cf2  isEnalbed = [[change \cf6 objectForKey\cf2 :\cf7 NSKeyValueChangeNewKey\cf2 ] \cf6 boolValue\cf2 ];\
        \cf3 if\cf2  (isEnalbed) \{\
            \cf3 self\cf2 .\cf4 commit\cf2 .\cf7 enabled\cf2  = \cf3 YES\cf2 ;\
            \cf3 self\cf2 .\cf4 textView\cf2 .\cf7 layer\cf2 .\cf7 borderColor\cf2  = [\cf7 UIColor\cf2  \cf12 colorWithHexString\cf2 :\cf8 @"7269ff"\cf2 ].\cf7 CGColor\cf2 ;\
        \}\cf3 else\cf2 \{\
            \cf3 self\cf2 .\cf4 commit\cf2 .\cf7 enabled\cf2  = \cf3 NO\cf2 ;\
            \cf3 self\cf2 .\cf4 textView\cf2 .\cf7 layer\cf2 .\cf7 borderColor\cf2  = [\cf7 UIColor\cf2  \cf12 colorWithHexString\cf2 :\cf8 @"e5e5e5"\cf2 ].\cf7 CGColor\cf2 ;\
        \}\
    \}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f3\fs28 \cf16 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'d3\'c3
\f4 scrollRangeToVisible
\f3 \'ba\'af\'ca\'fd\'bd\'f8\'d0\'d0\'b9\'f6\'b6\'af\'a3\'ac\'bf\'c9\'d2\'d4\'cc\'f8\'b6\'af\'b5\'bd\'d7\'ee\'ba\'f3\'d2\'bb\'d0\'d0\'c4\'da\'c8\'dd\'c9\'cf
\f1\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\partightenfactor0

\f5\fs24 \cf17 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 [_textView\cf18 \'a0scrollRangeToVisible\cf17 :NSMakeRange(_textView.text.length,\'a01)];\'a0\'a0\
\pard\pardeftab720\partightenfactor0

\f6\b \cf19 self
\f5\b0 \cf17 .textView.layoutManager.allowsNonContiguousLayout\'a0=\'a0
\f6\b \cf19 NO
\f5\b0 \cf17 ;\'a0\'a0\
\pard\pardeftab720\partightenfactor0

\f3\fs28 \cf16 \'d5\'e2\'be\'e4\'b4\'fa\'c2\'eb\'c9\'e8\'d6\'c3\'c1\'cb
\f4  UITextView 
\f3 \'d6\'d0\'b5\'c4
\f4  layoutManager(NSLayoutManager) 
\f3 \'b5\'c4\'ca\'c7\'b7\'f1\'b7\'c7\'c1\'ac\'d0\'f8\'b2\'bc\'be\'d6\'ca\'f4\'d0\'d4\'a3\'ac\'c4\'ac\'c8\'cf\'ca\'c7
\f4  YES
\f3 \'a3\'ac\'c9\'e8\'d6\'c3\'ce\'aa
\f4  NO 
\f3 \'ba\'f3
\f4  UITextView 
\f3 \'be\'cd\'b2\'bb\'bb\'e1\'d4\'d9\'d7\'d4\'bc\'ba\'d6\'d8\'d6\'c3\'bb\'ac\'b6\'af\'c1\'cb\'a1\'a3
\f1\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
-(\cf3 void\cf2 )getCurrentMapScreenShot\{\
    \cf11 // 
\f3 \'bd\'d8\'cd\'bc\'b8\'bd\'bc\'d3\'d1\'a1\'cf\'ee
\f1 \cf2 \
    \cf7 MKMapSnapshotOptions\cf2  *options = [[\cf7 MKMapSnapshotOptions\cf2  \cf6 alloc\cf2 ] \cf6 init\cf2 ];\
    \cf11 // 
\f3 \'c9\'e8\'d6\'c3\'bd\'d8\'cd\'bc\'c7\'f8\'d3\'f2
\f1 (
\f3 \'d4\'da\'b5\'d8\'cd\'bc\'c9\'cf\'b5\'c4\'c7\'f8\'d3\'f2
\f1 ,
\f3 \'d7\'f7\'d3\'c3\'d4\'da\'b5\'d8\'cd\'bc
\f1 )\cf2 \
    options.region = \cf3 self\cf2 .mapView.region;\
    \cf11 //    options.mapRect = self.mapView.visibleMapRect;\cf2 \
    \
    \cf11 // 
\f3 \'c9\'e8\'d6\'c3\'bd\'d8\'cd\'bc\'ba\'f3\'b5\'c4\'cd\'bc\'c6\'ac\'b4\'f3\'d0\'a1
\f1 (
\f3 \'d7\'f7\'d3\'c3\'d4\'da\'ca\'e4\'b3\'f6\'cd\'bc\'cf\'f1
\f1 )\cf2 \
    options.size = \cf3 self\cf2 .mapView.frame.size;\
    \cf11 // 
\f3 \'c9\'e8\'d6\'c3\'bd\'d8\'cd\'bc\'ba\'f3\'b5\'c4\'cd\'bc\'c6\'ac\'b1\'c8\'c0\'fd\'a3\'a8\'c4\'ac\'c8\'cf\'ca\'c7\'c6\'c1\'c4\'bb\'b1\'c8\'c0\'fd\'a3\'ac
\f1  
\f3 \'d7\'f7\'d3\'c3\'d4\'da\'ca\'e4\'b3\'f6\'cd\'bc\'cf\'f1\'a3\'a9
\f1 \cf2 \
    options.\cf7 scale\cf2  = [[\cf7 UIScreen\cf2  \cf6 mainScreen\cf2 ] \cf6 scale\cf2 ];\
    \
    \cf7 MKMapSnapshotter\cf2  *snapshotter = [[\cf7 MKMapSnapshotter\cf2  \cf6 alloc\cf2 ] \cf6 initWithOptions\cf2 :options];\
    [snapshotter \cf6 startWithCompletionHandler\cf2 :^(\cf7 MKMapSnapshot\cf2  * \cf3 _Nullable\cf2  snapshot, \cf7 NSError\cf2  * \cf3 _Nullable\cf2  error) \{\
        \cf3 if\cf2  (error) \{\
            \cf6 NSLog\cf2 (\cf8 @"
\f3 \'bd\'d8\'cd\'bc\'b4\'ed\'ce\'f3\'a3\'ba
\f1 %@"\cf2 ,error.\cf7 localizedDescription\cf2 );\
        \}\cf3 else\cf2 \
        \{\
            \cf11 // 
\f3 \'c9\'e8\'d6\'c3\'c6\'c1\'c4\'bb\'c9\'cf\'cd\'bc\'c6\'ac\'cf\'d4\'ca\'be
\f1 \cf2 \
            \cf3 self\cf2 .snapshootImageView.image = snapshot.image;\
            \cf11 // 
\f3 \'bd\'ab\'cd\'bc\'c6\'ac\'b1\'a3\'b4\'e6\'b5\'bd\'d6\'b8\'b6\'a8\'c2\'b7\'be\'b6\'a3\'a8\'b4\'cb\'b4\'a6\'ca\'c7\'d7\'c0\'c3\'e6\'c2\'b7\'be\'b6\'a3\'ac\'d0\'e8\'d2\'aa\'b8\'f9\'be\'dd\'b8\'f6\'c8\'cb\'b5\'e7\'c4\'d4\'b2\'bb\'cd\'ac\'bd\'f8\'d0\'d0\'d0\'de\'b8\'c4\'a3\'a9
\f1 \cf2 \
            \cf7 NSData\cf2  *data = \cf6 UIImagePNGRepresentation\cf2 (snapshot.\cf7 image\cf2 );\
            [data \cf6 writeToFile\cf2 :\cf8 @"/Users/wangshunzi/Desktop/snap.png"\cf2  \cf6 atomically\cf2 :\cf3 YES\cf2 ];\
        \}\
    \}];\
\}\
\
\
\pard\pardeftab720\partightenfactor0

\f5 \cf16 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 NSString\'a0*path\'a0=\'a0[[NSBundle\'a0mainBundle]\'a0pathForResource:@\'94icon\'94\'a0ofType:@\'94png\'94];\
UIImage\'a0*image\'a0=\'a0[UIImage\'a0imageWithContentsOfFile:path];\
\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf3 \cb5 \kerning1\expnd0\expndtw0 if\cf2  (\cf3 @available\cf2 (iOS \cf9 11.0\cf2 , *)) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 self\cf2 .\cf4 collectionView\cf2 .\cf7 contentInsetAdjustmentBehavior\cf2  = \cf6 UIScrollViewContentInsetAdjustmentNever\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 self\cf2 .\cf4 collectionView\cf2 .\cf7 scrollIndicatorInsets\cf2  = \cf3 self\cf2 .\cf4 collectionView\cf2 .\cf7 contentInset\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f5\fs26 \cf16 \cb14 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clmgf \clvertalt \clshdrawnil \clwWidth31724\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl200 \clpadr200 \gaph\cellx4320
\clmrg \clvertalt \clshdrawnil \clwWidth31724\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f5\fs24 \cf20 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 NSAttributedString\cf21  *attrStr = [[\cf20 NSAttributedString\cf21  \cf20 alloc\cf21 ] \cf20 initWithData:\cf21 [htmlStr \cf20 dataUsingEncoding:NSUnicodeStringEncoding\cf21 ] \cf20 options:\cf21 @\{ \cf20 NSDocumentTypeDocumentAttribute\cf21 : \cf20 NSHTMLTextDocumentType\cf21  \} \cf20 documentAttributes:nil\cf21  \cf20 error:nil\cf21 ];\cell 
\pard\intbl\itap1\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth1000\clftsWidth3 \clminw1000 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl200 \clpadr200 \gaph\cellx4320
\clvertalt \clshdrawnil \clwWidth31724\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf22 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf21         self.attributedText = attrStr;\cell \lastrow\row
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 - (\cf3 BOOL\cf2 )table:(\cf7 UITableView\cf2  *)tableView rectVisible:(\cf7 CGRect\cf2 )rect \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 CGRect\cf2  visibleRect;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     visibleRect.\cf7 origin\cf2  = tableView.\cf7 contentOffset\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     visibleRect.\cf7 origin\cf2 .\cf7 y\cf2  += tableView.\cf7 contentInset\cf2 .\cf7 top\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     visibleRect.\cf7 size\cf2  = tableView.\cf7 bounds\cf2 .\cf7 size\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     visibleRect.\cf7 size\cf2 .\cf7 height\cf2  -= tableView.\cf7 contentInset\cf2 .\cf7 top\cf2  + tableView.\cf7 contentInset\cf2 .\cf7 bottom\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 return\cf2  \cf6 CGRectContainsRect\cf2 (visibleRect, rect);
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\f2\fs24 \cf0 \
\

\f1\fs28 \cf2 - (\cf3 void\cf2 )scrollToCursorForTextView:(\cf7 UITextView\cf2 *)textView \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 CGRect\cf2  cursorRect = [textView \cf6 caretRectForPosition\cf2 :textView.\cf7 selectedTextRange\cf2 .\cf7 start\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     cursorRect = [\cf3 self\cf2 .\cf4 tableView\cf2  \cf6 convertRect\cf2 :cursorRect \cf6 fromView\cf2 :textView];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (![\cf3 self\cf2  \cf12 table\cf2 :\cf3 self\cf2 .\cf4 tableView\cf2  \cf12 rectVisible\cf2 :cursorRect]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         cursorRect.\cf7 size\cf2 .\cf7 height\cf2  += \cf9 8\cf2 ; \cf11 // To add some space underneath the cursor
\f2\fs24 \cf0 \

\f1\fs28 \cf2         [\cf3 self\cf2 .\cf4 tableView\cf2  \cf6 scrollRectToVisible\cf2 :cursorRect \cf6 animated\cf2 :\cf3 YES\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\fs26 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 - (\cf3 void\cf2 )setBody:(\cf7 NSString\cf2  *)bodyText
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\cf4 _body\cf2  = bodyText;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\cf7 NSAttributedString\cf2  *attributedString = [[\cf7 NSAttributedString\cf2  \cf6 alloc\cf2 ] \cf6 initWithData\cf2 :[bodyText \cf6 dataUsingEncoding\cf2 :\cf6 NSUnicodeStringEncoding\cf2 ] \cf6 options\cf2 :\cf9 @\{\cf2  \cf7 NSDocumentTypeDocumentAttribute\cf2 : \cf7 NSHTMLTextDocumentType\cf2  \cf9 \}\cf2  \cf6 documentAttributes\cf2 :\cf3 nil\cf2  \cf6 error\cf2 :\cf3 nil\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\cf3 self\cf2 .\cf7 attributedText\cf2  = attributedString;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}\
\
- (\cf3 void\cf2 )prepareForSegue:(\cf7 UIStoryboardSegue\cf2  *)segue sender:(\cf3 id\cf2 )sender \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\cf3 if\cf2  ([[segue \cf6 identifier\cf2 ] \cf6 isEqualToString\cf2 :\cf8 @"showDetail"\cf2 ]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	    \cf7 NSIndexPath\cf2  *indexPath = [\cf3 self\cf2 .\cf7 tableView\cf2  \cf6 indexPathForSelectedRow\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	    \cf7 NSDate\cf2  *object = \cf3 self\cf2 .\cf4 objects\cf2 [indexPath.\cf7 row\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	    [[segue \cf6 destinationViewController\cf2 ] \cf12 setDetailItem\cf2 :object];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\}
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs26 \cf2 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf11 \cb5 \CocoaLigature1 // 
\f3 \'ca\'b9\'d3\'c3
\f1 edges
\f3 \'ca\'b9\'b5\'e3\'c2\'fa\'d5\'fb\'b8\'f6
\f1 self.view
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2   [scrollView \cf12 mas_makeConstraints\cf2 :^(\cf4 MASConstraintMaker\cf2  *make) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     make.\cf4 edges\cf2 .\cf12 equalTo\cf2 (weakSelf.\cf7 view\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf11 // 
\f3 \'c8\'e7\'b9\'fb\'d5\'e2\'c1\'bd\'b8\'f6\'b1\'ea\'c7\'a9\'b5\'c4\'c4\'da\'c8\'dd\'b6\'bc\'ca\'c7\'b2\'bb\'c8\'b7\'b6\'a8\'b5\'c4\'a3\'ac\'d2\'b2\'be\'cd\'ca\'c7\'b2\'bb\'c8\'b7\'b6\'a8\'c4\'c4\'b8\'f6\'b5\'c4\'c4\'da\'c8\'dd\'b8\'fc\'b6\'e0\'a3\'ac\'c4\'c7\'c3\'b4\'bf\'c9\'d2\'d4\'d5\'e2\'c3\'b4\'c9\'e8\'d6\'c3\'a1\'a3
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf11 // 
\f3 \'d5\'e2\'d1\'f9\'be\'cd\'bf\'c9\'d2\'d4\'b1\'a3\'d6\'a4\'ca\'b9\'d3\'c3\'c4\'da\'c8\'dd\'d7\'ee\'b6\'e0\'b5\'c4\'b1\'ea\'c7\'a9\'d7\'f7\'ce\'aa
\f1 scrollview
\f3 \'b5\'c4
\f1 contentSize
\f3 \'b2\'ce\'bf\'bc\'a1\'a3
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf11 // 
\f3 \'d3\'c3\'d3\'da\'c8\'b7\'b6\'a8
\f1 scrollview
\f3 \'b5\'c4
\f1 contentSize.height
\f2\fs24 \cf0 \

\f1\fs28 \cf2     make.\cf4 bottom\cf2 .\cf10 mas_greaterThanOrEqualTo\cf2 (avgLabel1.\cf4 mas_bottom\cf2 ).\cf12 offset\cf2 (\cf9 40\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2     make.\cf4 bottom\cf2 .\cf10 mas_greaterThanOrEqualTo\cf2 (avgLabel2.\cf4 mas_bottom\cf2 ).\cf12 offset\cf2 (\cf9 40\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2   \}];
\fs26 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
xib
\f3 \'cd\'bc\'c6\'ac\'cf\'c2\'c0\'ad\'b7\'c5\'b4\'f3
\f1 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 - (\cf3 void\cf2 ) scrollViewDidScroll:(\cf7 UIScrollView\cf2  *)scrollView
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 CGFloat\cf2  yPos = -scrollView.\cf7 contentOffset\cf2 .\cf7 y\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf6 NSLog\cf2 (\cf8 @"heightis:%f"\cf2 ,\cf3 self\cf2 .\cf4 topbg\cf2 .\cf7 frame\cf2 .\cf7 size\cf2 .\cf7 height\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf6 NSLog\cf2 (\cf8 @"width:%f"\cf2 ,\cf3 self\cf2 .\cf4 topbg\cf2 .\cf7 frame\cf2 .\cf7 size\cf2 .\cf7 width\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (yPos > \cf9 0\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         [\cf3 self\cf2 .\cf4 topbg\cf2  \cf12 mas_updateConstraints\cf2 :^(\cf4 MASConstraintMaker\cf2  *make) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             make.\cf4 height\cf2 .\cf10 mas_equalTo\cf2 (\cf9 @(\cf4 Mheight\cf2 +yPos\cf9 )\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2             make.\cf4 top\cf2 .\cf10 mas_equalTo\cf2 (-yPos);
\f2\fs24 \cf0 \

\f1\fs28 \cf2             make.\cf4 left\cf2 .\cf10 mas_equalTo\cf2 (-yPos);
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf11 //
\f2\fs24 \cf0 \

\f1\fs28 \cf2             make.\cf4 width\cf2 .\cf10 mas_equalTo\cf2 (\cf9 @(\cf4 Mwidth\cf2 +yPos*\cf9 2)\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf11 //make.width.equalTo(self.bgmig.mas_height).with.multipliedBy(300/173);
\f2\fs24 \cf0 \

\f1\fs28 \cf2             [\cf3 self\cf2 .\cf4 scollview\cf2  \cf6 setNeedsLayout\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf11 //            self.height.constant = Mheight+yPos;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf11 //            self.left.constant = -yPos;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf11 //            self.top.constant = -yPos;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\fs26 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf11 \cb5 \CocoaLigature1 //
\f3 \'cb\'ab\'bb\'f7\'b4\'a6\'c0\'ed
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2     \cf3 if\cf2 ([viewController.\cf7 tabBarItem\cf2 .\cf7 title\cf2  \cf6 isEqualToString\cf2 :\cf8 @"
\f3 \'c3\'e6\'c1\'c4
\f1 "\cf2 ])\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 if\cf2  (!\cf3 self\cf2 .\cf4 lastFaceTalkTabbarTappedTime\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 self\cf2 .\cf4 lastFaceTalkTabbarTappedTime\cf2  = [\cf7 NSDate\cf2  \cf6 date\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}\cf3 else\cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf7 NSDate\cf2  *date = [\cf7 NSDate\cf2  \cf6 date\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf7 NSTimeInterval\cf2  interval = [date \cf6 timeIntervalSinceDate\cf2 :\cf3 self\cf2 .\cf4 lastFaceTalkTabbarTappedTime\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 self\cf2 .\cf4 lastFaceTalkTabbarTappedTime\cf2  = \cf3 nil\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 if\cf2  (interval < \cf9 0.8\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \cf4 ZTNavigationViewController\cf2  *nav = (\cf4 ZTNavigationViewController\cf2  *)viewController;
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \cf4 DWHostListViewController\cf2  *faceTalkVC = (\cf4 DWHostListViewController\cf2  *)nav.\cf7 viewControllers\cf2 .\cf7 firstObject\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \cf3 if\cf2 ([faceTalkVC \cf6 respondsToSelector\cf2 :\cf3 @selector\cf2 (doubleTapTabbarItemAction)])\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                     [faceTalkVC \cf12 doubleTapTabbarItemAction\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2         
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\fs26 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}