{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 Helvetica;
\f3\fnil\fcharset0 SFMono-Regular;\f4\fnil\fcharset134 PingFangSC-Regular;\f5\fswiss\fcharset0 ArialMT;
\f6\fnil\fcharset0 Consolas;\f7\fnil\fcharset0 Consolas-Bold;\f8\fnil\fcharset0 Verdana;
\f9\fnil\fcharset0 SimSun;\f10\fnil\fcharset134 STSongti-SC-Regular;\f11\froman\fcharset0 TimesNewRomanPSMT;
\f12\fnil\fcharset134 .PingFangSC-Medium;\f13\fnil\fcharset0 HelveticaNeue;\f14\fmodern\fcharset0 Courier;
\f15\froman\fcharset0 Times-Roman;\f16\fmodern\fcharset0 CourierNewPSMT;\f17\fmodern\fcharset0 CourierNewPS-BoldMT;
\f18\fnil\fcharset77 ZapfDingbatsITC;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red170\green13\blue145;\red92\green38\blue153;
\red255\green255\blue255;\red28\green0\blue207;\red196\green26\blue22;\red27\green31\blue34;\red244\green246\blue249;
\red7\green68\blue184;\red91\green40\blue180;\red203\green35\blue57;\red6\green33\blue79;\red63\green110\blue116;
\red46\green13\blue110;\red100\green56\blue32;\red0\green116\blue0;\red38\green71\blue75;\red53\green53\blue53;
\red255\green255\blue255;\red255\green255\blue255;\red38\green38\blue38;\red74\green74\blue74;\red210\green0\blue5;
\red10\green82\blue135;\red7\green68\blue184;\red27\green31\blue34;\red21\green23\blue26;\red58\green58\blue58;
\red35\green35\blue35;\red0\green0\blue0;\red15\green112\blue1;\red14\green110\blue109;\red0\green0\blue255;
\red27\green29\blue31;\red235\green236\blue237;\red204\green201\blue205;\red33\green36\blue38;\red15\green116\blue1;
\red92\green38\blue153;\red46\green13\blue110;\red196\green26\blue22;\red62\green62\blue62;\red63\green110\blue116;
\red229\green0\blue28;\red169\green14\blue145;\red47\green14\blue110;\red57\green57\blue57;\red17\green128\blue2;
\red170\green12\blue145;\red28\green2\blue207;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c35900\c14900\c60100;
\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c77000\c10200\c8600;\cssrgb\c14118\c16078\c18039;\cssrgb\c96471\c97255\c98039;
\cssrgb\c0\c36078\c77255;\cssrgb\c43529\c25882\c75686;\cssrgb\c84314\c22745\c28627;\cssrgb\c1176\c18431\c38431;\csgenericrgb\c24700\c43100\c45600;
\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c0\c45600\c0;\csgenericrgb\c14900\c27800\c29400;\cssrgb\c27059\c27059\c27059;
\cssrgb\c100000\c100000\c100000;\csgray\c100000;\cssrgb\c20000\c20000\c20000;\cssrgb\c36078\c36078\c36078;\cssrgb\c86667\c0\c0;
\cssrgb\c0\c40000\c60000;\cssrgb\c0\c36078\c77255;\cssrgb\c14118\c16078\c18039;\cssrgb\c10588\c12157\c13725\c29804;\cssrgb\c29412\c29412\c29412;
\cssrgb\c18431\c18431\c18431;\cssrgb\c0\c0\c0;\cssrgb\c0\c50196\c0;\cssrgb\c0\c50196\c50196;\cssrgb\c0\c0\c100000;
\cssrgb\c14118\c15294\c16078;\cssrgb\c93725\c94118\c94510;\cssrgb\c83922\c82745\c83922;\cssrgb\c17255\c18824\c20000;\cssrgb\c0\c51765\c0;
\cssrgb\c43922\c23922\c66667;\cssrgb\c23922\c11373\c50588;\cssrgb\c81961\c18431\c10588;\cssrgb\c30980\c30980\c30980;\cssrgb\c30980\c50588\c52941;
\cssrgb\c92941\c10980\c14118;\cssrgb\c72941\c17647\c63529;\cssrgb\c24314\c11765\c50588;\cssrgb\c28627\c28627\c28627;\cssrgb\c0\c56078\c0;
\cssrgb\c73333\c17255\c63529;\cssrgb\c15294\c16471\c84706;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab692
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 \CocoaLigature0 <MMEmotionCentre: 0x1c1c64580> sel:setAppkey:platformId:\
k51hidwqkextb,\
464878039ce8441a8a0a9f88d8efed4b\
\
select * from t_anchor where id = 9\
select * from t_anchor_record where user_id = 10020 and id > 945\
update t_anchor set birthday = NULL where id = 9\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\b0\fs26 \cf3    \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf3 layer.cornerRadius\
layer.masksToBounds\
layer.borderColor\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf4 \cb5 \CocoaLigature1 layer\cf2 .\cf4 borderWidth\
\cf2 + (\cf4 NSDictionary\cf2  *)modelCustomPropertyMapper \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 return\cf2  \cf6 @\{\cf7 @"index"\cf2  : \cf7 @"id"\cf6 \}\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}\
\pard\pardeftab720\sl380\partightenfactor0

\f3\fs27\fsmilli13600 \cf8 \cb9 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 + (\cf10 \strokec10 NSDictionary\cf8 \strokec8  *)\cf11 \strokec11 modelCustomPropertyMapper\cf8 \strokec8  \{\
    \cf12 \strokec12 return\cf8 \strokec8  @\{\cf13 \strokec13 @"name"\cf8 \strokec8  : \cf13 \strokec13 @"n"\cf8 \strokec8 ,\
             \cf13 \strokec13 @"page"\cf8 \strokec8  : \cf13 \strokec13 @"p"\cf8 \strokec8 ,\
             \cf13 \strokec13 @"desc"\cf8 \strokec8  : \cf13 \strokec13 @"ext.desc"\cf8 \strokec8 ,\
             \cf13 \strokec13 @"bookID"\cf8 \strokec8  : @[\cf13 \strokec13 @"id"\cf8 \strokec8 ,\cf13 \strokec13 @"ID"\cf8 \strokec8 ,\cf13 \strokec13 @"book_id"\cf8 \strokec8 ]\};\
\}\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \cb5 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\

\f1\fs28 \cf2 + (\cf4 NSDictionary\cf2  *)modelContainerPropertyGenericClass \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 return\cf2  \cf6 @\{\cf7 @"picList"\cf2   : [\cf14 MyProfileInfoPicList\cf2  \cf15 class\cf2 ]\cf6 \}\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\fs26 \cf3 \cb1 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf3 \
"$\{RevealServer\}"\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf14 \cb5 \CocoaLigature1 WWChatGroupListViewController\cf2  *chatGroupListVC = [[\cf14 WWChatGroupListViewController\cf2  \cf15 alloc\cf2 ] \cf15 init\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     chatGroupListVC.\cf14 groupList\cf2  = \cf3 self\cf2 .\cf14 subGroupList\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     chatGroupListVC.\cf14 arrayGroups\cf2  = [\cf3 self\cf2 .\cf14 arrayGroups\cf2  \cf15 mutableCopy\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 CATransition\cf2  *transition = [\cf4 CATransition\cf2  \cf15 animation\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     transition.\cf4 type\cf2 =\cf4 kCATransitionPush\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     transition.\cf4 subtype\cf2 =\cf4 kCATransitionFromTop\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [\cf3 self\cf2 .\cf4 navigationController\cf2 .\cf4 view\cf2 .\cf4 layer\cf2  \cf15 addAnimation\cf2 :transition \cf15 forKey\cf2 :\cf4 kCATransition\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [\cf3 self\cf2 .\cf4 navigationController\cf2  \cf15 pushViewController\cf2 :chatGroupListVC \cf15 animated\cf2 :\cf3 NO\cf2 ];\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs26 \cf3 \cb1 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2     
\fs28 \cf4 \cb5 \CocoaLigature1 CABasicAnimation\cf2  *rotationAnimation = [\cf4 CABasicAnimation\cf2  \cf15 animationWithKeyPath\cf2 :\cf7 @"transform.rotation.z"\cf2 ];
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2         rotationAnimation.\cf4 fromValue\cf2  = \cf6 @0\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         rotationAnimation.\cf4 toValue\cf2  = [\cf4 NSNumber\cf2  \cf15 numberWithFloat\cf2 : \cf16 M_PI\cf2  * \cf6 2.0\cf2  ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         rotationAnimation.\cf4 duration\cf2  = \cf6 4\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         rotationAnimation.\cf4 repeatCount\cf2  = \cf16 HUGE_VALF\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         rotationAnimation.\cf4 fillMode\cf2  = \cf4 kCAFillModeBoth\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         [cella.\cf14 view2\cf2 .\cf14 animation\cf2 .\cf4 layer\cf2  \cf15 addAnimation\cf2 :rotationAnimation \cf15 forKey\cf2 :\cf3 nil\cf2 ];\
\
(CAGradientLayer *)\ulth \ulc2 s\ulnone ideGradLayer.colors = \cf6 @[\cf2 (\cf3 __bridge\cf2  \cf3 id\cf2 )color.CGColor,(\cf3 __bridge\cf2  \cf3 id\cf2 )[color colorWithAlphaComponent:\cf6 0.2\cf2 ].CGColor\cf6 ]\cf2 ;\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs26 \cf2 \cb1 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
    \cf4 UIImageView\cf2  *imageView = [[\cf4 UIImageView\cf2  \cf15 alloc\cf2 ]\cf15 initWithFrame\cf2 :\cf3 self\cf2 .\cf14 chatSessionInputBarControl\cf2 .\cf4 bounds\cf2 ];\
    \cf17 //imageView.image = [UIImage imageWithColor:[UIColor colorWithHexString:@"ffffff"]];\cf2 \
    imageView.\cf4 backgroundColor\cf2  = [\cf4 UIColor\cf2  \cf15 whiteColor\cf2 ];\
    \cf17 //
\f4 \'bf\'aa\'ca\'bc\'b6\'d4
\f1 imageView
\f4 \'bd\'f8\'d0\'d0\'bb\'ad\'cd\'bc
\f1 \cf2 \
    \cf15 UIGraphicsBeginImageContextWithOptions\cf2 (imageView.\cf4 bounds\cf2 .\cf4 size\cf2 , \cf3 YES\cf2 , [\cf4 UIScreen\cf2  \cf15 mainScreen\cf2 ].\cf4 scale\cf2 );\
    \cf17 //
\f4 \'ca\'b9\'d3\'c3\'b1\'b4\'c8\'fb\'b6\'fb\'c7\'fa\'cf\'df\'bb\'ad\'b3\'f6\'d2\'bb\'b8\'f6\'d4\'b2\'d0\'ce\'cd\'bc
\f1 \cf2 \
    \cf4 UIBezierPath\cf2  *bezierPath = [\cf4 UIBezierPath\cf2  \cf15 bezierPathWithRoundedRect\cf2 :\cf3 self\cf2 .\cf14 chatSessionInputBarControl\cf2 .\cf4 bounds\cf2  \cf15 byRoundingCorners\cf2 :(\cf15 UIRectCornerTopLeft\cf2  | \cf15 UIRectCornerTopRight\cf2 ) \cf15 cornerRadii\cf2 :\cf15 CGSizeMake\cf2 (\cf6 12\cf2 , \cf6 12\cf2 )];\
    [bezierPath \cf15 addClip\cf2 ];\
    [bezierPath \cf15 setLineWidth\cf2 :\cf6 1\cf2 ];\
    [[\cf4 UIColor\cf2  \cf15 redColor\cf2 ] \cf15 setStroke\cf2 ];\
    [bezierPath \cf15 stroke\cf2 ];\
    [imageView \cf15 drawRect\cf2 :imageView.\cf4 bounds\cf2 ];\
    imageView.\cf4 image\cf2  = \cf15 UIGraphicsGetImageFromCurrentImageContext\cf2 ();\
    \cf17 //
\f4 \'bd\'e1\'ca\'f8\'bb\'ad\'cd\'bc
\f1 \cf2 \
    \cf15 UIGraphicsEndImageContext\cf2 ();\
    \cf3 self\cf2 .\cf14 layerCornerBgView\cf2  = imageView;\cf3 \
\
//
\f4 \'c3\'b6\'be\'d9\'ca\'fd\'d7\'e9
\f1 \
\cf14 WBadgeAnimType\cf2  animations[] = \{\cf18 WBadgeAnimTypeShake\cf2 , \cf18 WBadgeAnimTypeBounce\cf2 , \cf18 WBadgeAnimTypeBreathe\cf2 , \cf18 WBadgeAnimTypeScale\cf2 \};\cf3 \
\

\f4 \'d7\'a5\'b0\'fc\'a3\'ba
\f1 \
\pard\pardeftab720\partightenfactor0

\f4\fs36 \cf19 \cb20 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'d7\'a5iphone\'ca\'fd\'be\'dd
\fs32 \cb21 \
\pard\pardeftab720\partightenfactor0
\cf19 \cb20 \'cf\'eb\'d7\'a5iphone\'b5\'c4\'ca\'fd\'be\'dd\'a3\'ac\'ca\'d7\'cf\'c8\'d0\'e8\'d2\'aa\'c8\'c3iphone\'ca\'fd\'be\'dd\'cd\'a8\'b9\'fdmac\'b2\'c5\'d0\'d0\'a1\'a3\'bf\'b4\'b5\'bd\'cd\'f8\'c9\'cf\'ba\'dc\'b6\'e0\'c9\'e8\'b4\'fa\'c0\'ed\'ca\'b2\'c3\'b4\'b5\'c4\'b7\'bd\'b7\'a8\'a3\'ac\'b1\'c8\'bd\'cf\'b8\'b4\'d4\'d3\'a3\'ac\'d3\'d0\'b5\'c4\'bb\'b9\'d2\'aa\'d4\'bd\'d3\'fc\'a1\'a3\'c6\'e4\'ca\'b5\'c3\'bb\'b1\'d8\'d2\'aa\'a1\'a3\'d6\'bb\'d2\'aa\'c1\'b4\'c9\'cf\'ca\'fd\'be\'dd\'cf\'df\'a3\'ac\'c8\'bb\'ba\'f3\'d4\'damac\'b5\'c4\'d6\'d5\'b6\'cb\'d6\'b4\'d0\'d0\'a3\'ba\cb21 \
\cb20 	
\b rvictl -s iphone\'c9\'e8\'b1\'b8id
\b0 \cb21 \
\cb20 \'d5\'e2\'ca\'b1\'a3\'ac\'cb\'f9\'d3\'d0iphone\'cd\'f8\'c2\'e7\'c1\'f7\'c1\'bf\'b6\'bc\'bb\'e1\'be\'ad\'b9\'fdiphone\'cb\'f9\'c1\'b4\'bd\'d3\'b5\'c4mac\'a3\'ac\'b2\'a2\'c7\'d2iphone\'ca\'fd\'be\'dd\'bb\'b9\'ca\'c7\'d7\'df\'d7\'d4\'bc\'ba\'b5\'c4\'cd\'f8\'c2\'e7\'a3\'ac\'b1\'c8\'c8\'e7iphone\'c1\'b4\'bd\'d3\'d4\'da3g\'cd\'f8\'c2\'e7\'a3\'ac\'ca\'fd\'be\'dd\'bb\'b9\'ca\'c7\'bb\'e1\'cd\'a8\'b9\'fd3G\'ca\'d5\'b7\'a2\'a3\'ac\'b6\'f8\'b2\'bb\'ca\'c7\'cd\'a8\'b9\'fdmac\'b5\'c4\'cd\'f8\'c2\'e7\'a1\'a3\'b6\'cf\'bf\'aa\'c1\'ac\'bd\'d3\'a3\'ba\cb21 \
\cb20 	
\b rvictl -x iphone\'c9\'e8\'b1\'b8id
\b0 \cb21 \
\cb20 \'c9\'e8\'b1\'b8\'c1\'ac\'bd\'d3\'ba\'f3\'a3\'acmac\'bb\'e1\'b3\'f6\'cf\'d6\'d2\'bb\'b8\'f6\'b6\'d4\'d3\'a6\'b5\'c4\'d0\'e9\'c4\'e2\'cd\'f8\'c2\'e7\'bd\'d3\'bf\'da\'a3\'ac\'c3\'fb\'d7\'d6\'ca\'c7rvi0\'a3\'a8\'c8\'e7\'b9\'fb\'d3\'d0\'b6\'e0\'b8\'f6iphone\'d4\'f2\'c0\'db\'bc\'d3\'a3\'acrvi1\'a3\'acrvi2\'a1\'ad\'a3\'a9\
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf3 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\
\cf2  \cf3 if\cf2  (object == \cf3 self\cf2 .\cf14 contentWebview\cf2 .\cf4 scrollView\cf2  && [keyPath \cf15 isEqualToString\cf2 :\cf7 @"contentOffset"\cf2 ])\{\
        \cf3 if\cf2  ([\cf3 self\cf2 .\cf14 contentWebview\cf2  \cf15 respondsToSelector\cf2 :\cf3 @selector\cf2 (_updateVisibleContentRects)]) \{\
            ((\cf3 void\cf2 (*)(\cf3 id\cf2 ,\cf3 SEL\cf2 ,\cf3 BOOL\cf2 ))\cf15 objc_msgSend\cf2 )(\cf3 self\cf2 .\cf14 contentWebview\cf2 ,\cf3 @selector\cf2 (_updateVisibleContentRects),\cf3 NO\cf2 );\
        \}\
    \}\
\
\cf3 static\cf2  \cf3 void\cf2  *WWReportViewControllerObserverContext = &\cf14 WWReportViewControllerObserverContext\cf2 ;\
[\cf3 self\cf2  \cf15 addObserver\cf2 :\cf3 self\cf2  \cf15 forKeyPath\cf2 :\cf7 @"isCommitBtnEnabled"\cf2  \cf15 options\cf2 :\cf15 NSKeyValueObservingOptionNew\cf2  \cf15 context\cf2 :\cf14 WWReportViewControllerObserverContext\cf2 ];\
- (\cf3 void\cf2 )observeValueForKeyPath:(\cf4 NSString\cf2  *)keyPath ofObject:(\cf3 id\cf2 )object change:(\cf4 NSDictionary\cf2  *)change context:(\cf3 void\cf2  *)context \{\
    \cf3 if\cf2  ( context == \cf14 WWReportViewControllerObserverContext\cf2 ) \{\
        \cf3 BOOL\cf2  isEnalbed = [[change \cf15 objectForKey\cf2 :\cf4 NSKeyValueChangeNewKey\cf2 ] \cf15 boolValue\cf2 ];\
        \cf3 if\cf2  (isEnalbed) \{\
            \cf3 self\cf2 .\cf14 commit\cf2 .\cf4 enabled\cf2  = \cf3 YES\cf2 ;\
            \cf3 self\cf2 .\cf14 textView\cf2 .\cf4 layer\cf2 .\cf4 borderColor\cf2  = [\cf4 UIColor\cf2  \cf18 colorWithHexString\cf2 :\cf7 @"7269ff"\cf2 ].\cf4 CGColor\cf2 ;\
        \}\cf3 else\cf2 \{\
            \cf3 self\cf2 .\cf14 commit\cf2 .\cf4 enabled\cf2  = \cf3 NO\cf2 ;\
            \cf3 self\cf2 .\cf14 textView\cf2 .\cf4 layer\cf2 .\cf4 borderColor\cf2  = [\cf4 UIColor\cf2  \cf18 colorWithHexString\cf2 :\cf7 @"e5e5e5"\cf2 ].\cf4 CGColor\cf2 ;\
        \}\
    \}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f4\fs28 \cf22 \cb20 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'d3\'c3
\f5 scrollRangeToVisible
\f4 \'ba\'af\'ca\'fd\'bd\'f8\'d0\'d0\'b9\'f6\'b6\'af\'a3\'ac\'bf\'c9\'d2\'d4\'cc\'f8\'b6\'af\'b5\'bd\'d7\'ee\'ba\'f3\'d2\'bb\'d0\'d0\'c4\'da\'c8\'dd\'c9\'cf
\f1\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\partightenfactor0

\f6\fs24 \cf23 \cb20 \expnd0\expndtw0\kerning0
\CocoaLigature1 [_textView\cf24 \'a0scrollRangeToVisible\cf23 :NSMakeRange(_textView.text.length,\'a01)];\'a0\'a0\
\pard\pardeftab720\partightenfactor0

\f7\b \cf25 self
\f6\b0 \cf23 .textView.layoutManager.allowsNonContiguousLayout\'a0=\'a0
\f7\b \cf25 NO
\f6\b0 \cf23 ;\'a0\'a0\
\pard\pardeftab720\partightenfactor0

\f4\fs28 \cf22 \'d5\'e2\'be\'e4\'b4\'fa\'c2\'eb\'c9\'e8\'d6\'c3\'c1\'cb
\f5  UITextView 
\f4 \'d6\'d0\'b5\'c4
\f5  layoutManager(NSLayoutManager) 
\f4 \'b5\'c4\'ca\'c7\'b7\'f1\'b7\'c7\'c1\'ac\'d0\'f8\'b2\'bc\'be\'d6\'ca\'f4\'d0\'d4\'a3\'ac\'c4\'ac\'c8\'cf\'ca\'c7
\f5  YES
\f4 \'a3\'ac\'c9\'e8\'d6\'c3\'ce\'aa
\f5  NO 
\f4 \'ba\'f3
\f5  UITextView 
\f4 \'be\'cd\'b2\'bb\'bb\'e1\'d4\'d9\'d7\'d4\'bc\'ba\'d6\'d8\'d6\'c3\'bb\'ac\'b6\'af\'c1\'cb\'a1\'a3
\f1\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
-(\cf3 void\cf2 )getCurrentMapScreenShot\{\
    \cf17 // 
\f4 \'bd\'d8\'cd\'bc\'b8\'bd\'bc\'d3\'d1\'a1\'cf\'ee
\f1 \cf2 \
    \cf4 MKMapSnapshotOptions\cf2  *options = [[\cf4 MKMapSnapshotOptions\cf2  \cf15 alloc\cf2 ] \cf15 init\cf2 ];\
    \cf17 // 
\f4 \'c9\'e8\'d6\'c3\'bd\'d8\'cd\'bc\'c7\'f8\'d3\'f2
\f1 (
\f4 \'d4\'da\'b5\'d8\'cd\'bc\'c9\'cf\'b5\'c4\'c7\'f8\'d3\'f2
\f1 ,
\f4 \'d7\'f7\'d3\'c3\'d4\'da\'b5\'d8\'cd\'bc
\f1 )\cf2 \
    options.region = \cf3 self\cf2 .mapView.region;\
    \cf17 //    options.mapRect = self.mapView.visibleMapRect;\cf2 \
    \
    \cf17 // 
\f4 \'c9\'e8\'d6\'c3\'bd\'d8\'cd\'bc\'ba\'f3\'b5\'c4\'cd\'bc\'c6\'ac\'b4\'f3\'d0\'a1
\f1 (
\f4 \'d7\'f7\'d3\'c3\'d4\'da\'ca\'e4\'b3\'f6\'cd\'bc\'cf\'f1
\f1 )\cf2 \
    options.size = \cf3 self\cf2 .mapView.frame.size;\
    \cf17 // 
\f4 \'c9\'e8\'d6\'c3\'bd\'d8\'cd\'bc\'ba\'f3\'b5\'c4\'cd\'bc\'c6\'ac\'b1\'c8\'c0\'fd\'a3\'a8\'c4\'ac\'c8\'cf\'ca\'c7\'c6\'c1\'c4\'bb\'b1\'c8\'c0\'fd\'a3\'ac
\f1  
\f4 \'d7\'f7\'d3\'c3\'d4\'da\'ca\'e4\'b3\'f6\'cd\'bc\'cf\'f1\'a3\'a9
\f1 \cf2 \
    options.\cf4 scale\cf2  = [[\cf4 UIScreen\cf2  \cf15 mainScreen\cf2 ] \cf15 scale\cf2 ];\
    \
    \cf4 MKMapSnapshotter\cf2  *snapshotter = [[\cf4 MKMapSnapshotter\cf2  \cf15 alloc\cf2 ] \cf15 initWithOptions\cf2 :options];\
    [snapshotter \cf15 startWithCompletionHandler\cf2 :^(\cf4 MKMapSnapshot\cf2  * \cf3 _Nullable\cf2  snapshot, \cf4 NSError\cf2  * \cf3 _Nullable\cf2  error) \{\
        \cf3 if\cf2  (error) \{\
            \cf15 NSLog\cf2 (\cf7 @"
\f4 \'bd\'d8\'cd\'bc\'b4\'ed\'ce\'f3\'a3\'ba
\f1 %@"\cf2 ,error.\cf4 localizedDescription\cf2 );\
        \}\cf3 else\cf2 \
        \{\
            \cf17 // 
\f4 \'c9\'e8\'d6\'c3\'c6\'c1\'c4\'bb\'c9\'cf\'cd\'bc\'c6\'ac\'cf\'d4\'ca\'be
\f1 \cf2 \
            \cf3 self\cf2 .snapshootImageView.image = snapshot.image;\
            \cf17 // 
\f4 \'bd\'ab\'cd\'bc\'c6\'ac\'b1\'a3\'b4\'e6\'b5\'bd\'d6\'b8\'b6\'a8\'c2\'b7\'be\'b6\'a3\'a8\'b4\'cb\'b4\'a6\'ca\'c7\'d7\'c0\'c3\'e6\'c2\'b7\'be\'b6\'a3\'ac\'d0\'e8\'d2\'aa\'b8\'f9\'be\'dd\'b8\'f6\'c8\'cb\'b5\'e7\'c4\'d4\'b2\'bb\'cd\'ac\'bd\'f8\'d0\'d0\'d0\'de\'b8\'c4\'a3\'a9
\f1 \cf2 \
            \cf4 NSData\cf2  *data = \cf15 UIImagePNGRepresentation\cf2 (snapshot.\cf4 image\cf2 );\
            [data \cf15 writeToFile\cf2 :\cf7 @"/Users/wangshunzi/Desktop/snap.png"\cf2  \cf15 atomically\cf2 :\cf3 YES\cf2 ];\
        \}\
    \}];\
\}\
\
\
\pard\pardeftab720\partightenfactor0

\f6 \cf22 \cb20 \expnd0\expndtw0\kerning0
\CocoaLigature1 NSString\'a0*path\'a0=\'a0[[NSBundle\'a0mainBundle]\'a0pathForResource:@\'94icon\'94\'a0ofType:@\'94png\'94];\
UIImage\'a0*image\'a0=\'a0[UIImage\'a0imageWithContentsOfFile:path];\
\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf3 \cb5 \kerning1\expnd0\expndtw0 if\cf2  (\cf3 @available\cf2 (iOS \cf6 11.0\cf2 , *)) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 self\cf2 .\cf14 collectionView\cf2 .\cf4 contentInsetAdjustmentBehavior\cf2  = \cf15 UIScrollViewContentInsetAdjustmentNever\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 self\cf2 .\cf14 collectionView\cf2 .\cf4 scrollIndicatorInsets\cf2  = \cf3 self\cf2 .\cf14 collectionView\cf2 .\cf4 contentInset\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f6\fs26 \cf22 \cb20 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clmgf \clvertalt \clshdrawnil \clwWidth31724\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl200 \clpadr200 \gaph\cellx4320
\clmrg \clvertalt \clshdrawnil \clwWidth31724\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f6\fs24 \cf26 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 NSAttributedString\cf27  *attrStr = [[\cf26 NSAttributedString\cf27  \cf26 alloc\cf27 ] \cf26 initWithData:\cf27 [htmlStr \cf26 dataUsingEncoding:NSUnicodeStringEncoding\cf27 ] \cf26 options:\cf27 @\{ \cf26 NSDocumentTypeDocumentAttribute\cf27 : \cf26 NSHTMLTextDocumentType\cf27  \} \cf26 documentAttributes:nil\cf27  \cf26 error:nil\cf27 ];\cell 
\pard\intbl\itap1\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth1000\clftsWidth3 \clminw1000 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl200 \clpadr200 \gaph\cellx4320
\clvertalt \clshdrawnil \clwWidth31724\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf28 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf27         self.attributedText = attrStr;\cell \lastrow\row
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 - (\cf3 BOOL\cf2 )table:(\cf4 UITableView\cf2  *)tableView rectVisible:(\cf4 CGRect\cf2 )rect \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 CGRect\cf2  visibleRect;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     visibleRect.\cf4 origin\cf2  = tableView.\cf4 contentOffset\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     visibleRect.\cf4 origin\cf2 .\cf4 y\cf2  += tableView.\cf4 contentInset\cf2 .\cf4 top\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     visibleRect.\cf4 size\cf2  = tableView.\cf4 bounds\cf2 .\cf4 size\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     visibleRect.\cf4 size\cf2 .\cf4 height\cf2  -= tableView.\cf4 contentInset\cf2 .\cf4 top\cf2  + tableView.\cf4 contentInset\cf2 .\cf4 bottom\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 return\cf2  \cf15 CGRectContainsRect\cf2 (visibleRect, rect);
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\f2\fs24 \cf0 \
\

\f1\fs28 \cf2 - (\cf3 void\cf2 )scrollToCursorForTextView:(\cf4 UITextView\cf2 *)textView \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 CGRect\cf2  cursorRect = [textView \cf15 caretRectForPosition\cf2 :textView.\cf4 selectedTextRange\cf2 .\cf4 start\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     cursorRect = [\cf3 self\cf2 .\cf14 tableView\cf2  \cf15 convertRect\cf2 :cursorRect \cf15 fromView\cf2 :textView];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (![\cf3 self\cf2  \cf18 table\cf2 :\cf3 self\cf2 .\cf14 tableView\cf2  \cf18 rectVisible\cf2 :cursorRect]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         cursorRect.\cf4 size\cf2 .\cf4 height\cf2  += \cf6 8\cf2 ; \cf17 // To add some space underneath the cursor
\f2\fs24 \cf0 \

\f1\fs28 \cf2         [\cf3 self\cf2 .\cf14 tableView\cf2  \cf15 scrollRectToVisible\cf2 :cursorRect \cf15 animated\cf2 :\cf3 YES\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\fs26 \cb21 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 - (\cf3 void\cf2 )setBody:(\cf4 NSString\cf2  *)bodyText
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\cf14 _body\cf2  = bodyText;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\cf4 NSAttributedString\cf2  *attributedString = [[\cf4 NSAttributedString\cf2  \cf15 alloc\cf2 ] \cf15 initWithData\cf2 :[bodyText \cf15 dataUsingEncoding\cf2 :\cf15 NSUnicodeStringEncoding\cf2 ] \cf15 options\cf2 :\cf6 @\{\cf2  \cf4 NSDocumentTypeDocumentAttribute\cf2 : \cf4 NSHTMLTextDocumentType\cf2  \cf6 \}\cf2  \cf15 documentAttributes\cf2 :\cf3 nil\cf2  \cf15 error\cf2 :\cf3 nil\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\cf3 self\cf2 .\cf4 attributedText\cf2  = attributedString;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}\
\
- (\cf3 void\cf2 )prepareForSegue:(\cf4 UIStoryboardSegue\cf2  *)segue sender:(\cf3 id\cf2 )sender \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\cf3 if\cf2  ([[segue \cf15 identifier\cf2 ] \cf15 isEqualToString\cf2 :\cf7 @"showDetail"\cf2 ]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	    \cf4 NSIndexPath\cf2  *indexPath = [\cf3 self\cf2 .\cf4 tableView\cf2  \cf15 indexPathForSelectedRow\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	    \cf4 NSDate\cf2  *object = \cf3 self\cf2 .\cf14 objects\cf2 [indexPath.\cf4 row\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	    [[segue \cf15 destinationViewController\cf2 ] \cf18 setDetailItem\cf2 :object];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\}
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs26 \cf2 \cb21 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf17 \cb5 \CocoaLigature1 // 
\f4 \'ca\'b9\'d3\'c3
\f1 edges
\f4 \'ca\'b9\'b5\'e3\'c2\'fa\'d5\'fb\'b8\'f6
\f1 self.view
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2   [scrollView \cf18 mas_makeConstraints\cf2 :^(\cf14 MASConstraintMaker\cf2  *make) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     make.\cf14 edges\cf2 .\cf18 equalTo\cf2 (weakSelf.\cf4 view\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf17 // 
\f4 \'c8\'e7\'b9\'fb\'d5\'e2\'c1\'bd\'b8\'f6\'b1\'ea\'c7\'a9\'b5\'c4\'c4\'da\'c8\'dd\'b6\'bc\'ca\'c7\'b2\'bb\'c8\'b7\'b6\'a8\'b5\'c4\'a3\'ac\'d2\'b2\'be\'cd\'ca\'c7\'b2\'bb\'c8\'b7\'b6\'a8\'c4\'c4\'b8\'f6\'b5\'c4\'c4\'da\'c8\'dd\'b8\'fc\'b6\'e0\'a3\'ac\'c4\'c7\'c3\'b4\'bf\'c9\'d2\'d4\'d5\'e2\'c3\'b4\'c9\'e8\'d6\'c3\'a1\'a3
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf17 // 
\f4 \'d5\'e2\'d1\'f9\'be\'cd\'bf\'c9\'d2\'d4\'b1\'a3\'d6\'a4\'ca\'b9\'d3\'c3\'c4\'da\'c8\'dd\'d7\'ee\'b6\'e0\'b5\'c4\'b1\'ea\'c7\'a9\'d7\'f7\'ce\'aa
\f1 scrollview
\f4 \'b5\'c4
\f1 contentSize
\f4 \'b2\'ce\'bf\'bc\'a1\'a3
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf17 // 
\f4 \'d3\'c3\'d3\'da\'c8\'b7\'b6\'a8
\f1 scrollview
\f4 \'b5\'c4
\f1 contentSize.height
\f2\fs24 \cf0 \

\f1\fs28 \cf2     make.\cf14 bottom\cf2 .\cf16 mas_greaterThanOrEqualTo\cf2 (avgLabel1.\cf14 mas_bottom\cf2 ).\cf18 offset\cf2 (\cf6 40\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2     make.\cf14 bottom\cf2 .\cf16 mas_greaterThanOrEqualTo\cf2 (avgLabel2.\cf14 mas_bottom\cf2 ).\cf18 offset\cf2 (\cf6 40\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2   \}];
\fs26 \cb21 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
xib
\f4 \'cd\'bc\'c6\'ac\'cf\'c2\'c0\'ad\'b7\'c5\'b4\'f3
\f1 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 - (\cf3 void\cf2 ) scrollViewDidScroll:(\cf4 UIScrollView\cf2  *)scrollView
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 CGFloat\cf2  yPos = -scrollView.\cf4 contentOffset\cf2 .\cf4 y\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf15 NSLog\cf2 (\cf7 @"heightis:%f"\cf2 ,\cf3 self\cf2 .\cf14 topbg\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 height\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf15 NSLog\cf2 (\cf7 @"width:%f"\cf2 ,\cf3 self\cf2 .\cf14 topbg\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 width\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (yPos > \cf6 0\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         [\cf3 self\cf2 .\cf14 topbg\cf2  \cf18 mas_updateConstraints\cf2 :^(\cf14 MASConstraintMaker\cf2  *make) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             make.\cf14 height\cf2 .\cf16 mas_equalTo\cf2 (\cf6 @(\cf14 Mheight\cf2 +yPos\cf6 )\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2             make.\cf14 top\cf2 .\cf16 mas_equalTo\cf2 (-yPos);
\f2\fs24 \cf0 \

\f1\fs28 \cf2             make.\cf14 left\cf2 .\cf16 mas_equalTo\cf2 (-yPos);
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf17 //
\f2\fs24 \cf0 \

\f1\fs28 \cf2             make.\cf14 width\cf2 .\cf16 mas_equalTo\cf2 (\cf6 @(\cf14 Mwidth\cf2 +yPos*\cf6 2)\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf17 //make.width.equalTo(self.bgmig.mas_height).with.multipliedBy(300/173);
\f2\fs24 \cf0 \

\f1\fs28 \cf2             [\cf3 self\cf2 .\cf14 scollview\cf2  \cf15 setNeedsLayout\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf17 //            self.height.constant = Mheight+yPos;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf17 //            self.left.constant = -yPos;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf17 //            self.top.constant = -yPos;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\fs26 \cb21 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf17 \cb5 \CocoaLigature1 //
\f4 \'cb\'ab\'bb\'f7\'b4\'a6\'c0\'ed
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2     \cf3 if\cf2 ([viewController.\cf4 tabBarItem\cf2 .\cf4 title\cf2  \cf15 isEqualToString\cf2 :\cf7 @"
\f4 \'c3\'e6\'c1\'c4
\f1 "\cf2 ])\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 if\cf2  (!\cf3 self\cf2 .\cf14 lastFaceTalkTabbarTappedTime\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 self\cf2 .\cf14 lastFaceTalkTabbarTappedTime\cf2  = [\cf4 NSDate\cf2  \cf15 date\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}\cf3 else\cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf4 NSDate\cf2  *date = [\cf4 NSDate\cf2  \cf15 date\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf4 NSTimeInterval\cf2  interval = [date \cf15 timeIntervalSinceDate\cf2 :\cf3 self\cf2 .\cf14 lastFaceTalkTabbarTappedTime\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 self\cf2 .\cf14 lastFaceTalkTabbarTappedTime\cf2  = \cf3 nil\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 if\cf2  (interval < \cf6 0.8\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \cf14 ZTNavigationViewController\cf2  *nav = (\cf14 ZTNavigationViewController\cf2  *)viewController;
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \cf14 DWHostListViewController\cf2  *faceTalkVC = (\cf14 DWHostListViewController\cf2  *)nav.\cf4 viewControllers\cf2 .\cf4 firstObject\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \cf3 if\cf2 ([faceTalkVC \cf15 respondsToSelector\cf2 :\cf3 @selector\cf2 (doubleTapTabbarItemAction)])\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                     [faceTalkVC \cf18 doubleTapTabbarItemAction\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2         
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\fs26 \cb21 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf7 \cb5 \CocoaLigature1 _FDFullscreenPopGestureRecognizerDelegate
\fs26 \cf2 \cb21 \CocoaLigature0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 - (\cf3 BOOL\cf2 )gestureRecognizer:(\cf4 UIGestureRecognizer\cf2  *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(\cf4 UIGestureRecognizer\cf2  *)otherGestureRecognizer \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (\cf3 self\cf2 .\cf4 contentOffset\cf2 .\cf4 x\cf2  <= \cf6 0\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 if\cf2  ([otherGestureRecognizer.\cf4 delegate\cf2  \cf15 isKindOfClass\cf2 :\cf15 NSClassFromString\cf2 (\cf7 @"_FDFullscreenPopGestureRecognizerDelegate"\cf2 )]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 return\cf2  \cf3 YES\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 return\cf2  \cf3 NO\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\fs26 \cb21 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f4\fs28 \cf17 \cb5 \CocoaLigature1 \'d7\'d6\'b7\'fb\'b4\'ae\'b9\'fd\'c2\'cb\'d3\'eb\'b4\'a6\'c0\'ed\
\pard\pardeftab720\sl320\partightenfactor0

\f8\fs26 \cf29 \cb20 \expnd0\expndtw0\kerning0
NSCharacterSet\'a0*set\'a0=\'a0[NSCharacterSet characterSetWithCharactersInString:@"@
\f9 \uc0\u65295 \u65306 \u65307 \u65288 \u65289 
\f10 \'a3\'a4
\f9 \uc0\u12300 \u12301 \u65282 \u12289 
\f11 []\{\}#%-*+=_\\\\|~
\f9 \uc0\u65308 \u65310 
\f11 $\'80^\'b7'@#$%^&*()_+'""];
\f4\fs28 \cf17 \cb5 \kerning1\expnd0\expndtw0 \

\f8\fs26 \cf29 \cb20 \expnd0\expndtw0\kerning0
NSString\'a0*trimmedString\'a0=\'a0[stringstringByTrimmingCharactersInSet:set];
\f4\fs28 \cf17 \cb5 \kerning1\expnd0\expndtw0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0
\cf17 \
\pard\pardeftab720\sl740\sa300\partightenfactor0

\f12\fs44 \cf30 \cb20 \expnd0\expndtw0\kerning0
\'c5\'d0\'b6\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'b7\'f1\'ce\'aa\'bf\'d5(\'b0\'fc\'c0\'a8
\f13\b nil
\f12\b0 ,
\f13\b @""
\f12\b0 ,\'c8\'ab\'ca\'c7\'bf\'d5\'b8\'f1)\'b5\'c4\'b4\'fa\'c2\'eb
\f13\b :\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\b0\fs28 \cf16 \cb5 \kerning1\expnd0\expndtw0 #pragma mark - 
\f4 \'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'ce\'aa\'bf\'d5\'d7\'d6\'b7\'fb\'b4\'ae\'b4\'ab
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 -(\cf3 BOOL\cf2 )IsEmpty:(NSString *)string\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (string == \cf3 nil\cf2  || string == \cf3 NULL\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 YES\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  ([string isKindOfClass:[NSNull \cf3 class\cf2 ]]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 YES\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSCharacterSet *set = [NSCharacterSet whitespaceAndNewlineCharacterSet];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSString *trimedString = [string stringByTrimmingCharactersInSet:set];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (trimedString.length == \cf6 0\cf2   ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 YES\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 return\cf2  \cf3 NO\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\f4 \cf17 \
\pard\pardeftab720\sl880\sa300\partightenfactor0

\f12\fs52 \cf30 \cb20 \expnd0\expndtw0\kerning0
\'c5\'d0\'b6\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'b7\'f1\'ce\'aa
\f13\b float 
\f12\b0 \'c0\'e0\'d0\'cd
\f13\b \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\b0\fs28 \cf2 \cb5 \kerning1\expnd0\expndtw0 -(\cf3 BOOL\cf2 )isPureFloat:(NSString *)string\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSScanner *scanner = [NSScanner scannerWithString:string];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 float\cf2  val;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 return\cf2  [scanner scanFloat:&val] && [scanner isAtEnd];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\f4 \cf17 \
\
\pard\pardeftab720\sl880\sa300\partightenfactor0

\f12\fs52 \cf30 \cb20 \expnd0\expndtw0\kerning0
\'c5\'d0\'b6\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'b7\'f1\'ce\'aa
\f13\b int 
\f12\b0 \'c0\'e0\'d0\'cd
\f13\b \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\b0\fs28 \cf2 \cb5 \kerning1\expnd0\expndtw0 -(\cf3 BOOL\cf2 )isPureFloat:(NSString *)string\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSScanner *scanner = [NSScanner scannerWithString:string];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 int\cf2  val;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 return\cf2  [scanner scanFloat:&val] && [scanner isAtEnd];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\f4 \cf17 \
\pard\pardeftab720\sl880\sa300\partightenfactor0

\f12\fs52 \cf30 \cb20 \expnd0\expndtw0\kerning0
\'c8\'a5\'b5\'f4\'bf\'d5\'b8\'f1
\f13\b \
\pard\pardeftab720\sl280\partightenfactor0

\f14\b0\fs24 \cf31 \cb1 NSString -stringByTrimmingCharactersInSet:
\f15  
\f10 \'ca\'c7\'b8\'f6\'c4\'e3\'d0\'e8\'d2\'aa\'c0\'ce\'c0\'ce\'bc\'c7\'d7\'a1\'b5\'c4\'b7\'bd\'b7\'a8\'a1\'a3\'cb\'fc\'be\'ad\'b3\'a3\'bb\'e1\'b4\'ab\'c8\'eb
\f14 NSCharacterSet +whitespaceCharacterSet 
\f4 \'bb\'f2
\f14  +whitespaceAndNewlineCharacterSet
\f10 \'c0\'b4\'c9\'be\'b3\'fd\'ca\'e4\'c8\'eb\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'cd\'b7\'ce\'b2\'b5\'c4\'bf\'d5\'b0\'d7\'b7\'fb\'ba\'c5\'a1\'a3
\f15 \
\
\pard\pardeftab720\sl360\partightenfactor0

\f16 \cf32 //
\f4 \'b3\'fd\'c8\'a5\'d7\'d6\'b7\'fb\'b4\'ae\'c1\'bd\'b6\'cb\'b5\'c4\'bf\'d5\'b8\'f1
\f16     \cf31 \
\pard\pardeftab720\sl360\partightenfactor0
\cf33 2\cf31  +(NSString *) trimStringWhitespace:(NSString *)str\{\
\cf33 3\cf31      NSCharacterSet *whitespace = [NSCharacterSet whitespaceCharacterSet];\
\cf33 4\cf31      str = [str stringByTrimmingCharactersInSet:whitespace];\
\cf33 5\cf31      \cf34 return\cf31  str;\
\cf33 6\cf31  \}\
\pard\pardeftab720\sl280\partightenfactor0

\f15 \cf31 \
\pard\pardeftab720\sl880\sa300\partightenfactor0

\f12\fs52 \cf30 \cb20 \'bc\'b7\'d1\'b9\'bf\'d5\'b8\'f1
\f13\b \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\b0\fs28 \cf4 \cb5 \kerning1\expnd0\expndtw0 NSString\cf2  *string = \cf7 @"Lorem    ipsum dolar   sit  amet."\cf2 ;
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 string = [string stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
\f2\fs24 \cf0 \
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf4 NSArray\cf2  *components = [\cf14 string\cf2  \cf15 componentsSeparatedByCharactersInSet\cf2 :[\cf4 NSCharacterSet\cf2  \cf15 whitespaceCharacterSet\cf2 ]];
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 components = [components filteredArrayUsingPredicate:[NSPredicate predicateWithFormat:\cf7 @"self <> ''"\cf2 ]];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 string = [components componentsJoinedByString:\cf7 @" "\cf2 ];\
\
\
\pard\pardeftab720\sl300\partightenfactor0

\f6\fs26 \cf35 \cb36 \expnd0\expndtw0\kerning0
NSString *theString = @"    Hello      this  is a   long       string!   ";\
\
NSCharacterSet *whitespaces = [NSCharacterSet whitespaceCharacterSet];\
NSPredicate *noEmptyStrings = [NSPredicate predicateWithFormat:@"SELF != ''"];\
\
NSArray *parts = [theString componentsSeparatedByCharactersInSet:whitespaces];\
NSArray *filteredArray = [parts filteredArrayUsingPredicate:noEmptyStrings];\
theString = [filteredArray componentsJoinedByString:@" "];\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f15\fs24 \cf31 \cb1 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f4\fs28 \cf17 \cb5 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\sl300\partightenfactor0

\f6\fs26 \cf35 \cb36 \expnd0\expndtw0\kerning0
NSString *original = @"    Hello      this  is a   long       string!   ";\
\
NSString *squashed = [original stringByReplacingOccurrencesOfString:@"[ ]+"\
                                                         withString:@" "\
                                                            options:NSRegularExpressionSearch\
                                                              range:NSMakeRange(0, original.length)];\
\
NSString *final = [squashed stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\sl340\sa300\partightenfactor0

\f5\fs30 \cf35 \cb20 \expnd0\expndtw0\kerning0
\CocoaLigature1 Possible alternative regex patterns:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\sa150\partightenfactor0
\ls1\ilvl0\cf35 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Replace only space:\'a0
\f6\fs26 \cb36 [ ]+
\f5\fs30 \cb1 \
\ls1\ilvl0\cb20 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Replace space and tabs:\'a0
\f6\fs26 \cb36 [ \\\\t]+
\f5\fs30 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls1\ilvl0\cf35 \cb20 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Replace space, tabs and newlines:\'a0
\f6\fs26 \cb36 \\\\s+
\f5\fs30 \cb1 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\pard\pardeftab720\sl300\partightenfactor0

\f6 \cf35 \cb36 \expnd0\expndtw0\kerning0
\CocoaLigature1 NSString *theString = @"    Hello      this  is a   long       string!   ";\
\
theString = [theString stringByReplacingOccurrencesOfString:@" +" withString:@" "\
                       options:NSRegularExpressionSearch\
                       range:NSMakeRange(0, theString.length)];\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\sl880\sa300\partightenfactor0

\f12\fs52 \cf30 \cb20 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'b4\'d3\'d7\'d6\'b7\'fb\'b4\'ae\'bd\'e2\'ce\'f6\'ca\'fd\'be\'dd
\f13\b \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f4\b0\fs28 \cf2 \cb5 \kerning1\expnd0\expndtw0 \'c0\'fd\'c8\'e7\'a3\'ac\'c4\'e3\'cf\'eb\'b4\'d3\'d5\'e2\'d1\'f9\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'bd\'e2\'ce\'f6\'b3\'f6\'bf\'aa\'c3\'c5\'ca\'b1\'bc\'e4\'a3\'ba
\f2\fs24 \cf0 \
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 Text
\f2\fs24 \cf0 \

\f1\fs28 \cf2 Mon-Thurs: \cf6 8\cf2 :\cf6 00\cf2  - \cf6 18\cf2 :\cf6 00
\f2\fs24 \cf0 \

\f1\fs28 \cf2 Fri: \cf6 7\cf2 :\cf6 00\cf2  - \cf6 17\cf2 :\cf6 00
\f2\fs24 \cf0 \

\f1\fs28 \cf2 Sat-Sun: \cf6 10\cf2 :\cf6 00\cf2  - \cf6 15\cf2 :\cf6 00
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f4\fs28 \cf2 \'c4\'e3\'bb\'e1
\f1  enumerateLinesUsingBlock: 
\f4 \'b2\'a2\'cf\'f1\'d5\'e2\'d1\'f9\'d3\'c3\'d2\'bb\'b8\'f6
\f1  NSScanner 
\f4 \'c0\'b4\'bd\'e2\'ce\'f6\'a3\'ba
\f1\fs26 \cb21 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 let skippedCharacters = NSMutableCharacterSet()
\f2\fs24 \cf0 \

\f1\fs28 \cf2 skippedCharacters.formIntersectionWithCharacterSet(NSCharacterSet.punctuationCharacterSet())
\f2\fs24 \cf0 \

\f1\fs28 \cf2 skippedCharacters.formIntersectionWithCharacterSet(NSCharacterSet.whitespaceCharacterSet())
\f2\fs24 \cf0 \
\

\f1\fs28 \cf2 string.enumerateLines \{ (line, _) \cf3 in
\f2\fs24 \cf0 \

\f1\fs28 \cf2     let scanner = NSScanner(string: line)
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.charactersToBeSkipped = skippedCharacters
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     var startDay, endDay: NSString?
\f2\fs24 \cf0 \

\f1\fs28 \cf2     var startHour: Int = \cf6 0
\f2\fs24 \cf0 \

\f1\fs28 \cf2     var startMinute: Int = \cf6 0
\f2\fs24 \cf0 \

\f1\fs28 \cf2     var endHour: Int = \cf6 0
\f2\fs24 \cf0 \

\f1\fs28 \cf2     var endMinute: Int = \cf6 0
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.scanCharactersFromSet(NSCharacterSet.letterCharacterSet(), intoString: &startDay)
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.scanCharactersFromSet(NSCharacterSet.letterCharacterSet(), intoString: &endDay)
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.scanInteger(&startHour)
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.scanInteger(&startMinute)
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.scanInteger(&endHour)
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.scanInteger(&endMinute)
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\fs26 \cb21 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf4 \cb5 \CocoaLigature1 NSMutableCharacterSet\cf2  *skippedCharacters = [\cf4 NSMutableCharacterSet\cf2  \cf15 punctuationCharacterSet\cf2 ];
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 [skippedCharacters formUnionWithCharacterSet:[NSCharacterSet whitespaceCharacterSet]];
\f2\fs24 \cf0 \
\

\f1\fs28 \cf2 [hours enumerateLinesUsingBlock:^(\cf4 NSString\cf2  *line, \cf3 BOOL\cf2  *stop) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 NSScanner\cf2  *scanner = [\cf4 NSScanner\cf2  \cf15 scannerWithString\cf2 :line];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf15 setCharactersToBeSkipped\cf2 :\cf14 skippedCharacters\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 NSString\cf2  *startDay, *endDay;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 NSUInteger\cf2  startHour, startMinute, endHour, endMinute;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf15 scanCharactersFromSet\cf2 :[\cf4 NSCharacterSet\cf2  \cf15 letterCharacterSet\cf2 ] \cf15 intoString\cf2 :&startDay];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf15 scanCharactersFromSet\cf2 :[\cf4 NSCharacterSet\cf2  \cf15 letterCharacterSet\cf2 ] \cf15 intoString\cf2 :&endDay];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf15 scanInteger\cf2 :&startHour];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf15 scanInteger\cf2 :&startMinute];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf15 scanInteger\cf2 :&endHour];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf15 scanInteger\cf2 :&endMinute];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}];\
\pard\pardeftab720\sl320\sa200\partightenfactor0

\f4\fs26\fsmilli13333 \cf22 \cb37 \expnd0\expndtw0\kerning0
\'ce\'d2\'c3\'c7\'ca\'d7\'cf\'c8\'b4\'d3\'bf\'d5\'b8\'f1\'d7\'d6\'b7\'fb\'bc\'af\'ba\'cd\'b1\'ea\'b5\'e3\'b7\'fb\'ba\'c5\'d7\'d6\'b7\'fb\'bc\'af\'b5\'c4\'b2\'a2\'bc\'af\'b9\'b9\'d4\'ec\'c1\'cb\'d2\'bb\'b8\'f6
\f8  
\f16 NSMutableCharacterSet
\f4 \'a1\'a3\'b8\'e6\'cb\'df
\f8  
\f16 NSScanner
\f4 \'ba\'f6\'c2\'d4\'d5\'e2\'d0\'a9\'d7\'d6\'b7\'fb\'d2\'d4\'bc\'ab\'b4\'f3\'b5\'d8\'bc\'f5\'c9\'d9\'bd\'e2\'ce\'f6\'d5\'e2\'d0\'a9\'d7\'d6\'b7\'fb\'b5\'c4\'b1\'d8\'d2\'aa\'c2\'df\'bc\'ad\'a1\'a3
\f8 \
\pard\pardeftab720\sl300\sa200\partightenfactor0

\f16 \cf22 scanCharactersFromSet:
\f8  
\f4 \'b4\'ab\'c8\'eb\'d7\'d6\'c4\'b8\'d7\'d6\'b7\'fb\'bc\'af\'b5\'c3\'b5\'bd\'c3\'bf\'cf\'ee\'d6\'d0\'d2\'bb\'d0\'c7\'c6\'da\'c4\'da\'b5\'c4\'bf\'aa\'ca\'bc\'ba\'cd\'bd\'e1\'ca\'f8\'a3\'a8\'bf\'c9\'d1\'a1\'a3\'a9\'b5\'c4\'cc\'ec\'ca\'fd\'a1\'a3
\f16 scanInteger
\f8  
\f4 \'c0\'e0\'cb\'c6\'b5\'d8\'a3\'ac\'b5\'c3\'b5\'bd\'cf\'c2\'d2\'bb\'b8\'f6\'c1\'ac\'d0\'f8\'b5\'c4\'d5\'fb\'d0\'cd\'d6\'b5\'a1\'a3
\f8 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab692\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \cb5 \CocoaLigature1 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf17 //
\f4 \'c5\'d0\'b6\'cf\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'b7\'f1\'d6\'bb\'b0\'fc\'ba\'ac\'ca\'fd\'d7\'d6
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 +(\cf3 BOOL\cf2 )isTureCustomNum:(NSString *)customNum
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSCharacterSet *nameCharacters = [[NSCharacterSet characterSetWithCharactersInString:\cf7 @"0123456789"\cf2 ] invertedSet];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSRange userNameRange = [customNum rangeOfCharacterFromSet:nameCharacters];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (userNameRange.location != NSNotFound) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf17 //
\f4 \'b0\'fc\'ba\'ac\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 NO\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}\cf3 else\cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 YES\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\f2\fs24 \cf0 \
\
\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf17 //
\f4 \'c5\'d0\'b6\'cf\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'b7\'f1\'d6\'bb\'b0\'fc\'ba\'ac\'d7\'d6\'c4\'b8
\f1  
\f4 \'a1\'a2\'ca\'fd\'d7\'d6\'ba\'cd\'cf\'c2\'bb\'ae\'cf\'df
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 +(\cf3 BOOL\cf2 )isValidateString:(NSString *)str\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSCharacterSet *nameCharacters = [[NSCharacterSet characterSetWithCharactersInString:\cf7 @"_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"\cf2 ] invertedSet];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSRange userNameRange = [str rangeOfCharacterFromSet:nameCharacters];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (userNameRange.location != NSNotFound) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf17 //
\f4 \'b0\'fc\'ba\'ac\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 NO\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}\cf3 else\cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 YES\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\fs26 \cb21 \CocoaLigature0 \
\pard\pardeftab720\sl360\partightenfactor0

\f16\fs24 \cf31 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\sl320\partightenfactor0

\f4\b\fs26\fsmilli13333 \cf22 \cb37 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'b2\'bb\'d2\'aa\'d3\'c3
\f8  
\f17 NSCharacterSet
\f8  
\f4 \'c0\'b4\'b7\'d6\'b4\'ca\'a1\'a3
\f8\b0  
\f4\b \'d3\'c3
\f8  
\f17 CFStringTokenizer
\f8  
\f4 \'c0\'b4\'cc\'e6\'b4\'fa\'cb\'fc
\f1\b0\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\partightenfactor0

\f4\fs26\fsmilli13333 \cf22 \cb37 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'c8\'e7\'b9\'fb\'c4\'e3\'cf\'eb\'bd\'ab\'d7\'d6\'b7\'fb\'b4\'ae\'b7\'d6\'b3\'c9\'d3\'d0\'d2\'e2\'d2\'e5\'b5\'c4\'b5\'a5\'b4\'ca\'a3\'ac\'c4\'c7\'c3\'b4\'c7\'eb\'d3\'c3
\f8  
\f16 CFStringTokenizer
\f8  
\f4 \'a3\'a8\'bb\'f2\'d5\'df
\f16 enumerateSubstringsInRange:options:usingBlock:
\f4 \'a3\'a9\'b0\'c9
\f1\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
\pard\pardeftab720\sl760\partightenfactor0

\f4\b\fs48 \cf38 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 NSString\'b9\'fd\'c2\'cb\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\b0\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\sl380\qj\partightenfactor0

\fs32 \cf39 \cb20 \expnd0\expndtw0\kerning0
\CocoaLigature1 //\'a0
\f4 \'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb\'b5\'c4\'bc\'af\'ba\'cf\
\pard\pardeftab720\sl380\qj\partightenfactor0

\f1 \cf31 \'a0\cf40 NSCharacterSet\cf31 \'a0*set = [\cf40 NSCharacterSet\cf31 \'a0\cf41 characterSetWithCharactersInString\cf31 :\cf41 \
\cf31 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0\cf42 @"@
\f4 \'a3\'af\'a3\'ba\'a3\'bb\'a3\'a8\'a3\'a9
\f1 \'a5
\f4 \'a1\'b8\'a1\'b9\'a3\'a2\'a1\'a2
\f1 []\{\}#%-*+=_\\\\|~
\f4 \'a3\'bc\'a3\'be
\f1 $\'80^\'95'@#$%^&*()_+'\\""\cf31 ];\cf42 \
\pard\pardeftab720\sl380\qj\partightenfactor0
\cf39 //\'a0
\f4 \'b9\'fd\'c2\'cb\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb\
\pard\pardeftab720\sl380\qj\partightenfactor0

\f1 \cf40 NSString\cf43 \'a0*newString = [\cf40 NSString\cf43 \'a0stringByTrimmingCharactersInSet:\cf44 set\cf43 ];\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf7 \cb5 \CocoaLigature1 [\\\\s`!@#$%^&*()=,./;'\\\\~
\f4 \'a3\'a1\'a3\'a4
\f1 \'85\'85
\f4 \'a3\'a8\'a3\'a9
\f1 |
\f4 \'a1\'be\'a1\'bf
\f1 \{\}
\f4 \'a3\'bb
\f1 \'91
\f4 \'a3\'ba
\f1 \'93\'94
\f4 \'a3\'ac\'a1\'a3\'a1\'a2\'a3\'bf
\f1 ?]
\fs26 \cf2 \cb21 \CocoaLigature0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1  \cf4 NSString\cf2  *string = \cf7 @"';"\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf17 //\'a0
\f4 \'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb\'b5\'c4\'bc\'af\'ba\'cf
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 NSCharacterSet\cf2  *set = [\cf4 NSCharacterSet\cf2  \cf15 characterSetWithCharactersInString\cf2 :
\f2\fs24 \cf0 \

\f1\fs28 \cf2                            \cf7 @"!
\f4 \'a3\'a1
\f1 \'91\'85\'85,.
\f4 \'a3\'af\'a3\'ba\'a3\'bf
\f1 ?
\f4 \'a1\'a3\'a3\'ac
\f1 ;
\f4 \'a3\'bb
\f1 \'93\'94
\f4 \'a1\'be\'a1\'bf\'a3\'a8\'a3\'a9
\f1 \'a5
\f4 \'a1\'b8\'a1\'b9\'a3\'a2\'a1\'a2
\f1 []\{\}#%-*+=_\\\\|~
\f4 \'a3\'bc\'a3\'be
\f1 $\'80^\'95'@$%^&()'\\""\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf17 //\'a0
\f4 \'b9\'fd\'c2\'cb\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 NSString\cf2  *newString = [string \cf15 stringByTrimmingCharactersInSet\cf2 :set];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf15 NSLog\cf2 (\cf7 @"%@"\cf2 ,newString);
\fs26 \cb21 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab720\sl280\partightenfactor0

\f6\fs24 \cf31 \cb20 \expnd0\expndtw0\kerning0
\CocoaLigature1 [NSCharacterSet\cf24 \'a0characterSetWithCharactersInString\cf31 :\cf34 @";\'a5?![]\{\}#%^*\'a3\'80\'95$><~|/
\f4 \'a3\'bf\'a3\'a1
\f6 @[]\{\}
\f4 \'a3\'a8
\f6 #-%*+=
\f4 \'a3\'a9
\f6 \\\\|~(
\f4 \'a3\'bc\'a3\'be
\f6 $%^&*)+"\cf31 ];\'a0
\f1\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
\pard\pardeftab720\sl420\sa320\qj\partightenfactor0

\f9\fs28 \cf45 \cb20 \expnd0\expndtw0\kerning0
\CocoaLigature1 1.iOS 10.1 \uc0\u20043 \u21069 \u19968 \u30452 \u29992 \u36825 \u27573 \u20195 \u30721 \u26469 \u20570 \u29305 \u27530 \u23383 \u31526 \u21028 \u26029 \u65292 \u27491 \u24120 \u20351 \u29992 \u12290 \u26368 \u36817 \u29992 \u30340 \u26102 \u20505 \u21457 \u29616 \u26080 \u27861 \u36827 \u34892 \u21028 \u26029 \u20102 \u65292 \u19968 \u30452 \u26159  return NO\u12290 
\f4\fs32 \cf43 \
\pard\pardeftab720\sl260\qj\partightenfactor0

\f1\fs22 \cf43 + (\cf46 BOOL\cf43 )isNoTeShuZiFu:(\cf40 NSString\cf43 \'a0*)string \{\
\'a0\'a0 \'a0\
\cf31 \'a0 \'a0\'a0\cf40 NSString\cf31 \'a0*regex =\'a0\cf42 @"[^a-zA-Z0-9\\u4E00-\\u9FA5,.?:;()!\{\}<>#*-+=
\f4 \'a3\'ac\'a1\'a3\'a1\'a2\'a3\'bf\'a3\'ba\'a3\'bb\'a3\'a8\'a3\'a9\'a3\'a1
\f1 \{\}+=]
\f18 \uc0\u10123 \u10124 \u10125 \u10126 \u10127 \u10128 \u10129 \u10130 
\f1 "\cf31 ;\cf42 \
\pard\pardeftab720\sl260\qj\partightenfactor0
\cf39 \
\pard\pardeftab720\sl260\qj\partightenfactor0
\cf43 \'a0 \'a0\'a0\cf40 NSPredicate\cf43 \'a0*pred = [\cf40 NSPredicate\cf43 \'a0\cf47 predicateWithFormat\cf43 :\cf42 @"SELF MATCHES %@"\cf43 , regex];\
\'a0 \'a0\'a0\cf46 return\cf43 \'a0[pred\'a0\cf47 evaluateWithObject\cf43 : string];\
\}\cb1 \
\pard\pardeftab720\sl440\partightenfactor0

\f4\fs32 \cf19 \
\pard\pardeftab720\sl260\qj\partightenfactor0

\f1\fs22 \cf39 \cb20 \
\pard\pardeftab720\sl520\qj\partightenfactor0

\f5\fs28 \cf48 \
\pard\pardeftab720\sl420\qj\partightenfactor0

\b \cf45 2
\f4 \'a1\'a2\'bf\'c9\'bc\'ec\'b2\'e2\'b5\'bd\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'c8\'ce\'d2\'e2\'ce\'bb\'d6\'c3\'b5\'c4\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb\'a3\'a8\'b7\'bd\'b7\'a8
\f5 1
\f4 \'ca\'a7\'d0\'a7\'ba\'f3\'d5\'d2\'b5\'bd\'b5\'c4\'c1\'ed\'d2\'bb\'b8\'f6\'bf\'c9\'b4\'fa\'cc\'e6\'b7\'bd\'b7\'a8\'a3\'a9
\f5\b0 \cf48 \
\pard\pardeftab720\sl520\qj\partightenfactor0
\cf48 \
\pard\pardeftab720\sl260\qj\partightenfactor0

\f1\fs22 \cf47 \
\pard\pardeftab720\sl260\qj\partightenfactor0
\cf43 + (\cf46 BOOL\cf43 )isNoTeShuZiFu:(\cf40 NSString\cf43 \'a0*)string \{\
\pard\pardeftab720\sl260\qj\partightenfactor0
\cf43 \cb1 \uc0\u8232 \cb20 \
\pard\pardeftab720\sl260\qj\partightenfactor0
\cf31 \'a0 \'a0\'a0\cf40 NSString\cf31 \'a0*regex =\'a0\cf42 @"[^a-zA-Z0-9\\u4E00-\\u9FA5,.?:;()!\{\}<>#*-+=
\f4 \'a3\'ac\'a1\'a3\'a1\'a2\'a3\'bf\'a3\'ba\'a3\'bb\'a3\'a8\'a3\'a9\'a3\'a1
\f1 \{\}+=]
\f18 \uc0\u10123 \u10124 \u10125 \u10126 \u10127 \u10128 \u10129 \u10130 
\f1 "\cf31 ;\cf42 \
\cf31 \'a0 \'a0\'a0\cf40 NSRange\cf31 \'a0urgentRange = [string\'a0\cf47 rangeOfCharacterFromSet\cf31 : [\cf40 NSCharacterSet\cf31 \'a0\cf47 characterSetWithCharactersInString\cf31 : regex]];\cf47 \
\cf43 \'a0 \'a0\'a0\cf46 if\cf43 \'a0(urgentRange.\cf40 location\cf43 \'a0==\'a0\cf40 NSNotFound\cf43 )\
\'a0 \'a0 \{\
\'a0 \'a0 \'a0 \'a0\'a0\cf46 return\cf43 \'a0\cf46 NO\cf43 ;\
\'a0 \'a0 \}\
\cf31 \'a0 \'a0\'a0\cf46 return\cf31 \'a0\cf46 YES\cf31 ;\cf46 \
\cf43 \}\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://www.cocoachina.com/ios/20160111/14926.html"}}{\fldrslt 
\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 http://www.cocoachina.com/ios/20160111/14926.html}}
\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 - (\cf3 void\cf2 )createTableView\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf14 dataArray\cf2  = [\cf4 NSArray\cf2  \cf15 array\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 NSError\cf2 *error;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 NSString\cf2  *filePath = [[\cf4 NSBundle\cf2  \cf15 mainBundle\cf2 ]\cf15 pathForResource\cf2 :\cf7 @"TVList"\cf15 ofType\cf2 :\cf7 @"json"\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 NSData\cf2  *jdata = [[\cf4 NSData\cf2  \cf15 alloc\cf2 ]\cf15 initWithContentsOfFile\cf2 :filePath];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 id\cf2  JsonObject=[\cf4 NSJSONSerialization\cf2  \cf15 JSONObjectWithData\cf2 :jdata
\f2\fs24 \cf0 \

\f1\fs28 \cf2                                                   \cf15 options\cf2 :\cf15 NSJSONReadingAllowFragments
\f2\fs24 \cf0 \

\f1\fs28 \cf2                                                     \cf15 error\cf2 :&error];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (JsonObject[\cf7 @"success"\cf2 ] && [JsonObject[\cf7 @"success"\cf2 ] \cf15 boolValue\cf2 ] &&
\f2\fs24 \cf0 \

\f1\fs28 \cf2         JsonObject[\cf7 @"data"\cf2 ] && JsonObject[\cf7 @"data"\cf2 ] != [\cf4 NSNull\cf2  \cf15 null\cf2 ]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 if\cf2  (!\cf14 tvlistArray\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf14 tvlistArray\cf2  = [\cf4 NSMutableArray\cf2  \cf15 array\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 else\cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             [\cf14 tvlistArray\cf2  \cf15 removeAllObjects\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf4 NSDictionary\cf2  *dic = JsonObject[\cf7 @"data"\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 if\cf2  (dic[\cf7 @"programList"\cf2 ]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf4 NSArray\cf2  *a = dic[\cf7 @"programList"\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 if\cf2  (a.\cf4 count\cf2  > \cf6 0\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \cf3 for\cf2  (\cf4 NSDictionary\cf2  *tempDic \cf3 in\cf2  a) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                     \cf3 if\cf2  (tempDic[\cf7 @"tvProgramList"\cf2 ]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                         \cf3 for\cf2  (\cf4 NSDictionary\cf2  *tempDic1 \cf3 in\cf2  tempDic[\cf7 @"tvProgramList"\cf2 ]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                             \cf14 TVlistModel\cf2  *model = [[\cf14 TVlistModel\cf2  \cf15 alloc\cf2 ] \cf15 init\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2                             [model \cf15 setValuesForKeysWithDictionary\cf2 :tempDic1];
\f2\fs24 \cf0 \

\f1\fs28 \cf2                             [\cf14 tvlistArray\cf2  \cf15 addObject\cf2 :model];
\f2\fs24 \cf0 \

\f1\fs28 \cf2                         \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2                     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 else\cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \cf15 NSLog\cf2 (\cf7 @"
\f4 \'ce\'de\'c4\'da\'c8\'dd
\f1 "\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf14 dataArray\cf2  = \cf14 tvlistArray\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf14 _programmeTableView\cf2 .\cf4 delegate\cf2  = \cf3 self\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf14 _programmeTableView\cf2 .\cf4 dataSource\cf2  = \cf3 self\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\f2\fs24 \cf0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb21 \CocoaLigature0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab692\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \cb5 \CocoaLigature1 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf17 //-(NSMutableArray *)sicuanLanguageEmojiModels\{
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //    static NSMutableArray *array;
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //    static dispatch_once_t onceToken;
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //    dispatch_once(&onceToken, ^\{
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //        array = [NSMutableArray array];
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //        [self.sicuanLanguageEmoijTitles enumerateObjectsUsingBlock:^(NSString *title, NSUInteger idx, BOOL * _Nonnull stop) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //            WWCustomEmojiModel *model = [WWCustomEmojiModel new];
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //            model.title = title;
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //            if (idx <9) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //                model.identifier = [NSString stringWithFormat:@"localism_emoji_00%ld",idx + 1];
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //            \}else\{
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //                model.identifier = [NSString stringWithFormat:@"localism_emoji_0%ld",idx + 1];
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //            \}
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //            [array addObject:model];
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //        \}];
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //    \});
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //    return array;
\f2\fs24 \cf0 \

\f1\fs28 \cf17 //\}
\fs26 \cf2 \cb21 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf17 \cb5 \CocoaLigature1 //
\f4 \'c8\'ab\'b2\'bf\'ca\'a1\'ca\'d0\'c7\'f8\'ca\'fd\'be\'dd
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2     [\cf3 self\cf2 .\cf14 dataArray\cf2  \cf15 addObjectsFromArray\cf2 :[\cf4 NSArray\cf2  \cf15 arrayWithContentsOfFile\cf2 :[[\cf4 NSBundle\cf2  \cf15 mainBundle\cf2 ] \cf15 pathForResource\cf2 :\cf7 @"Address"\cf2  \cf15 ofType\cf2 :\cf7 @"plist"\cf2 ]]];
\fs26 \cb21 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
\pard\pardeftab720\sl580\partightenfactor0

\f4\fs48 \cf49 \cb20 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'b4\'e6\'ca\'fd\'be\'dd
\f13\fs32 \cf19 \
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf19 \'a0 \'a0
\f13 \'a0
\f10 \cf39 \'ca\'fd\'be\'dd\'b4\'e6\'b4\'a2\'ca\'c7\'b1\'a3\'b4\'e6\'d4\'da\'ca\'d6\'bb\'fa\'c0\'ef\'c3\'e6\'b5\'c4
\f13 \cf19 \

\f1 \'a0 \'a0\cf39 plist
\f10 \'ce\'c4\'bc\'fe\'b4\'e6\'b4\'a2\'d2\'bb\'b0\'e3\'b6\'bc\'ca\'c7\'b4\'e6\'c8\'a1\'d7\'d6\'b5\'e4\'ba\'cd\'ca\'fd\'d7\'e9
\f1 ,
\f10 \'d6\'b1\'bd\'d3\'d0\'b4\'b3\'c9
\f1 plist
\f10 \'ce\'c4\'bc\'fe
\f1 ,
\f10 \'b0\'d1\'cb\'fc\'b4\'e6\'b5\'bd\'d3\'a6\'d3\'c3\'c9\'b3\'ba\'d0\'b5\'b1\'d6\'d0
\f1 .
\f13 \cf19 \

\f1 \'a0 \'a0
\f13 \'a0
\f10 \cf39 \'d6\'bb\'d3\'d0\'d4\'da
\f1 ios
\f10 \'b5\'b1\'d6\'d0\'b2\'c5\'d3\'d0
\f1 plist
\f10 \'b4\'e6\'b4\'a2
\f1 ,
\f10 \'cb\'fc\'ca\'c7
\f1 ios
\f10 \'cc\'d8\'d3\'d0\'b5\'c4\'b4\'e6\'b4\'a2\'b7\'bd\'ca\'bd
\f1 .
\f13 \cf19 \

\f1 \'a0 \'a0
\f13 \'a0
\f10 \cf39 \'bb\'f1\'c8\'a1\'c9\'b3\'ba\'d0\'b8\'f9\'b8\'f9\'c2\'b7\'be\'b6
\f1 ,
\f10 \'c3\'bf\'d2\'bb\'b8\'f6\'d3\'a6\'d3\'c3\'d4\'da\'ca\'d6\'bb\'fa\'b5\'b1\'d6\'d0\'b6\'bc\'d3\'d0\'d2\'bb\'b8\'f6\'ce\'c4\'bc\'fe\'bc\'d0
\f1 ,
\f10 \'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'be\'cd\'ca\'c7\'bb\'f1\'c8\'a1\'b5\'b1\'c7\'b0\'d3\'a6\'d3\'c3\'d4\'da\'ca\'d6\'bb\'fa\'c0\'ef\'b0\'b2\'d7\'b0\'b5\'c4\'ce\'c4\'bc\'fe
\f1 .
\f13 \cf19 \

\f1 \'a0 \'a0\cf39 NSString *homeDir = NSHomeDirectory();
\f13 \cf19 \

\f1 \'a0\'a0\'a0\cf40 NSArray\cf19 *array =\'a0\cf41 NSSearchPathForDirectoriesInDomains\cf19 (\cf41 NSCachesDirectory\cf19 ,\cf41 NSUserDomainMask\cf19 ,\cf50 YES\cf19 );
\f13 \

\f1 \'a0\'a0\'a0\cf40 NSString\cf19 *cachePath = array[\cf51 0\cf19 ];
\f13 \

\f1 \'a0\'a0\'a0\cf40 NSString\cf19 *filePathName = [cachePath\cf41 stringByAppendingPathComponent\cf19 :\cf42 @"xiaomi.plist"\cf19 ];
\f13 \

\f1 \'a0\'a0\'a0\cf40 NSDictionary\cf19 *dict =\cf51 @\{\cf42 @"age"\cf19 :\cf51 @18\cf19 ,\cf42 @"name"\cf19 :\cf42 @"xiaomi"\cf51 \}\cf19 ;
\f13 \

\f1 \'a0 \'a0[dict\cf41 writeToFile\cf19 :filePathName\cf41 atomically\cf19 :\cf50 YES\cf19 ];\cb1 \
\
\cb20 \'a0 \'a0
\f13 \'a0
\f10 \cf39 \'d3\'c3\'ca\'fd\'d7\'e9\'d0\'b4
\f1 ,plist
\f10 \'ce\'c4\'bc\'fe\'b5\'b1\'d6\'d0\'b1\'a3\'b4\'e6\'b5\'c4\'c0\'e0\'d0\'cd\'ca\'c7\'ca\'fd\'d7\'e9
\f1 .
\f13 \cf19 \

\f1 \'a0\'a0\'a0\cf40 NSArray\cf19 *dataArray =\cf51 @[@56\cf19 ,\cf42 @"xiaoli"\cf51 ]\cf19 ;
\f13 \

\f1 \'a0 \'a0
\f13 \'a0
\f10 \cf39 \'bb\'f1\'c8\'a1\'c9\'b3\'ba\'d0\'c2\'b7\'be\'b6
\f13 \cf19 \

\f1 \'a0 \'a0\cf39 ToFile:
\f10 \'d2\'aa\'d0\'b4\'c8\'eb\'b5\'c4\'c9\'b3\'ba\'d0\'c2\'b7\'be\'b6
\f13 \cf19 \

\f1 \'a0 \'a0[dataArray\cf41 writeToFile\cf19 :filePathName\cf41 atomically\cf19 :\cf50 YES\cf19 ];\cb1 \
\cb20 \'a0\'a0\'a0\cb1 \
\cb20 \'a0\'a0\'a0\cb1 \
\pard\pardeftab720\sl440\partightenfactor0

\f13\fs36 \cf49 \cb20 \'a0 \'a0 \'a0\'a0
\f4\fs48 \'b6\'c1\'c8\'a1\'ca\'fd\'be\'dd
\f13\fs32 \cf19 \
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf19 \'a0 \'a0
\f10 \cf39 \'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'bb\'f1\'c8\'a1\'b3\'f6\'b5\'c4\'bd\'e1\'b9\'fb\'ca\'c7\'d2\'bb\'b8\'f6\'ca\'fd\'d7\'e9
\f1 .
\f10 \'d2\'f2\'ce\'aa\'d3\'d0\'bf\'c9\'d2\'d4\'cb\'d1\'cb\'f7\'b5\'bd\'b6\'e0\'b8\'f6\'c2\'b7\'be\'b6
\f1 .
\f13 \cf19 \

\f1 \'a0\'a0\'a0\cf40 NSArray\cf19 *array =\'a0\cf41 NSSearchPathForDirectoriesInDomains\cf19 (\cf41 NSCachesDirectory\cf19 ,\cf41 NSUserDomainMask\cf19 ,\cf50 YES\cf19 );
\f13 \

\f1 \'a0\'a0\'a0\cf40 NSString\cf19 *cachePath = array[\cf51 0\cf19 ];
\f13 \

\f1 \'a0\'a0\'a0\cf40 NSString\cf19 *filePathName = [cachePath\cf41 stringByAppendingPathComponent\cf19 :\cf42 @"xiaomi.plist"\cf19 ];
\f13 \

\f1 \'a0\'a0\'a0\cf40 NSDictionary\cf19 *dict = [\cf40 NSDictionary\cf41 dictionaryWithContentsOfFile\cf19 :filePathName];
\f13 \

\f1 \'a0\'a0\'a0
\f13 \

\f1 \'a0 \'a0
\f13 \'a0
\f10 \cf39 \'c8\'e7\'b9\'fb\'b1\'a3\'b4\'e6\'b5\'c4\'ca\'c7\'d2\'bb\'b8\'f6\'ca\'fd\'d7\'e9
\f1 .
\f10 \'c4\'c7\'be\'cd\'cd\'a8\'b9\'fd\'ca\'fd\'d7\'e9\'b4\'d3\'ce\'c4\'bc\'fe\'b5\'b1\'d6\'d0\'bc\'d3\'d4\'d8
\f1 .
\f13 \cf19 \

\f1 \'a0\'a0\'a0\cf40 NSArray\cf19 *dataArray = [\cf40 NSArray\cf41 arrayWithContentsOfFile\cf19 :filePathName];
\f13 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb21 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\
}