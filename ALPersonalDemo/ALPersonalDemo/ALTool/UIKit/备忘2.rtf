{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 Helvetica;
\f3\fnil\fcharset134 PingFangSC-Regular;\f4\fswiss\fcharset0 ArialMT;\f5\fnil\fcharset0 Consolas;
\f6\fnil\fcharset0 Consolas-Bold;\f7\fnil\fcharset0 Verdana;\f8\fnil\fcharset0 SimSun;
\f9\fnil\fcharset134 STSongti-SC-Regular;\f10\froman\fcharset0 TimesNewRomanPSMT;\f11\fnil\fcharset134 .PingFangSC-Medium;
\f12\fnil\fcharset0 HelveticaNeue;\f13\fmodern\fcharset0 Courier;\f14\froman\fcharset0 Times-Roman;
\f15\fmodern\fcharset0 CourierNewPSMT;\f16\fmodern\fcharset0 CourierNewPS-BoldMT;\f17\fnil\fcharset77 ZapfDingbatsITC;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red170\green13\blue145;\red63\green110\blue116;
\red255\green255\blue255;\red46\green13\blue110;\red92\green38\blue153;\red196\green26\blue22;\red28\green0\blue207;
\red100\green56\blue32;\red0\green116\blue0;\red38\green71\blue75;\red53\green53\blue53;\red255\green255\blue255;
\red255\green255\blue255;\red38\green38\blue38;\red74\green74\blue74;\red210\green0\blue5;\red10\green82\blue135;
\red7\green68\blue184;\red27\green31\blue34;\red21\green23\blue26;\red58\green58\blue58;\red35\green35\blue35;
\red0\green0\blue0;\red15\green112\blue1;\red14\green110\blue109;\red0\green0\blue255;\red27\green29\blue31;
\red235\green236\blue237;\red204\green201\blue205;\red33\green36\blue38;\red15\green116\blue1;\red92\green38\blue153;
\red46\green13\blue110;\red196\green26\blue22;\red62\green62\blue62;\red63\green110\blue116;\red229\green0\blue28;
\red169\green14\blue145;\red47\green14\blue110;\red57\green57\blue57;\red17\green128\blue2;\red255\green255\blue255;
\red53\green53\blue53;\red15\green116\blue1;\red92\green38\blue153;\red46\green13\blue110;\red170\green12\blue145;
\red28\green2\blue207;\red196\green26\blue22;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c24700\c43100\c45600;
\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c11000\c0\c81000;
\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c0\c45600\c0;\csgenericrgb\c14900\c27800\c29400;\cssrgb\c27059\c27059\c27059;\cssrgb\c100000\c100000\c100000;
\csgray\c100000;\cssrgb\c20000\c20000\c20000;\cssrgb\c36078\c36078\c36078;\cssrgb\c86667\c0\c0;\cssrgb\c0\c40000\c60000;
\cssrgb\c0\c36078\c77255;\cssrgb\c14118\c16078\c18039;\cssrgb\c10588\c12157\c13725\c29804;\cssrgb\c29412\c29412\c29412;\cssrgb\c18431\c18431\c18431;
\cssrgb\c0\c0\c0;\cssrgb\c0\c50196\c0;\cssrgb\c0\c50196\c50196;\cssrgb\c0\c0\c100000;\cssrgb\c14118\c15294\c16078;
\cssrgb\c93725\c94118\c94510;\cssrgb\c83922\c82745\c83922;\cssrgb\c17255\c18824\c20000;\cssrgb\c0\c51765\c0;\cssrgb\c43922\c23922\c66667;
\cssrgb\c23922\c11373\c50588;\cssrgb\c81961\c18431\c10588;\cssrgb\c30980\c30980\c30980;\cssrgb\c30980\c50588\c52941;\cssrgb\c92941\c10980\c14118;
\cssrgb\c72941\c17647\c63529;\cssrgb\c24314\c11765\c50588;\cssrgb\c28627\c28627\c28627;\cssrgb\c0\c56078\c0;\cssrgb\c100000\c100000\c100000;
\cssrgb\c27059\c27059\c27059;\cssrgb\c0\c51765\c0;\cssrgb\c43922\c23922\c66667;\cssrgb\c23922\c11373\c50588;\cssrgb\c73333\c17255\c63529;
\cssrgb\c15294\c16471\c84706;\cssrgb\c81961\c18431\c10588;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab692
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 \CocoaLigature0 <MMEmotionCentre: 0x1c1c64580> sel:setAppkey:platformId:\
k51hidwqkextb,\
464878039ce8441a8a0a9f88d8efed4b\
\
select * from t_anchor where id = 9\
select * from t_anchor_record where user_id = 10020 and id > 945\
update t_anchor set birthday = NULL where id = 9\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\b0\fs26 \cf3    \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf3 layer.cornerRadius\
layer.masksToBounds\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf4 \cb5 \CocoaLigature1 WWChatGroupListViewController\cf2 \cb5  *chatGroupListVC = [[\cf4 \cb5 WWChatGroupListViewController\cf2 \cb5  \cf6 \cb5 alloc\cf2 \cb5 ] \cf6 \cb5 init\cf2 \cb5 ];
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2     chatGroupListVC.\cf4 \cb5 groupList\cf2 \cb5  = \cf3 \cb5 self\cf2 \cb5 .\cf4 \cb5 subGroupList\cf2 \cb5 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     chatGroupListVC.\cf4 \cb5 arrayGroups\cf2 \cb5  = [\cf3 \cb5 self\cf2 \cb5 .\cf4 \cb5 arrayGroups\cf2 \cb5  \cf6 \cb5 mutableCopy\cf2 \cb5 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 \cb5 CATransition\cf2 \cb5  *transition = [\cf7 \cb5 CATransition\cf2 \cb5  \cf6 \cb5 animation\cf2 \cb5 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     transition.\cf7 \cb5 type\cf2 \cb5 =\cf7 \cb5 kCATransitionPush\cf2 \cb5 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     transition.\cf7 \cb5 subtype\cf2 \cb5 =\cf7 \cb5 kCATransitionFromTop\cf2 \cb5 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [\cf3 \cb5 self\cf2 \cb5 .\cf7 \cb5 navigationController\cf2 \cb5 .\cf7 \cb5 view\cf2 \cb5 .\cf7 \cb5 layer\cf2 \cb5  \cf6 \cb5 addAnimation\cf2 \cb5 :transition \cf6 \cb5 forKey\cf2 \cb5 :\cf7 \cb5 kCATransition\cf2 \cb5 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [\cf3 \cb5 self\cf2 \cb5 .\cf7 \cb5 navigationController\cf2 \cb5  \cf6 \cb5 pushViewController\cf2 \cb5 :chatGroupListVC \cf6 \cb5 animated\cf2 \cb5 :\cf3 \cb5 NO\cf2 \cb5 ];\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs26 \cf3 \cb1 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2     
\fs28 \cf7 \cb5 \CocoaLigature1 CABasicAnimation\cf2  *rotationAnimation = [\cf7 CABasicAnimation\cf2  \cf6 animationWithKeyPath\cf2 :\cf8 @"transform.rotation.z"\cf2 ];
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \cb5         rotationAnimation.\cf7 \cb5 fromValue\cf2 \cb5  = \cf9 @0\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         rotationAnimation.\cf7 \cb5 toValue\cf2 \cb5  = [\cf7 \cb5 NSNumber\cf2 \cb5  \cf6 \cb5 numberWithFloat\cf2 \cb5 : \cf10 \cb5 M_PI\cf2 \cb5  * \cf9 2.0\cf2  ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         rotationAnimation.\cf7 \cb5 duration\cf2 \cb5  = \cf9 4\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         rotationAnimation.\cf7 \cb5 repeatCount\cf2 \cb5  = \cf10 \cb5 HUGE_VALF\cf2 \cb5 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         rotationAnimation.\cf7 \cb5 fillMode\cf2 \cb5  = \cf7 \cb5 kCAFillModeBoth\cf2 \cb5 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         [cella.\cf4 \cb5 view2\cf2 \cb5 .\cf4 \cb5 animation\cf2 \cb5 .\cf7 \cb5 layer\cf2 \cb5  \cf6 \cb5 addAnimation\cf2 \cb5 :rotationAnimation \cf6 \cb5 forKey\cf2 \cb5 :\cf3 \cb5 nil\cf2 \cb5 ];\
\
(CAGradientLayer *)\cf2 \cb5 \ulth \ulc2 s\ulnone ideGradLayer.colors = \cf9 @[\cf2 (\cf3 __bridge\cf2  \cf3 id\cf2 )color.CGColor,(\cf3 __bridge\cf2  \cf3 id\cf2 )[color colorWithAlphaComponent:\cf9 0.2\cf2 ].CGColor\cf9 ]\cf2 ;\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs26 \cf2 \cb1 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
    \cf7 UIImageView\cf2  *imageView = [[\cf7 UIImageView\cf2  \cf6 alloc\cf2 ]\cf6 initWithFrame\cf2 :\cf3 self\cf2 .\cf4 chatSessionInputBarControl\cf2 .\cf7 bounds\cf2 ];\
    \cf11 //imageView.image = [UIImage imageWithColor:[UIColor colorWithHexString:@"ffffff"]];\cf2 \
    imageView.\cf7 backgroundColor\cf2  = [\cf7 UIColor\cf2  \cf6 whiteColor\cf2 ];\
    \cf11 //
\f3 \'bf\'aa\'ca\'bc\'b6\'d4
\f1 imageView
\f3 \'bd\'f8\'d0\'d0\'bb\'ad\'cd\'bc
\f1 \cf2 \
    \cf6 UIGraphicsBeginImageContextWithOptions\cf2 (imageView.\cf7 bounds\cf2 .\cf7 size\cf2 , \cf3 YES\cf2 , [\cf7 UIScreen\cf2  \cf6 mainScreen\cf2 ].\cf7 scale\cf2 );\
    \cf11 //
\f3 \'ca\'b9\'d3\'c3\'b1\'b4\'c8\'fb\'b6\'fb\'c7\'fa\'cf\'df\'bb\'ad\'b3\'f6\'d2\'bb\'b8\'f6\'d4\'b2\'d0\'ce\'cd\'bc
\f1 \cf2 \
    \cf7 UIBezierPath\cf2  *bezierPath = [\cf7 UIBezierPath\cf2  \cf6 bezierPathWithRoundedRect\cf2 :\cf3 self\cf2 .\cf4 chatSessionInputBarControl\cf2 .\cf7 bounds\cf2  \cf6 byRoundingCorners\cf2 :(\cf6 UIRectCornerTopLeft\cf2  | \cf6 UIRectCornerTopRight\cf2 ) \cf6 cornerRadii\cf2 :\cf6 CGSizeMake\cf2 (\cf9 12\cf2 , \cf9 12\cf2 )];\
    [bezierPath \cf6 addClip\cf2 ];\
    [bezierPath \cf6 setLineWidth\cf2 :\cf9 1\cf2 ];\
    [[\cf7 UIColor\cf2  \cf6 redColor\cf2 ] \cf6 setStroke\cf2 ];\
    [bezierPath \cf6 stroke\cf2 ];\
    [imageView \cf6 drawRect\cf2 :imageView.\cf7 bounds\cf2 ];\
    imageView.\cf7 image\cf2  = \cf6 UIGraphicsGetImageFromCurrentImageContext\cf2 ();\
    \cf11 //
\f3 \'bd\'e1\'ca\'f8\'bb\'ad\'cd\'bc
\f1 \cf2 \
    \cf6 UIGraphicsEndImageContext\cf2 ();\
    \cf3 self\cf2 .\cf4 layerCornerBgView\cf2  = imageView;\cf3 \
\
//
\f3 \'c3\'b6\'be\'d9\'ca\'fd\'d7\'e9
\f1 \
\cf4 WBadgeAnimType\cf2  animations[] = \{\cf12 WBadgeAnimTypeShake\cf2 , \cf12 WBadgeAnimTypeBounce\cf2 , \cf12 WBadgeAnimTypeBreathe\cf2 , \cf12 WBadgeAnimTypeScale\cf2 \};\cf3 \
\

\f3 \'d7\'a5\'b0\'fc\'a3\'ba
\f1 \
\pard\pardeftab720\partightenfactor0

\f3\fs36 \cf13 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'d7\'a5iphone\'ca\'fd\'be\'dd
\fs32 \cb15 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb14 \'cf\'eb\'d7\'a5iphone\'b5\'c4\'ca\'fd\'be\'dd\'a3\'ac\'ca\'d7\'cf\'c8\'d0\'e8\'d2\'aa\'c8\'c3iphone\'ca\'fd\'be\'dd\'cd\'a8\'b9\'fdmac\'b2\'c5\'d0\'d0\'a1\'a3\'bf\'b4\'b5\'bd\'cd\'f8\'c9\'cf\'ba\'dc\'b6\'e0\'c9\'e8\'b4\'fa\'c0\'ed\'ca\'b2\'c3\'b4\'b5\'c4\'b7\'bd\'b7\'a8\'a3\'ac\'b1\'c8\'bd\'cf\'b8\'b4\'d4\'d3\'a3\'ac\'d3\'d0\'b5\'c4\'bb\'b9\'d2\'aa\'d4\'bd\'d3\'fc\'a1\'a3\'c6\'e4\'ca\'b5\'c3\'bb\'b1\'d8\'d2\'aa\'a1\'a3\'d6\'bb\'d2\'aa\'c1\'b4\'c9\'cf\'ca\'fd\'be\'dd\'cf\'df\'a3\'ac\'c8\'bb\'ba\'f3\'d4\'damac\'b5\'c4\'d6\'d5\'b6\'cb\'d6\'b4\'d0\'d0\'a3\'ba\cb15 \
\cb14 	
\b rvictl -s iphone\'c9\'e8\'b1\'b8id
\b0 \cb15 \
\cb14 \'d5\'e2\'ca\'b1\'a3\'ac\'cb\'f9\'d3\'d0iphone\'cd\'f8\'c2\'e7\'c1\'f7\'c1\'bf\'b6\'bc\'bb\'e1\'be\'ad\'b9\'fdiphone\'cb\'f9\'c1\'b4\'bd\'d3\'b5\'c4mac\'a3\'ac\'b2\'a2\'c7\'d2iphone\'ca\'fd\'be\'dd\'bb\'b9\'ca\'c7\'d7\'df\'d7\'d4\'bc\'ba\'b5\'c4\'cd\'f8\'c2\'e7\'a3\'ac\'b1\'c8\'c8\'e7iphone\'c1\'b4\'bd\'d3\'d4\'da3g\'cd\'f8\'c2\'e7\'a3\'ac\'ca\'fd\'be\'dd\'bb\'b9\'ca\'c7\'bb\'e1\'cd\'a8\'b9\'fd3G\'ca\'d5\'b7\'a2\'a3\'ac\'b6\'f8\'b2\'bb\'ca\'c7\'cd\'a8\'b9\'fdmac\'b5\'c4\'cd\'f8\'c2\'e7\'a1\'a3\'b6\'cf\'bf\'aa\'c1\'ac\'bd\'d3\'a3\'ba\cb15 \
\cb14 	
\b rvictl -x iphone\'c9\'e8\'b1\'b8id
\b0 \cb15 \
\cb14 \'c9\'e8\'b1\'b8\'c1\'ac\'bd\'d3\'ba\'f3\'a3\'acmac\'bb\'e1\'b3\'f6\'cf\'d6\'d2\'bb\'b8\'f6\'b6\'d4\'d3\'a6\'b5\'c4\'d0\'e9\'c4\'e2\'cd\'f8\'c2\'e7\'bd\'d3\'bf\'da\'a3\'ac\'c3\'fb\'d7\'d6\'ca\'c7rvi0\'a3\'a8\'c8\'e7\'b9\'fb\'d3\'d0\'b6\'e0\'b8\'f6iphone\'d4\'f2\'c0\'db\'bc\'d3\'a3\'acrvi1\'a3\'acrvi2\'a1\'ad\'a3\'a9\
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf3 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\
\cf2  \cf3 if\cf2  (object == \cf3 self\cf2 .\cf4 contentWebview\cf2 .\cf7 scrollView\cf2  && [keyPath \cf6 isEqualToString\cf2 :\cf8 @"contentOffset"\cf2 ])\{\
        \cf3 if\cf2  ([\cf3 self\cf2 .\cf4 contentWebview\cf2  \cf6 respondsToSelector\cf2 :\cf3 @selector\cf2 (_updateVisibleContentRects)]) \{\
            ((\cf3 void\cf2 (*)(\cf3 id\cf2 ,\cf3 SEL\cf2 ,\cf3 BOOL\cf2 ))\cf6 objc_msgSend\cf2 )(\cf3 self\cf2 .\cf4 contentWebview\cf2 ,\cf3 @selector\cf2 (_updateVisibleContentRects),\cf3 NO\cf2 );\
        \}\
    \}\
\
\cf3 static\cf2  \cf3 void\cf2  *WWReportViewControllerObserverContext = &\cf4 WWReportViewControllerObserverContext\cf2 ;\
[\cf3 self\cf2  \cf6 addObserver\cf2 :\cf3 self\cf2  \cf6 forKeyPath\cf2 :\cf8 @"isCommitBtnEnabled"\cf2  \cf6 options\cf2 :\cf6 NSKeyValueObservingOptionNew\cf2  \cf6 context\cf2 :\cf4 WWReportViewControllerObserverContext\cf2 ];\
- (\cf3 void\cf2 )observeValueForKeyPath:(\cf7 NSString\cf2  *)keyPath ofObject:(\cf3 id\cf2 )object change:(\cf7 NSDictionary\cf2  *)change context:(\cf3 void\cf2  *)context \{\
    \cf3 if\cf2  ( context == \cf4 WWReportViewControllerObserverContext\cf2 ) \{\
        \cf3 BOOL\cf2  isEnalbed = [[change \cf6 objectForKey\cf2 :\cf7 NSKeyValueChangeNewKey\cf2 ] \cf6 boolValue\cf2 ];\
        \cf3 if\cf2  (isEnalbed) \{\
            \cf3 self\cf2 .\cf4 commit\cf2 .\cf7 enabled\cf2  = \cf3 YES\cf2 ;\
            \cf3 self\cf2 .\cf4 textView\cf2 .\cf7 layer\cf2 .\cf7 borderColor\cf2  = [\cf7 UIColor\cf2  \cf12 colorWithHexString\cf2 :\cf8 @"7269ff"\cf2 ].\cf7 CGColor\cf2 ;\
        \}\cf3 else\cf2 \{\
            \cf3 self\cf2 .\cf4 commit\cf2 .\cf7 enabled\cf2  = \cf3 NO\cf2 ;\
            \cf3 self\cf2 .\cf4 textView\cf2 .\cf7 layer\cf2 .\cf7 borderColor\cf2  = [\cf7 UIColor\cf2  \cf12 colorWithHexString\cf2 :\cf8 @"e5e5e5"\cf2 ].\cf7 CGColor\cf2 ;\
        \}\
    \}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f3\fs28 \cf16 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'d3\'c3
\f4 scrollRangeToVisible
\f3 \'ba\'af\'ca\'fd\'bd\'f8\'d0\'d0\'b9\'f6\'b6\'af\'a3\'ac\'bf\'c9\'d2\'d4\'cc\'f8\'b6\'af\'b5\'bd\'d7\'ee\'ba\'f3\'d2\'bb\'d0\'d0\'c4\'da\'c8\'dd\'c9\'cf
\f1\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\partightenfactor0

\f5\fs24 \cf17 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 [_textView\cf18 \'a0scrollRangeToVisible\cf17 :NSMakeRange(_textView.text.length,\'a01)];\'a0\'a0\
\pard\pardeftab720\partightenfactor0

\f6\b \cf19 self
\f5\b0 \cf17 .textView.layoutManager.allowsNonContiguousLayout\'a0=\'a0
\f6\b \cf19 NO
\f5\b0 \cf17 ;\'a0\'a0\
\pard\pardeftab720\partightenfactor0

\f3\fs28 \cf16 \'d5\'e2\'be\'e4\'b4\'fa\'c2\'eb\'c9\'e8\'d6\'c3\'c1\'cb
\f4  UITextView 
\f3 \'d6\'d0\'b5\'c4
\f4  layoutManager(NSLayoutManager) 
\f3 \'b5\'c4\'ca\'c7\'b7\'f1\'b7\'c7\'c1\'ac\'d0\'f8\'b2\'bc\'be\'d6\'ca\'f4\'d0\'d4\'a3\'ac\'c4\'ac\'c8\'cf\'ca\'c7
\f4  YES
\f3 \'a3\'ac\'c9\'e8\'d6\'c3\'ce\'aa
\f4  NO 
\f3 \'ba\'f3
\f4  UITextView 
\f3 \'be\'cd\'b2\'bb\'bb\'e1\'d4\'d9\'d7\'d4\'bc\'ba\'d6\'d8\'d6\'c3\'bb\'ac\'b6\'af\'c1\'cb\'a1\'a3
\f1\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
-(\cf3 void\cf2 )getCurrentMapScreenShot\{\
    \cf11 // 
\f3 \'bd\'d8\'cd\'bc\'b8\'bd\'bc\'d3\'d1\'a1\'cf\'ee
\f1 \cf2 \
    \cf7 MKMapSnapshotOptions\cf2  *options = [[\cf7 MKMapSnapshotOptions\cf2  \cf6 alloc\cf2 ] \cf6 init\cf2 ];\
    \cf11 // 
\f3 \'c9\'e8\'d6\'c3\'bd\'d8\'cd\'bc\'c7\'f8\'d3\'f2
\f1 (
\f3 \'d4\'da\'b5\'d8\'cd\'bc\'c9\'cf\'b5\'c4\'c7\'f8\'d3\'f2
\f1 ,
\f3 \'d7\'f7\'d3\'c3\'d4\'da\'b5\'d8\'cd\'bc
\f1 )\cf2 \
    options.region = \cf3 self\cf2 .mapView.region;\
    \cf11 //    options.mapRect = self.mapView.visibleMapRect;\cf2 \
    \
    \cf11 // 
\f3 \'c9\'e8\'d6\'c3\'bd\'d8\'cd\'bc\'ba\'f3\'b5\'c4\'cd\'bc\'c6\'ac\'b4\'f3\'d0\'a1
\f1 (
\f3 \'d7\'f7\'d3\'c3\'d4\'da\'ca\'e4\'b3\'f6\'cd\'bc\'cf\'f1
\f1 )\cf2 \
    options.size = \cf3 self\cf2 .mapView.frame.size;\
    \cf11 // 
\f3 \'c9\'e8\'d6\'c3\'bd\'d8\'cd\'bc\'ba\'f3\'b5\'c4\'cd\'bc\'c6\'ac\'b1\'c8\'c0\'fd\'a3\'a8\'c4\'ac\'c8\'cf\'ca\'c7\'c6\'c1\'c4\'bb\'b1\'c8\'c0\'fd\'a3\'ac
\f1  
\f3 \'d7\'f7\'d3\'c3\'d4\'da\'ca\'e4\'b3\'f6\'cd\'bc\'cf\'f1\'a3\'a9
\f1 \cf2 \
    options.\cf7 scale\cf2  = [[\cf7 UIScreen\cf2  \cf6 mainScreen\cf2 ] \cf6 scale\cf2 ];\
    \
    \cf7 MKMapSnapshotter\cf2  *snapshotter = [[\cf7 MKMapSnapshotter\cf2  \cf6 alloc\cf2 ] \cf6 initWithOptions\cf2 :options];\
    [snapshotter \cf6 startWithCompletionHandler\cf2 :^(\cf7 MKMapSnapshot\cf2  * \cf3 _Nullable\cf2  snapshot, \cf7 NSError\cf2  * \cf3 _Nullable\cf2  error) \{\
        \cf3 if\cf2  (error) \{\
            \cf6 NSLog\cf2 (\cf8 @"
\f3 \'bd\'d8\'cd\'bc\'b4\'ed\'ce\'f3\'a3\'ba
\f1 %@"\cf2 ,error.\cf7 localizedDescription\cf2 );\
        \}\cf3 else\cf2 \
        \{\
            \cf11 // 
\f3 \'c9\'e8\'d6\'c3\'c6\'c1\'c4\'bb\'c9\'cf\'cd\'bc\'c6\'ac\'cf\'d4\'ca\'be
\f1 \cf2 \
            \cf3 self\cf2 .snapshootImageView.image = snapshot.image;\
            \cf11 // 
\f3 \'bd\'ab\'cd\'bc\'c6\'ac\'b1\'a3\'b4\'e6\'b5\'bd\'d6\'b8\'b6\'a8\'c2\'b7\'be\'b6\'a3\'a8\'b4\'cb\'b4\'a6\'ca\'c7\'d7\'c0\'c3\'e6\'c2\'b7\'be\'b6\'a3\'ac\'d0\'e8\'d2\'aa\'b8\'f9\'be\'dd\'b8\'f6\'c8\'cb\'b5\'e7\'c4\'d4\'b2\'bb\'cd\'ac\'bd\'f8\'d0\'d0\'d0\'de\'b8\'c4\'a3\'a9
\f1 \cf2 \
            \cf7 NSData\cf2  *data = \cf6 UIImagePNGRepresentation\cf2 (snapshot.\cf7 image\cf2 );\
            [data \cf6 writeToFile\cf2 :\cf8 @"/Users/wangshunzi/Desktop/snap.png"\cf2  \cf6 atomically\cf2 :\cf3 YES\cf2 ];\
        \}\
    \}];\
\}\
\
\
\pard\pardeftab720\partightenfactor0

\f5 \cf16 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 NSString\'a0*path\'a0=\'a0[[NSBundle\'a0mainBundle]\'a0pathForResource:@\'94icon\'94\'a0ofType:@\'94png\'94];\
UIImage\'a0*image\'a0=\'a0[UIImage\'a0imageWithContentsOfFile:path];\
\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf3 \cb5 \kerning1\expnd0\expndtw0 if\cf2  (\cf3 @available\cf2 (iOS \cf9 11.0\cf2 , *)) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 self\cf2 .\cf4 collectionView\cf2 .\cf7 contentInsetAdjustmentBehavior\cf2  = \cf6 UIScrollViewContentInsetAdjustmentNever\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 self\cf2 .\cf4 collectionView\cf2 .\cf7 scrollIndicatorInsets\cf2  = \cf3 self\cf2 .\cf4 collectionView\cf2 .\cf7 contentInset\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f5\fs26 \cf16 \cb14 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clmgf \clvertalt \clshdrawnil \clwWidth31724\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl200 \clpadr200 \gaph\cellx4320
\clmrg \clvertalt \clshdrawnil \clwWidth31724\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f5\fs24 \cf20 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 NSAttributedString\cf21  *attrStr = [[\cf20 NSAttributedString\cf21  \cf20 alloc\cf21 ] \cf20 initWithData:\cf21 [htmlStr \cf20 dataUsingEncoding:NSUnicodeStringEncoding\cf21 ] \cf20 options:\cf21 @\{ \cf20 NSDocumentTypeDocumentAttribute\cf21 : \cf20 NSHTMLTextDocumentType\cf21  \} \cf20 documentAttributes:nil\cf21  \cf20 error:nil\cf21 ];\cell 
\pard\intbl\itap1\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth1000\clftsWidth3 \clminw1000 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl200 \clpadr200 \gaph\cellx4320
\clvertalt \clshdrawnil \clwWidth31724\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf22 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf21         self.attributedText = attrStr;\cell \lastrow\row
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 - (\cf3 BOOL\cf2 )table:(\cf7 UITableView\cf2  *)tableView rectVisible:(\cf7 CGRect\cf2 )rect \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 CGRect\cf2  visibleRect;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     visibleRect.\cf7 origin\cf2  = tableView.\cf7 contentOffset\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     visibleRect.\cf7 origin\cf2 .\cf7 y\cf2  += tableView.\cf7 contentInset\cf2 .\cf7 top\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     visibleRect.\cf7 size\cf2  = tableView.\cf7 bounds\cf2 .\cf7 size\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     visibleRect.\cf7 size\cf2 .\cf7 height\cf2  -= tableView.\cf7 contentInset\cf2 .\cf7 top\cf2  + tableView.\cf7 contentInset\cf2 .\cf7 bottom\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 return\cf2  \cf6 CGRectContainsRect\cf2 (visibleRect, rect);
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\f2\fs24 \cf0 \
\

\f1\fs28 \cf2 - (\cf3 void\cf2 )scrollToCursorForTextView:(\cf7 UITextView\cf2 *)textView \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 CGRect\cf2  cursorRect = [textView \cf6 caretRectForPosition\cf2 :textView.\cf7 selectedTextRange\cf2 .\cf7 start\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     cursorRect = [\cf3 self\cf2 .\cf4 tableView\cf2  \cf6 convertRect\cf2 :cursorRect \cf6 fromView\cf2 :textView];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (![\cf3 self\cf2  \cf12 table\cf2 :\cf3 self\cf2 .\cf4 tableView\cf2  \cf12 rectVisible\cf2 :cursorRect]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         cursorRect.\cf7 size\cf2 .\cf7 height\cf2  += \cf9 8\cf2 ; \cf11 // To add some space underneath the cursor
\f2\fs24 \cf0 \

\f1\fs28 \cf2         [\cf3 self\cf2 .\cf4 tableView\cf2  \cf6 scrollRectToVisible\cf2 :cursorRect \cf6 animated\cf2 :\cf3 YES\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\fs26 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 - (\cf3 void\cf2 )setBody:(\cf7 NSString\cf2  *)bodyText
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\cf4 _body\cf2  = bodyText;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\cf7 NSAttributedString\cf2  *attributedString = [[\cf7 NSAttributedString\cf2  \cf6 alloc\cf2 ] \cf6 initWithData\cf2 :[bodyText \cf6 dataUsingEncoding\cf2 :\cf6 NSUnicodeStringEncoding\cf2 ] \cf6 options\cf2 :\cf9 @\{\cf2  \cf7 NSDocumentTypeDocumentAttribute\cf2 : \cf7 NSHTMLTextDocumentType\cf2  \cf9 \}\cf2  \cf6 documentAttributes\cf2 :\cf3 nil\cf2  \cf6 error\cf2 :\cf3 nil\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\cf3 self\cf2 .\cf7 attributedText\cf2  = attributedString;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}\
\
- (\cf3 void\cf2 )prepareForSegue:(\cf7 UIStoryboardSegue\cf2  *)segue sender:(\cf3 id\cf2 )sender \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\cf3 if\cf2  ([[segue \cf6 identifier\cf2 ] \cf6 isEqualToString\cf2 :\cf8 @"showDetail"\cf2 ]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	    \cf7 NSIndexPath\cf2  *indexPath = [\cf3 self\cf2 .\cf7 tableView\cf2  \cf6 indexPathForSelectedRow\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	    \cf7 NSDate\cf2  *object = \cf3 self\cf2 .\cf4 objects\cf2 [indexPath.\cf7 row\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	    [[segue \cf6 destinationViewController\cf2 ] \cf12 setDetailItem\cf2 :object];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 	\}
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs26 \cf2 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf11 \cb5 \CocoaLigature1 // 
\f3 \'ca\'b9\'d3\'c3
\f1 edges
\f3 \'ca\'b9\'b5\'e3\'c2\'fa\'d5\'fb\'b8\'f6
\f1 self.view
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2   [scrollView \cf12 mas_makeConstraints\cf2 :^(\cf4 MASConstraintMaker\cf2  *make) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     make.\cf4 edges\cf2 .\cf12 equalTo\cf2 (weakSelf.\cf7 view\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf11 // 
\f3 \'c8\'e7\'b9\'fb\'d5\'e2\'c1\'bd\'b8\'f6\'b1\'ea\'c7\'a9\'b5\'c4\'c4\'da\'c8\'dd\'b6\'bc\'ca\'c7\'b2\'bb\'c8\'b7\'b6\'a8\'b5\'c4\'a3\'ac\'d2\'b2\'be\'cd\'ca\'c7\'b2\'bb\'c8\'b7\'b6\'a8\'c4\'c4\'b8\'f6\'b5\'c4\'c4\'da\'c8\'dd\'b8\'fc\'b6\'e0\'a3\'ac\'c4\'c7\'c3\'b4\'bf\'c9\'d2\'d4\'d5\'e2\'c3\'b4\'c9\'e8\'d6\'c3\'a1\'a3
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf11 // 
\f3 \'d5\'e2\'d1\'f9\'be\'cd\'bf\'c9\'d2\'d4\'b1\'a3\'d6\'a4\'ca\'b9\'d3\'c3\'c4\'da\'c8\'dd\'d7\'ee\'b6\'e0\'b5\'c4\'b1\'ea\'c7\'a9\'d7\'f7\'ce\'aa
\f1 scrollview
\f3 \'b5\'c4
\f1 contentSize
\f3 \'b2\'ce\'bf\'bc\'a1\'a3
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf11 // 
\f3 \'d3\'c3\'d3\'da\'c8\'b7\'b6\'a8
\f1 scrollview
\f3 \'b5\'c4
\f1 contentSize.height
\f2\fs24 \cf0 \

\f1\fs28 \cf2     make.\cf4 bottom\cf2 .\cf10 mas_greaterThanOrEqualTo\cf2 (avgLabel1.\cf4 mas_bottom\cf2 ).\cf12 offset\cf2 (\cf9 40\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2     make.\cf4 bottom\cf2 .\cf10 mas_greaterThanOrEqualTo\cf2 (avgLabel2.\cf4 mas_bottom\cf2 ).\cf12 offset\cf2 (\cf9 40\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2   \}];
\fs26 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
xib
\f3 \'cd\'bc\'c6\'ac\'cf\'c2\'c0\'ad\'b7\'c5\'b4\'f3
\f1 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 - (\cf3 void\cf2 ) scrollViewDidScroll:(\cf7 UIScrollView\cf2  *)scrollView
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 CGFloat\cf2  yPos = -scrollView.\cf7 contentOffset\cf2 .\cf7 y\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf6 NSLog\cf2 (\cf8 @"heightis:%f"\cf2 ,\cf3 self\cf2 .\cf4 topbg\cf2 .\cf7 frame\cf2 .\cf7 size\cf2 .\cf7 height\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf6 NSLog\cf2 (\cf8 @"width:%f"\cf2 ,\cf3 self\cf2 .\cf4 topbg\cf2 .\cf7 frame\cf2 .\cf7 size\cf2 .\cf7 width\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (yPos > \cf9 0\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         [\cf3 self\cf2 .\cf4 topbg\cf2  \cf12 mas_updateConstraints\cf2 :^(\cf4 MASConstraintMaker\cf2  *make) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             make.\cf4 height\cf2 .\cf10 mas_equalTo\cf2 (\cf9 @(\cf4 Mheight\cf2 +yPos\cf9 )\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2             make.\cf4 top\cf2 .\cf10 mas_equalTo\cf2 (-yPos);
\f2\fs24 \cf0 \

\f1\fs28 \cf2             make.\cf4 left\cf2 .\cf10 mas_equalTo\cf2 (-yPos);
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf11 //
\f2\fs24 \cf0 \

\f1\fs28 \cf2             make.\cf4 width\cf2 .\cf10 mas_equalTo\cf2 (\cf9 @(\cf4 Mwidth\cf2 +yPos*\cf9 2)\cf2 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf11 //make.width.equalTo(self.bgmig.mas_height).with.multipliedBy(300/173);
\f2\fs24 \cf0 \

\f1\fs28 \cf2             [\cf3 self\cf2 .\cf4 scollview\cf2  \cf6 setNeedsLayout\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf11 //            self.height.constant = Mheight+yPos;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf11 //            self.left.constant = -yPos;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf11 //            self.top.constant = -yPos;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\fs26 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf11 \cb5 \CocoaLigature1 //
\f3 \'cb\'ab\'bb\'f7\'b4\'a6\'c0\'ed
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2     \cf3 if\cf2 ([viewController.\cf7 tabBarItem\cf2 .\cf7 title\cf2  \cf6 isEqualToString\cf2 :\cf8 @"
\f3 \'c3\'e6\'c1\'c4
\f1 "\cf2 ])\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 if\cf2  (!\cf3 self\cf2 .\cf4 lastFaceTalkTabbarTappedTime\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 self\cf2 .\cf4 lastFaceTalkTabbarTappedTime\cf2  = [\cf7 NSDate\cf2  \cf6 date\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}\cf3 else\cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf7 NSDate\cf2  *date = [\cf7 NSDate\cf2  \cf6 date\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf7 NSTimeInterval\cf2  interval = [date \cf6 timeIntervalSinceDate\cf2 :\cf3 self\cf2 .\cf4 lastFaceTalkTabbarTappedTime\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 self\cf2 .\cf4 lastFaceTalkTabbarTappedTime\cf2  = \cf3 nil\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 if\cf2  (interval < \cf9 0.8\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \cf4 ZTNavigationViewController\cf2  *nav = (\cf4 ZTNavigationViewController\cf2  *)viewController;
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \cf4 DWHostListViewController\cf2  *faceTalkVC = (\cf4 DWHostListViewController\cf2  *)nav.\cf7 viewControllers\cf2 .\cf7 firstObject\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \cf3 if\cf2 ([faceTalkVC \cf6 respondsToSelector\cf2 :\cf3 @selector\cf2 (doubleTapTabbarItemAction)])\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                     [faceTalkVC \cf12 doubleTapTabbarItemAction\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2         
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\fs26 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf8 \cb5 \CocoaLigature1 _FDFullscreenPopGestureRecognizerDelegate
\fs26 \cf2 \cb15 \CocoaLigature0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 - (\cf3 BOOL\cf2 )gestureRecognizer:(\cf7 UIGestureRecognizer\cf2  *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(\cf7 UIGestureRecognizer\cf2  *)otherGestureRecognizer \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (\cf3 self\cf2 .\cf7 contentOffset\cf2 .\cf7 x\cf2  <= \cf9 0\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 if\cf2  ([otherGestureRecognizer.\cf7 delegate\cf2  \cf6 isKindOfClass\cf2 :\cf6 NSClassFromString\cf2 (\cf8 @"_FDFullscreenPopGestureRecognizerDelegate"\cf2 )]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 return\cf2  \cf3 YES\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 return\cf2  \cf3 NO\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\fs26 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f3\fs28 \cf11 \cb5 \CocoaLigature1 \'d7\'d6\'b7\'fb\'b4\'ae\'b9\'fd\'c2\'cb\'d3\'eb\'b4\'a6\'c0\'ed\
\pard\pardeftab720\sl320\partightenfactor0

\f7\fs26 \cf23 \cb14 \expnd0\expndtw0\kerning0
NSCharacterSet\'a0*set\'a0=\'a0[NSCharacterSet characterSetWithCharactersInString:@"@
\f8 \uc0\u65295 \u65306 \u65307 \u65288 \u65289 
\f9 \'a3\'a4
\f8 \uc0\u12300 \u12301 \u65282 \u12289 
\f10 []\{\}#%-*+=_\\\\|~
\f8 \uc0\u65308 \u65310 
\f10 $\'80^\'b7'@#$%^&*()_+'""];
\f3\fs28 \cf11 \cb5 \kerning1\expnd0\expndtw0 \

\f7\fs26 \cf23 \cb14 \expnd0\expndtw0\kerning0
NSString\'a0*trimmedString\'a0=\'a0[stringstringByTrimmingCharactersInSet:set];
\f3\fs28 \cf11 \cb5 \kerning1\expnd0\expndtw0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0
\cf11 \
\pard\pardeftab720\sl740\sa300\partightenfactor0

\f11\fs44 \cf24 \cb14 \expnd0\expndtw0\kerning0
\'c5\'d0\'b6\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'b7\'f1\'ce\'aa\'bf\'d5(\'b0\'fc\'c0\'a8
\f12\b nil
\f11\b0 ,
\f12\b @""
\f11\b0 ,\'c8\'ab\'ca\'c7\'bf\'d5\'b8\'f1)\'b5\'c4\'b4\'fa\'c2\'eb
\f12\b :\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\b0\fs28 \cf10 \cb5 \kerning1\expnd0\expndtw0 #pragma mark - 
\f3 \'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'ce\'aa\'bf\'d5\'d7\'d6\'b7\'fb\'b4\'ae\'b4\'ab
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 -(\cf3 BOOL\cf2 )IsEmpty:(NSString *)string\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (string == \cf3 nil\cf2  || string == \cf3 NULL\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 YES\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  ([string isKindOfClass:[NSNull \cf3 class\cf2 ]]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 YES\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSCharacterSet *set = [NSCharacterSet whitespaceAndNewlineCharacterSet];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSString *trimedString = [string stringByTrimmingCharactersInSet:set];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (trimedString.length == \cf9 0\cf2   ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 YES\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 return\cf2  \cf3 NO\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\f3 \cf11 \
\pard\pardeftab720\sl880\sa300\partightenfactor0

\f11\fs52 \cf24 \cb14 \expnd0\expndtw0\kerning0
\'c5\'d0\'b6\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'b7\'f1\'ce\'aa
\f12\b float 
\f11\b0 \'c0\'e0\'d0\'cd
\f12\b \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\b0\fs28 \cf2 \cb5 \kerning1\expnd0\expndtw0 -(\cf3 BOOL\cf2 )isPureFloat:(NSString *)string\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSScanner *scanner = [NSScanner scannerWithString:string];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 float\cf2  val;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 return\cf2  [scanner scanFloat:&val] && [scanner isAtEnd];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\f3 \cf11 \
\
\pard\pardeftab720\sl880\sa300\partightenfactor0

\f11\fs52 \cf24 \cb14 \expnd0\expndtw0\kerning0
\'c5\'d0\'b6\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'b7\'f1\'ce\'aa
\f12\b int 
\f11\b0 \'c0\'e0\'d0\'cd
\f12\b \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\b0\fs28 \cf2 \cb5 \kerning1\expnd0\expndtw0 -(\cf3 BOOL\cf2 )isPureFloat:(NSString *)string\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSScanner *scanner = [NSScanner scannerWithString:string];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 int\cf2  val;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 return\cf2  [scanner scanFloat:&val] && [scanner isAtEnd];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\f3 \cf11 \
\pard\pardeftab720\sl880\sa300\partightenfactor0

\f11\fs52 \cf24 \cb14 \expnd0\expndtw0\kerning0
\'c8\'a5\'b5\'f4\'bf\'d5\'b8\'f1
\f12\b \
\pard\pardeftab720\sl280\partightenfactor0

\f13\b0\fs24 \cf25 \cb1 NSString -stringByTrimmingCharactersInSet:
\f14  
\f9 \'ca\'c7\'b8\'f6\'c4\'e3\'d0\'e8\'d2\'aa\'c0\'ce\'c0\'ce\'bc\'c7\'d7\'a1\'b5\'c4\'b7\'bd\'b7\'a8\'a1\'a3\'cb\'fc\'be\'ad\'b3\'a3\'bb\'e1\'b4\'ab\'c8\'eb
\f13 NSCharacterSet +whitespaceCharacterSet 
\f3 \'bb\'f2
\f13  +whitespaceAndNewlineCharacterSet
\f9 \'c0\'b4\'c9\'be\'b3\'fd\'ca\'e4\'c8\'eb\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'cd\'b7\'ce\'b2\'b5\'c4\'bf\'d5\'b0\'d7\'b7\'fb\'ba\'c5\'a1\'a3
\f14 \
\
\pard\pardeftab720\sl360\partightenfactor0

\f15 \cf26 //
\f3 \'b3\'fd\'c8\'a5\'d7\'d6\'b7\'fb\'b4\'ae\'c1\'bd\'b6\'cb\'b5\'c4\'bf\'d5\'b8\'f1
\f15     \cf25 \
\pard\pardeftab720\sl360\partightenfactor0
\cf27 2\cf25  +(NSString *) trimStringWhitespace:(NSString *)str\{\
\cf27 3\cf25      NSCharacterSet *whitespace = [NSCharacterSet whitespaceCharacterSet];\
\cf27 4\cf25      str = [str stringByTrimmingCharactersInSet:whitespace];\
\cf27 5\cf25      \cf28 return\cf25  str;\
\cf27 6\cf25  \}\
\pard\pardeftab720\sl280\partightenfactor0

\f14 \cf25 \
\pard\pardeftab720\sl880\sa300\partightenfactor0

\f11\fs52 \cf24 \cb14 \'bc\'b7\'d1\'b9\'bf\'d5\'b8\'f1
\f12\b \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\b0\fs28 \cf7 \cb5 \kerning1\expnd0\expndtw0 NSString\cf2  *string = \cf8 @"Lorem    ipsum dolar   sit  amet."\cf2 ;
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 string = [string stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
\f2\fs24 \cf0 \
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf7 NSArray\cf2  *components = [\cf4 string\cf2  \cf6 componentsSeparatedByCharactersInSet\cf2 :[\cf7 NSCharacterSet\cf2  \cf6 whitespaceCharacterSet\cf2 ]];
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 components = [components filteredArrayUsingPredicate:[NSPredicate predicateWithFormat:\cf8 @"self <> ''"\cf2 ]];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 string = [components componentsJoinedByString:\cf8 @" "\cf2 ];\
\
\
\pard\pardeftab720\sl300\partightenfactor0

\f5\fs26 \cf29 \cb30 \expnd0\expndtw0\kerning0
NSString *theString = @"    Hello      this  is a   long       string!   ";\
\
NSCharacterSet *whitespaces = [NSCharacterSet whitespaceCharacterSet];\
NSPredicate *noEmptyStrings = [NSPredicate predicateWithFormat:@"SELF != ''"];\
\
NSArray *parts = [theString componentsSeparatedByCharactersInSet:whitespaces];\
NSArray *filteredArray = [parts filteredArrayUsingPredicate:noEmptyStrings];\
theString = [filteredArray componentsJoinedByString:@" "];\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f14\fs24 \cf25 \cb1 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f3\fs28 \cf11 \cb5 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\sl300\partightenfactor0

\f5\fs26 \cf29 \cb30 \expnd0\expndtw0\kerning0
NSString *original = @"    Hello      this  is a   long       string!   ";\
\
NSString *squashed = [original stringByReplacingOccurrencesOfString:@"[ ]+"\
                                                         withString:@" "\
                                                            options:NSRegularExpressionSearch\
                                                              range:NSMakeRange(0, original.length)];\
\
NSString *final = [squashed stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\sl340\sa300\partightenfactor0

\f4\fs30 \cf29 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 Possible alternative regex patterns:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\sa150\partightenfactor0
\ls1\ilvl0\cf29 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Replace only space:\'a0
\f5\fs26 \cb30 [ ]+
\f4\fs30 \cb1 \
\ls1\ilvl0\cb14 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Replace space and tabs:\'a0
\f5\fs26 \cb30 [ \\\\t]+
\f4\fs30 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls1\ilvl0\cf29 \cb14 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Replace space, tabs and newlines:\'a0
\f5\fs26 \cb30 \\\\s+
\f4\fs30 \cb1 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\pard\pardeftab720\sl300\partightenfactor0

\f5 \cf29 \cb30 \expnd0\expndtw0\kerning0
\CocoaLigature1 NSString *theString = @"    Hello      this  is a   long       string!   ";\
\
theString = [theString stringByReplacingOccurrencesOfString:@" +" withString:@" "\
                       options:NSRegularExpressionSearch\
                       range:NSMakeRange(0, theString.length)];\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\sl880\sa300\partightenfactor0

\f11\fs52 \cf24 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'b4\'d3\'d7\'d6\'b7\'fb\'b4\'ae\'bd\'e2\'ce\'f6\'ca\'fd\'be\'dd
\f12\b \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f3\b0\fs28 \cf2 \cb5 \kerning1\expnd0\expndtw0 \'c0\'fd\'c8\'e7\'a3\'ac\'c4\'e3\'cf\'eb\'b4\'d3\'d5\'e2\'d1\'f9\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'bd\'e2\'ce\'f6\'b3\'f6\'bf\'aa\'c3\'c5\'ca\'b1\'bc\'e4\'a3\'ba
\f2\fs24 \cf0 \
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 Text
\f2\fs24 \cf0 \

\f1\fs28 \cf2 Mon-Thurs: \cf9 8\cf2 :\cf9 00\cf2  - \cf9 18\cf2 :\cf9 00
\f2\fs24 \cf0 \

\f1\fs28 \cf2 Fri: \cf9 7\cf2 :\cf9 00\cf2  - \cf9 17\cf2 :\cf9 00
\f2\fs24 \cf0 \

\f1\fs28 \cf2 Sat-Sun: \cf9 10\cf2 :\cf9 00\cf2  - \cf9 15\cf2 :\cf9 00
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f3\fs28 \cf2 \'c4\'e3\'bb\'e1
\f1  enumerateLinesUsingBlock: 
\f3 \'b2\'a2\'cf\'f1\'d5\'e2\'d1\'f9\'d3\'c3\'d2\'bb\'b8\'f6
\f1  NSScanner 
\f3 \'c0\'b4\'bd\'e2\'ce\'f6\'a3\'ba
\f1\fs26 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 let skippedCharacters = NSMutableCharacterSet()
\f2\fs24 \cf0 \

\f1\fs28 \cf2 skippedCharacters.formIntersectionWithCharacterSet(NSCharacterSet.punctuationCharacterSet())
\f2\fs24 \cf0 \

\f1\fs28 \cf2 skippedCharacters.formIntersectionWithCharacterSet(NSCharacterSet.whitespaceCharacterSet())
\f2\fs24 \cf0 \
\

\f1\fs28 \cf2 string.enumerateLines \{ (line, _) \cf3 in
\f2\fs24 \cf0 \

\f1\fs28 \cf2     let scanner = NSScanner(string: line)
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.charactersToBeSkipped = skippedCharacters
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     var startDay, endDay: NSString?
\f2\fs24 \cf0 \

\f1\fs28 \cf2     var startHour: Int = \cf9 0
\f2\fs24 \cf0 \

\f1\fs28 \cf2     var startMinute: Int = \cf9 0
\f2\fs24 \cf0 \

\f1\fs28 \cf2     var endHour: Int = \cf9 0
\f2\fs24 \cf0 \

\f1\fs28 \cf2     var endMinute: Int = \cf9 0
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.scanCharactersFromSet(NSCharacterSet.letterCharacterSet(), intoString: &startDay)
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.scanCharactersFromSet(NSCharacterSet.letterCharacterSet(), intoString: &endDay)
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.scanInteger(&startHour)
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.scanInteger(&startMinute)
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.scanInteger(&endHour)
\f2\fs24 \cf0 \

\f1\fs28 \cf2     scanner.scanInteger(&endMinute)
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\fs26 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf7 \cb5 \CocoaLigature1 NSMutableCharacterSet\cf2  *skippedCharacters = [\cf7 NSMutableCharacterSet\cf2  \cf6 punctuationCharacterSet\cf2 ];
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 [skippedCharacters formUnionWithCharacterSet:[NSCharacterSet whitespaceCharacterSet]];
\f2\fs24 \cf0 \
\

\f1\fs28 \cf2 [hours enumerateLinesUsingBlock:^(\cf7 NSString\cf2  *line, \cf3 BOOL\cf2  *stop) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 NSScanner\cf2  *scanner = [\cf7 NSScanner\cf2  \cf6 scannerWithString\cf2 :line];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf6 setCharactersToBeSkipped\cf2 :\cf4 skippedCharacters\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 NSString\cf2  *startDay, *endDay;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 NSUInteger\cf2  startHour, startMinute, endHour, endMinute;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf6 scanCharactersFromSet\cf2 :[\cf7 NSCharacterSet\cf2  \cf6 letterCharacterSet\cf2 ] \cf6 intoString\cf2 :&startDay];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf6 scanCharactersFromSet\cf2 :[\cf7 NSCharacterSet\cf2  \cf6 letterCharacterSet\cf2 ] \cf6 intoString\cf2 :&endDay];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf6 scanInteger\cf2 :&startHour];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf6 scanInteger\cf2 :&startMinute];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf6 scanInteger\cf2 :&endHour];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     [scanner \cf6 scanInteger\cf2 :&endMinute];
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}];\
\pard\pardeftab720\sl320\sa200\partightenfactor0

\f3\fs26\fsmilli13333 \cf16 \cb31 \expnd0\expndtw0\kerning0
\'ce\'d2\'c3\'c7\'ca\'d7\'cf\'c8\'b4\'d3\'bf\'d5\'b8\'f1\'d7\'d6\'b7\'fb\'bc\'af\'ba\'cd\'b1\'ea\'b5\'e3\'b7\'fb\'ba\'c5\'d7\'d6\'b7\'fb\'bc\'af\'b5\'c4\'b2\'a2\'bc\'af\'b9\'b9\'d4\'ec\'c1\'cb\'d2\'bb\'b8\'f6
\f7  
\f15 NSMutableCharacterSet
\f3 \'a1\'a3\'b8\'e6\'cb\'df
\f7  
\f15 NSScanner
\f3 \'ba\'f6\'c2\'d4\'d5\'e2\'d0\'a9\'d7\'d6\'b7\'fb\'d2\'d4\'bc\'ab\'b4\'f3\'b5\'d8\'bc\'f5\'c9\'d9\'bd\'e2\'ce\'f6\'d5\'e2\'d0\'a9\'d7\'d6\'b7\'fb\'b5\'c4\'b1\'d8\'d2\'aa\'c2\'df\'bc\'ad\'a1\'a3
\f7 \
\pard\pardeftab720\sl300\sa200\partightenfactor0

\f15 \cf16 scanCharactersFromSet:
\f7  
\f3 \'b4\'ab\'c8\'eb\'d7\'d6\'c4\'b8\'d7\'d6\'b7\'fb\'bc\'af\'b5\'c3\'b5\'bd\'c3\'bf\'cf\'ee\'d6\'d0\'d2\'bb\'d0\'c7\'c6\'da\'c4\'da\'b5\'c4\'bf\'aa\'ca\'bc\'ba\'cd\'bd\'e1\'ca\'f8\'a3\'a8\'bf\'c9\'d1\'a1\'a3\'a9\'b5\'c4\'cc\'ec\'ca\'fd\'a1\'a3
\f15 scanInteger
\f7  
\f3 \'c0\'e0\'cb\'c6\'b5\'d8\'a3\'ac\'b5\'c3\'b5\'bd\'cf\'c2\'d2\'bb\'b8\'f6\'c1\'ac\'d0\'f8\'b5\'c4\'d5\'fb\'d0\'cd\'d6\'b5\'a1\'a3
\f7 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab692\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \cb5 \CocoaLigature1 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf11 //
\f3 \'c5\'d0\'b6\'cf\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'b7\'f1\'d6\'bb\'b0\'fc\'ba\'ac\'ca\'fd\'d7\'d6
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 +(\cf3 BOOL\cf2 )isTureCustomNum:(NSString *)customNum
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSCharacterSet *nameCharacters = [[NSCharacterSet characterSetWithCharactersInString:\cf8 @"0123456789"\cf2 ] invertedSet];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSRange userNameRange = [customNum rangeOfCharacterFromSet:nameCharacters];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (userNameRange.location != NSNotFound) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf11 //
\f3 \'b0\'fc\'ba\'ac\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 NO\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}\cf3 else\cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 YES\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\f2\fs24 \cf0 \
\
\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf11 //
\f3 \'c5\'d0\'b6\'cf\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'b7\'f1\'d6\'bb\'b0\'fc\'ba\'ac\'d7\'d6\'c4\'b8
\f1  
\f3 \'a1\'a2\'ca\'fd\'d7\'d6\'ba\'cd\'cf\'c2\'bb\'ae\'cf\'df
\f2\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2 +(\cf3 BOOL\cf2 )isValidateString:(NSString *)str\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSCharacterSet *nameCharacters = [[NSCharacterSet characterSetWithCharactersInString:\cf8 @"_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"\cf2 ] invertedSet];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     NSRange userNameRange = [str rangeOfCharacterFromSet:nameCharacters];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 if\cf2  (userNameRange.location != NSNotFound) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf11 //
\f3 \'b0\'fc\'ba\'ac\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 NO\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}\cf3 else\cf2 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 return\cf2  \cf3 YES\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\fs26 \cb15 \CocoaLigature0 \
\pard\pardeftab720\sl360\partightenfactor0

\f15\fs24 \cf25 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\sl320\partightenfactor0

\f3\b\fs26\fsmilli13333 \cf16 \cb31 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'b2\'bb\'d2\'aa\'d3\'c3
\f7  
\f16 NSCharacterSet
\f7  
\f3 \'c0\'b4\'b7\'d6\'b4\'ca\'a1\'a3
\f7\b0  
\f3\b \'d3\'c3
\f7  
\f16 CFStringTokenizer
\f7  
\f3 \'c0\'b4\'cc\'e6\'b4\'fa\'cb\'fc
\f1\b0\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\partightenfactor0

\f3\fs26\fsmilli13333 \cf16 \cb31 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'c8\'e7\'b9\'fb\'c4\'e3\'cf\'eb\'bd\'ab\'d7\'d6\'b7\'fb\'b4\'ae\'b7\'d6\'b3\'c9\'d3\'d0\'d2\'e2\'d2\'e5\'b5\'c4\'b5\'a5\'b4\'ca\'a3\'ac\'c4\'c7\'c3\'b4\'c7\'eb\'d3\'c3
\f7  
\f15 CFStringTokenizer
\f7  
\f3 \'a3\'a8\'bb\'f2\'d5\'df
\f15 enumerateSubstringsInRange:options:usingBlock:
\f3 \'a3\'a9\'b0\'c9
\f1\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
\pard\pardeftab720\sl760\partightenfactor0

\f3\b\fs48 \cf32 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 NSString\'b9\'fd\'c2\'cb\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\b0\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\sl380\qj\partightenfactor0

\fs32 \cf33 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 //\'a0
\f3 \'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb\'b5\'c4\'bc\'af\'ba\'cf\
\pard\pardeftab720\sl380\qj\partightenfactor0

\f1 \cf25 \'a0\cf34 NSCharacterSet\cf25 \'a0*set = [\cf34 NSCharacterSet\cf25 \'a0\cf35 characterSetWithCharactersInString\cf25 :\cf35 \
\cf25 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0\cf36 @"@
\f3 \'a3\'af\'a3\'ba\'a3\'bb\'a3\'a8\'a3\'a9
\f1 \'a5
\f3 \'a1\'b8\'a1\'b9\'a3\'a2\'a1\'a2
\f1 []\{\}#%-*+=_\\\\|~
\f3 \'a3\'bc\'a3\'be
\f1 $\'80^\'95'@#$%^&*()_+'\\""\cf25 ];\cf36 \
\pard\pardeftab720\sl380\qj\partightenfactor0
\cf33 //\'a0
\f3 \'b9\'fd\'c2\'cb\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb\
\pard\pardeftab720\sl380\qj\partightenfactor0

\f1 \cf34 NSString\cf37 \'a0*newString = [\cf34 NSString\cf37 \'a0stringByTrimmingCharactersInSet:\cf38 set\cf37 ];\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf8 \cb5 \CocoaLigature1 [\\\\s`!@#$%^&*()=,./;'\\\\~
\f3 \'a3\'a1\'a3\'a4
\f1 \'85\'85
\f3 \'a3\'a8\'a3\'a9
\f1 |
\f3 \'a1\'be\'a1\'bf
\f1 \{\}
\f3 \'a3\'bb
\f1 \'91
\f3 \'a3\'ba
\f1 \'93\'94
\f3 \'a3\'ac\'a1\'a3\'a1\'a2\'a3\'bf
\f1 ?]
\fs26 \cf2 \cb15 \CocoaLigature0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1  \cf7 NSString\cf2  *string = \cf8 @"';"\cf2 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf11 //\'a0
\f3 \'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb\'b5\'c4\'bc\'af\'ba\'cf
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 NSCharacterSet\cf2  *set = [\cf7 NSCharacterSet\cf2  \cf6 characterSetWithCharactersInString\cf2 :
\f2\fs24 \cf0 \

\f1\fs28 \cf2                            \cf8 @"!
\f3 \'a3\'a1
\f1 \'91\'85\'85,.
\f3 \'a3\'af\'a3\'ba\'a3\'bf
\f1 ?
\f3 \'a1\'a3\'a3\'ac
\f1 ;
\f3 \'a3\'bb
\f1 \'93\'94
\f3 \'a1\'be\'a1\'bf\'a3\'a8\'a3\'a9
\f1 \'a5
\f3 \'a1\'b8\'a1\'b9\'a3\'a2\'a1\'a2
\f1 []\{\}#%-*+=_\\\\|~
\f3 \'a3\'bc\'a3\'be
\f1 $\'80^\'95'@$%^&()'\\""\cf2 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf11 //\'a0
\f3 \'b9\'fd\'c2\'cb\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 NSString\cf2  *newString = [string \cf6 stringByTrimmingCharactersInSet\cf2 :set];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf6 NSLog\cf2 (\cf8 @"%@"\cf2 ,newString);
\fs26 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab720\sl280\partightenfactor0

\f5\fs24 \cf25 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 [NSCharacterSet\cf18 \'a0characterSetWithCharactersInString\cf25 :\cf28 @";\'a5?![]\{\}#%^*\'a3\'80\'95$><~|/
\f3 \'a3\'bf\'a3\'a1
\f5 @[]\{\}
\f3 \'a3\'a8
\f5 #-%*+=
\f3 \'a3\'a9
\f5 \\\\|~(
\f3 \'a3\'bc\'a3\'be
\f5 $%^&*)+"\cf25 ];\'a0
\f1\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
\pard\pardeftab720\sl420\sa320\qj\partightenfactor0

\f8\fs28 \cf39 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 1.iOS 10.1 \uc0\u20043 \u21069 \u19968 \u30452 \u29992 \u36825 \u27573 \u20195 \u30721 \u26469 \u20570 \u29305 \u27530 \u23383 \u31526 \u21028 \u26029 \u65292 \u27491 \u24120 \u20351 \u29992 \u12290 \u26368 \u36817 \u29992 \u30340 \u26102 \u20505 \u21457 \u29616 \u26080 \u27861 \u36827 \u34892 \u21028 \u26029 \u20102 \u65292 \u19968 \u30452 \u26159  return NO\u12290 
\f3\fs32 \cf37 \
\pard\pardeftab720\sl260\qj\partightenfactor0

\f1\fs22 \cf37 + (\cf40 BOOL\cf37 )isNoTeShuZiFu:(\cf34 NSString\cf37 \'a0*)string \{\
\'a0\'a0 \'a0\
\cf25 \'a0 \'a0\'a0\cf34 NSString\cf25 \'a0*regex =\'a0\cf36 @"[^a-zA-Z0-9\\u4E00-\\u9FA5,.?:;()!\{\}<>#*-+=
\f3 \'a3\'ac\'a1\'a3\'a1\'a2\'a3\'bf\'a3\'ba\'a3\'bb\'a3\'a8\'a3\'a9\'a3\'a1
\f1 \{\}+=]
\f17 \uc0\u10123 \u10124 \u10125 \u10126 \u10127 \u10128 \u10129 \u10130 
\f1 "\cf25 ;\cf36 \
\pard\pardeftab720\sl260\qj\partightenfactor0
\cf33 \
\pard\pardeftab720\sl260\qj\partightenfactor0
\cf37 \'a0 \'a0\'a0\cf34 NSPredicate\cf37 \'a0*pred = [\cf34 NSPredicate\cf37 \'a0\cf41 predicateWithFormat\cf37 :\cf36 @"SELF MATCHES %@"\cf37 , regex];\
\'a0 \'a0\'a0\cf40 return\cf37 \'a0[pred\'a0\cf41 evaluateWithObject\cf37 : string];\
\}\cb1 \
\pard\pardeftab720\sl440\partightenfactor0

\f3\fs32 \cf13 \
\pard\pardeftab720\sl260\qj\partightenfactor0

\f1\fs22 \cf33 \cb14 \
\pard\pardeftab720\sl520\qj\partightenfactor0

\f4\fs28 \cf42 \
\pard\pardeftab720\sl420\qj\partightenfactor0

\b \cf39 2
\f3 \'a1\'a2\'bf\'c9\'bc\'ec\'b2\'e2\'b5\'bd\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'c8\'ce\'d2\'e2\'ce\'bb\'d6\'c3\'b5\'c4\'cc\'d8\'ca\'e2\'d7\'d6\'b7\'fb\'a3\'a8\'b7\'bd\'b7\'a8
\f4 1
\f3 \'ca\'a7\'d0\'a7\'ba\'f3\'d5\'d2\'b5\'bd\'b5\'c4\'c1\'ed\'d2\'bb\'b8\'f6\'bf\'c9\'b4\'fa\'cc\'e6\'b7\'bd\'b7\'a8\'a3\'a9
\f4\b0 \cf42 \
\pard\pardeftab720\sl520\qj\partightenfactor0
\cf42 \
\pard\pardeftab720\sl260\qj\partightenfactor0

\f1\fs22 \cf41 \
\pard\pardeftab720\sl260\qj\partightenfactor0
\cf37 + (\cf40 BOOL\cf37 )isNoTeShuZiFu:(\cf34 NSString\cf37 \'a0*)string \{\
\pard\pardeftab720\sl260\qj\partightenfactor0
\cf37 \cb1 \uc0\u8232 \cb14 \
\pard\pardeftab720\sl260\qj\partightenfactor0
\cf25 \'a0 \'a0\'a0\cf34 NSString\cf25 \'a0*regex =\'a0\cf36 @"[^a-zA-Z0-9\\u4E00-\\u9FA5,.?:;()!\{\}<>#*-+=
\f3 \'a3\'ac\'a1\'a3\'a1\'a2\'a3\'bf\'a3\'ba\'a3\'bb\'a3\'a8\'a3\'a9\'a3\'a1
\f1 \{\}+=]
\f17 \uc0\u10123 \u10124 \u10125 \u10126 \u10127 \u10128 \u10129 \u10130 
\f1 "\cf25 ;\cf36 \
\cf25 \'a0 \'a0\'a0\cf34 NSRange\cf25 \'a0urgentRange = [string\'a0\cf41 rangeOfCharacterFromSet\cf25 : [\cf34 NSCharacterSet\cf25 \'a0\cf41 characterSetWithCharactersInString\cf25 : regex]];\cf41 \
\cf37 \'a0 \'a0\'a0\cf40 if\cf37 \'a0(urgentRange.\cf34 location\cf37 \'a0==\'a0\cf34 NSNotFound\cf37 )\
\'a0 \'a0 \{\
\'a0 \'a0 \'a0 \'a0\'a0\cf40 return\cf37 \'a0\cf40 NO\cf37 ;\
\'a0 \'a0 \}\
\cf25 \'a0 \'a0\'a0\cf40 return\cf25 \'a0\cf40 YES\cf25 ;\cf40 \
\cf37 \}\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://www.cocoachina.com/ios/20160111/14926.html"}}{\fldrslt 
\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 http://www.cocoachina.com/ios/20160111/14926.html}}
\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf2 \cb5 \CocoaLigature1 - (\cf3 \cb5 void\cf2 \cb5 )createTableView\{
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 \cb5 dataArray\cf2 \cb5  = [\cf7 \cb5 NSArray\cf2 \cb5  \cf6 \cb5 array\cf2 \cb5 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 \cb5 NSError\cf2 \cb5 *error;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 \cb5 NSString\cf2 \cb5  *filePath = [[\cf7 \cb5 NSBundle\cf2 \cb5  \cf6 \cb5 mainBundle\cf2 \cb5 ]\cf6 \cb5 pathForResource\cf2 \cb5 :\cf8 \cb5 @"TVList"\cf6 \cb5 ofType\cf2 \cb5 :\cf8 \cb5 @"json"\cf2 \cb5 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf7 \cb5 NSData\cf2 \cb5  *jdata = [[\cf7 \cb5 NSData\cf2 \cb5  \cf6 \cb5 alloc\cf2 \cb5 ]\cf6 \cb5 initWithContentsOfFile\cf2 \cb5 :filePath];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 \cb5 id\cf2 \cb5  JsonObject=[\cf7 \cb5 NSJSONSerialization\cf2 \cb5  \cf6 \cb5 JSONObjectWithData\cf2 \cb5 :jdata
\f2\fs24 \cf0 \

\f1\fs28 \cf2                                                   \cf6 \cb5 options\cf2 \cb5 :\cf6 \cb5 NSJSONReadingAllowFragments
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf2                                                     \cf6 \cb5 error\cf2 \cb5 :&error];
\f2\fs24 \cf0 \

\f1\fs28 \cf2     
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf3 \cb5 if\cf2 \cb5  (JsonObject[\cf8 \cb5 @"success"\cf2 \cb5 ] && [JsonObject[\cf8 \cb5 @"success"\cf2 \cb5 ] \cf6 \cb5 boolValue\cf2 \cb5 ] &&
\f2\fs24 \cf0 \

\f1\fs28 \cf2         JsonObject[\cf8 \cb5 @"data"\cf2 \cb5 ] && JsonObject[\cf8 \cb5 @"data"\cf2 \cb5 ] != [\cf7 \cb5 NSNull\cf2 \cb5  \cf6 \cb5 null\cf2 \cb5 ]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 \cb5 if\cf2 \cb5  (!\cf4 \cb5 tvlistArray\cf2 \cb5 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf4 \cb5 tvlistArray\cf2 \cb5  = [\cf7 \cb5 NSMutableArray\cf2 \cb5  \cf6 \cb5 array\cf2 \cb5 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 \cb5 else\cf2 \cb5 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             [\cf4 \cb5 tvlistArray\cf2 \cb5  \cf6 \cb5 removeAllObjects\cf2 \cb5 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf7 \cb5 NSDictionary\cf2 \cb5  *dic = JsonObject[\cf8 \cb5 @"data"\cf2 \cb5 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \cf3 \cb5 if\cf2 \cb5  (dic[\cf8 \cb5 @"programList"\cf2 \cb5 ]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf7 \cb5 NSArray\cf2 \cb5  *a = dic[\cf8 \cb5 @"programList"\cf2 \cb5 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 \cb5 if\cf2 \cb5  (a.\cf7 \cb5 count\cf2 \cb5  > \cf9 0\cf2 ) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \cf3 \cb5 for\cf2 \cb5  (\cf7 \cb5 NSDictionary\cf2 \cb5  *tempDic \cf3 \cb5 in\cf2 \cb5  a) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                     \cf3 \cb5 if\cf2 \cb5  (tempDic[\cf8 \cb5 @"tvProgramList"\cf2 \cb5 ]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                         \cf3 \cb5 for\cf2 \cb5  (\cf7 \cb5 NSDictionary\cf2 \cb5  *tempDic1 \cf3 \cb5 in\cf2 \cb5  tempDic[\cf8 \cb5 @"tvProgramList"\cf2 \cb5 ]) \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                             \cf4 \cb5 TVlistModel\cf2 \cb5  *model = [[\cf4 \cb5 TVlistModel\cf2 \cb5  \cf6 \cb5 alloc\cf2 \cb5 ] \cf6 \cb5 init\cf2 \cb5 ];
\f2\fs24 \cf0 \

\f1\fs28 \cf2                             [model \cf6 \cb5 setValuesForKeysWithDictionary\cf2 \cb5 :tempDic1];
\f2\fs24 \cf0 \

\f1\fs28 \cf2                             [\cf4 \cb5 tvlistArray\cf2 \cb5  \cf6 \cb5 addObject\cf2 \cb5 :model];
\f2\fs24 \cf0 \

\f1\fs28 \cf2                         \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2                     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \cf3 \cb5 else\cf2 \cb5 \{
\f2\fs24 \cf0 \

\f1\fs28 \cf2                 \cf6 \cb5 NSLog\cf2 \cb5 (\cf8 \cb5 @"
\f3 \'ce\'de\'c4\'da\'c8\'dd
\f1 "\cf2 \cb5 );
\f2\fs24 \cf0 \

\f1\fs28 \cf2             \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2         \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \}
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 \cb5 dataArray\cf2 \cb5  = \cf4 \cb5 tvlistArray\cf2 \cb5 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 \cb5 _programmeTableView\cf2 \cb5 .\cf7 \cb5 delegate\cf2 \cb5  = \cf3 \cb5 self\cf2 \cb5 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2     \cf4 \cb5 _programmeTableView\cf2 \cb5 .\cf7 \cb5 dataSource\cf2 \cb5  = \cf3 \cb5 self\cf2 \cb5 ;
\f2\fs24 \cf0 \

\f1\fs28 \cf2 \}
\f2\fs24 \cf0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb15 \CocoaLigature0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \cb5 \CocoaLigature1 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf11 \cb5 //-(NSMutableArray *)sicuanLanguageEmojiModels\{
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //    static NSMutableArray *array;
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //    static dispatch_once_t onceToken;
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //    dispatch_once(&onceToken, ^\{
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //        array = [NSMutableArray array];
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //        [self.sicuanLanguageEmoijTitles enumerateObjectsUsingBlock:^(NSString *title, NSUInteger idx, BOOL * _Nonnull stop) \{
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //            WWCustomEmojiModel *model = [WWCustomEmojiModel new];
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //            model.title = title;
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //            if (idx <9) \{
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //                model.identifier = [NSString stringWithFormat:@"localism_emoji_00%ld",idx + 1];
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //            \}else\{
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //                model.identifier = [NSString stringWithFormat:@"localism_emoji_0%ld",idx + 1];
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //            \}
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //            [array addObject:model];
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //        \}];
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //    \});
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //    return array;
\f2\fs24 \cf0 \cb5 \

\f1\fs28 \cf11 \cb5 //\}
\fs26 \cf2 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf11 \cb5 \CocoaLigature1 //
\f3 \'c8\'ab\'b2\'bf\'ca\'a1\'ca\'d0\'c7\'f8\'ca\'fd\'be\'dd
\f2\fs24 \cf0 \cb5 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f1\fs28 \cf2     [\cf3 \cb5 self\cf2 \cb5 .\cf4 \cb5 dataArray\cf2 \cb5  \cf6 \cb5 addObjectsFromArray\cf2 \cb5 :[\cf7 \cb5 NSArray\cf2 \cb5  \cf6 \cb5 arrayWithContentsOfFile\cf2 \cb5 :[[\cf7 \cb5 NSBundle\cf2 \cb5  \cf6 \cb5 mainBundle\cf2 \cb5 ] \cf6 \cb5 pathForResource\cf2 \cb5 :\cf8 \cb5 @"Address"\cf2 \cb5  \cf6 \cb5 ofType\cf2 \cb5 :\cf8 \cb5 @"plist"\cf2 \cb5 ]]];
\fs26 \cf2 \cb15 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
\pard\pardeftab720\sl580\partightenfactor0

\f3\fs48 \cf43 \cb44 \expnd0\expndtw0\kerning0
\CocoaLigature1 \outl0\strokewidth0 \strokec43 \'b4\'e6\'ca\'fd\'be\'dd
\f12\fs32 \cf45 \strokec45 \
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf45 \'a0 \'a0
\f12 \'a0
\f9 \cf46 \strokec46 \'ca\'fd\'be\'dd\'b4\'e6\'b4\'a2\'ca\'c7\'b1\'a3\'b4\'e6\'d4\'da\'ca\'d6\'bb\'fa\'c0\'ef\'c3\'e6\'b5\'c4
\f12 \cf45 \strokec45 \

\f1 \'a0 \'a0\cf46 \strokec46 plist
\f9 \'ce\'c4\'bc\'fe\'b4\'e6\'b4\'a2\'d2\'bb\'b0\'e3\'b6\'bc\'ca\'c7\'b4\'e6\'c8\'a1\'d7\'d6\'b5\'e4\'ba\'cd\'ca\'fd\'d7\'e9
\f1 ,
\f9 \'d6\'b1\'bd\'d3\'d0\'b4\'b3\'c9
\f1 plist
\f9 \'ce\'c4\'bc\'fe
\f1 ,
\f9 \'b0\'d1\'cb\'fc\'b4\'e6\'b5\'bd\'d3\'a6\'d3\'c3\'c9\'b3\'ba\'d0\'b5\'b1\'d6\'d0
\f1 .
\f12 \cf45 \strokec45 \

\f1 \'a0 \'a0
\f12 \'a0
\f9 \cf46 \strokec46 \'d6\'bb\'d3\'d0\'d4\'da
\f1 ios
\f9 \'b5\'b1\'d6\'d0\'b2\'c5\'d3\'d0
\f1 plist
\f9 \'b4\'e6\'b4\'a2
\f1 ,
\f9 \'cb\'fc\'ca\'c7
\f1 ios
\f9 \'cc\'d8\'d3\'d0\'b5\'c4\'b4\'e6\'b4\'a2\'b7\'bd\'ca\'bd
\f1 .
\f12 \cf45 \strokec45 \

\f1 \'a0 \'a0
\f12 \'a0
\f9 \cf46 \strokec46 \'bb\'f1\'c8\'a1\'c9\'b3\'ba\'d0\'b8\'f9\'b8\'f9\'c2\'b7\'be\'b6
\f1 ,
\f9 \'c3\'bf\'d2\'bb\'b8\'f6\'d3\'a6\'d3\'c3\'d4\'da\'ca\'d6\'bb\'fa\'b5\'b1\'d6\'d0\'b6\'bc\'d3\'d0\'d2\'bb\'b8\'f6\'ce\'c4\'bc\'fe\'bc\'d0
\f1 ,
\f9 \'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'be\'cd\'ca\'c7\'bb\'f1\'c8\'a1\'b5\'b1\'c7\'b0\'d3\'a6\'d3\'c3\'d4\'da\'ca\'d6\'bb\'fa\'c0\'ef\'b0\'b2\'d7\'b0\'b5\'c4\'ce\'c4\'bc\'fe
\f1 .
\f12 \cf45 \strokec45 \

\f1 \'a0 \'a0\cf46 \strokec46 NSString *homeDir = NSHomeDirectory();
\f12 \cf45 \strokec45 \

\f1 \'a0\'a0\'a0\cf47 \strokec47 NSArray\cf45 \strokec45 *array =\'a0\cf48 \strokec48 NSSearchPathForDirectoriesInDomains\cf45 \strokec45 (\cf48 \strokec48 NSCachesDirectory\cf45 \strokec45 ,\cf48 \strokec48 NSUserDomainMask\cf45 \strokec45 ,\cf49 \strokec49 YES\cf45 \strokec45 );
\f12 \

\f1 \'a0\'a0\'a0\cf47 \strokec47 NSString\cf45 \strokec45 *cachePath = array[\cf50 \strokec50 0\cf45 \strokec45 ];
\f12 \

\f1 \'a0\'a0\'a0\cf47 \strokec47 NSString\cf45 \strokec45 *filePathName = [cachePath\cf48 \strokec48 stringByAppendingPathComponent\cf45 \strokec45 :\cf51 \strokec51 @"xiaomi.plist"\cf45 \strokec45 ];
\f12 \

\f1 \'a0\'a0\'a0\cf47 \strokec47 NSDictionary\cf45 \strokec45 *dict =\cf50 \strokec50 @\{\cf51 \strokec51 @"age"\cf45 \strokec45 :\cf50 \strokec50 @18\cf45 \strokec45 ,\cf51 \strokec51 @"name"\cf45 \strokec45 :\cf51 \strokec51 @"xiaomi"\cf50 \strokec50 \}\cf45 \strokec45 ;
\f12 \

\f1 \'a0 \'a0[dict\cf48 \strokec48 writeToFile\cf45 \strokec45 :filePathName\cf48 \strokec48 atomically\cf45 \strokec45 :\cf49 \strokec49 YES\cf45 \strokec45 ];\cb1 \
\
\cb44 \'a0 \'a0
\f12 \'a0
\f9 \cf46 \strokec46 \'d3\'c3\'ca\'fd\'d7\'e9\'d0\'b4
\f1 ,plist
\f9 \'ce\'c4\'bc\'fe\'b5\'b1\'d6\'d0\'b1\'a3\'b4\'e6\'b5\'c4\'c0\'e0\'d0\'cd\'ca\'c7\'ca\'fd\'d7\'e9
\f1 .
\f12 \cf45 \strokec45 \

\f1 \'a0\'a0\'a0\cf47 \strokec47 NSArray\cf45 \strokec45 *dataArray =\cf50 \strokec50 @[@56\cf45 \strokec45 ,\cf51 \strokec51 @"xiaoli"\cf50 \strokec50 ]\cf45 \strokec45 ;
\f12 \

\f1 \'a0 \'a0
\f12 \'a0
\f9 \cf46 \strokec46 \'bb\'f1\'c8\'a1\'c9\'b3\'ba\'d0\'c2\'b7\'be\'b6
\f12 \cf45 \strokec45 \

\f1 \'a0 \'a0\cf46 \strokec46 ToFile:
\f9 \'d2\'aa\'d0\'b4\'c8\'eb\'b5\'c4\'c9\'b3\'ba\'d0\'c2\'b7\'be\'b6
\f12 \cf45 \strokec45 \

\f1 \'a0 \'a0[dataArray\cf48 \strokec48 writeToFile\cf45 \strokec45 :filePathName\cf48 \strokec48 atomically\cf45 \strokec45 :\cf49 \strokec49 YES\cf45 \strokec45 ];\cb1 \
\cb44 \'a0\'a0\'a0\cb1 \
\cb44 \'a0\'a0\'a0\cb1 \
\pard\pardeftab720\sl440\partightenfactor0

\f12\fs36 \cf43 \cb44 \strokec43 \'a0 \'a0 \'a0\'a0
\f3\fs48 \'b6\'c1\'c8\'a1\'ca\'fd\'be\'dd
\f12\fs32 \cf45 \strokec45 \
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf45 \'a0 \'a0
\f9 \cf46 \strokec46 \'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'bb\'f1\'c8\'a1\'b3\'f6\'b5\'c4\'bd\'e1\'b9\'fb\'ca\'c7\'d2\'bb\'b8\'f6\'ca\'fd\'d7\'e9
\f1 .
\f9 \'d2\'f2\'ce\'aa\'d3\'d0\'bf\'c9\'d2\'d4\'cb\'d1\'cb\'f7\'b5\'bd\'b6\'e0\'b8\'f6\'c2\'b7\'be\'b6
\f1 .
\f12 \cf45 \strokec45 \

\f1 \'a0\'a0\'a0\cf47 \strokec47 NSArray\cf45 \strokec45 *array =\'a0\cf48 \strokec48 NSSearchPathForDirectoriesInDomains\cf45 \strokec45 (\cf48 \strokec48 NSCachesDirectory\cf45 \strokec45 ,\cf48 \strokec48 NSUserDomainMask\cf45 \strokec45 ,\cf49 \strokec49 YES\cf45 \strokec45 );
\f12 \

\f1 \'a0\'a0\'a0\cf47 \strokec47 NSString\cf45 \strokec45 *cachePath = array[\cf50 \strokec50 0\cf45 \strokec45 ];
\f12 \

\f1 \'a0\'a0\'a0\cf47 \strokec47 NSString\cf45 \strokec45 *filePathName = [cachePath\cf48 \strokec48 stringByAppendingPathComponent\cf45 \strokec45 :\cf51 \strokec51 @"xiaomi.plist"\cf45 \strokec45 ];
\f12 \

\f1 \'a0\'a0\'a0\cf47 \strokec47 NSDictionary\cf45 \strokec45 *dict = [\cf47 \strokec47 NSDictionary\cf48 \strokec48 dictionaryWithContentsOfFile\cf45 \strokec45 :filePathName];
\f12 \

\f1 \'a0\'a0\'a0
\f12 \

\f1 \'a0 \'a0
\f12 \'a0
\f9 \cf46 \strokec46 \'c8\'e7\'b9\'fb\'b1\'a3\'b4\'e6\'b5\'c4\'ca\'c7\'d2\'bb\'b8\'f6\'ca\'fd\'d7\'e9
\f1 .
\f9 \'c4\'c7\'be\'cd\'cd\'a8\'b9\'fd\'ca\'fd\'d7\'e9\'b4\'d3\'ce\'c4\'bc\'fe\'b5\'b1\'d6\'d0\'bc\'d3\'d4\'d8
\f1 .
\f12 \cf45 \strokec45 \

\f1 \'a0\'a0\'a0\cf47 \strokec47 NSArray\cf45 \strokec45 *dataArray = [\cf47 \strokec47 NSArray\cf48 \strokec48 arrayWithContentsOfFile\cf45 \strokec45 :filePathName];
\f12 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 \
\
\
}