{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset134 PingFangSC-Regular;\f1\fswiss\fcharset0 ArialMT;\f2\fmodern\fcharset0 Courier;
\f3\fswiss\fcharset0 Helvetica;\f4\fnil\fcharset0 Menlo-Regular;\f5\fnil\fcharset0 Monaco;
\f6\fnil\fcharset0 HelveticaNeue;\f7\fnil\fcharset0 Verdana;\f8\fmodern\fcharset0 CourierNewPSMT;
\f9\fnil\fcharset0 Tahoma;\f10\fmodern\fcharset0 CourierNewPS-BoldMT;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red255\green255\blue255;\red65\green204\blue69;
\red0\green0\blue0;\red20\green159\blue255;\red211\green24\blue149;\red252\green44\blue56;\red120\green109\blue255;
\red35\green255\blue131;\red228\green124\blue72;\red0\green0\blue0;\red170\green13\blue145;\red92\green38\blue153;
\red46\green13\blue110;\red100\green56\blue32;\red0\green116\blue0;\red28\green0\blue207;\red63\green110\blue116;
\red11\green96\blue192;\red27\green29\blue31;\red36\green38\blue41;\red235\green236\blue237;\red37\green127\blue159;
\red104\green26\blue29;\red13\green0\blue129;\red249\green249\blue249;\red106\green0\blue67;\red0\green0\blue255;
\red15\green114\blue1;\red196\green26\blue22;\red255\green255\blue255;\red74\green74\blue74;\red67\green67\blue67;
\red246\green246\blue246;\red210\green0\blue5;\red38\green38\blue38;\red35\green35\blue35;\red115\green0\blue2;
\red109\green109\blue109;\red0\green0\blue117;\red82\green0\blue83;\red11\green84\blue83;\red242\green242\blue242;
\red107\green0\blue1;\red15\green112\blue1;\red107\green0\blue109;\red38\green71\blue75;\red65\green65\blue65;
\red53\green53\blue53;\red94\green224\blue89;\red159\green159\blue159;\red10\green82\blue135;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\csgray\c100000;\cssrgb\c29412\c81961\c34118;
\cssrgb\c0\c0\c0;\cssrgb\c0\c69412\c100000;\cssrgb\c87059\c21961\c65098;\cssrgb\c100000\c27451\c27843;\cssrgb\c54510\c52941\c100000;
\cssrgb\c3137\c98039\c58431;\cssrgb\c92157\c56471\c35294;\csgenericrgb\c0\c0\c0;\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c35900\c14900\c60100;
\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c0\c45600\c0;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c24700\c43100\c45600;
\cssrgb\c0\c46667\c80000;\cssrgb\c14118\c15294\c16078;\cssrgb\c18824\c20000\c21176;\cssrgb\c93725\c94118\c94510;\cssrgb\c16863\c56863\c68627;
\cssrgb\c49020\c15294\c15294;\cssrgb\c6275\c6275\c58039;\cssrgb\c98039\c98039\c98039;\cssrgb\c49804\c0\c33333;\cssrgb\c0\c0\c100000;
\cssrgb\c0\c50980\c0;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c100000\c100000\c100000;\cssrgb\c36078\c36078\c36078;\cssrgb\c33333\c33333\c33333;
\cssrgb\c97255\c97255\c97255;\cssrgb\c86667\c0\c0;\cssrgb\c20000\c20000\c20000;\cssrgb\c18431\c18431\c18431;\cssrgb\c53333\c0\c0;
\cssrgb\c50196\c50196\c50196\c4706;\cssrgb\c0\c0\c53333;\cssrgb\c40000\c0\c40000;\cssrgb\c0\c40000\c40000;\cssrgb\c96078\c96078\c96078;
\cssrgb\c50196\c0\c0;\cssrgb\c0\c50196\c0;\cssrgb\c50196\c0\c50196;\csgenericrgb\c14900\c27800\c29400;\cssrgb\c32157\c32157\c32157;
\cssrgb\c27059\c27059\c27059;\cssrgb\c42353\c88627\c42353;\cssrgb\c68627\c68627\c68627;\cssrgb\c0\c40000\c60000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf0 \cb2 \expnd0\expndtw0\kerning0
\'b5\'b1
\f1  label
\f0 \'cf\'eb\'d2\'aa\'bf\'ed\'b6\'c8\'d7\'d4\'ca\'ca\'d3\'a6\'ca\'b1
\f1  
\f0 \'bc\'d3\'c9\'cf\'cf\'c2\'c3\'e6\'b5\'c4\'bb\'b0
\f1  \cb3 \
\cb2 \'93Content Compression Resistance\'94
\f0 \'ba\'cd
\f1 \'93Content Hugging\'94\cb3 \
\cb2 1.
\f0 \'bf\'ed\'b6\'c8\'b2\'bb\'b9\'bb\'ca\'b1
\f1 \cb3 \
\pard\pardeftab720\partightenfactor0

\f2 \cf0 \cb2 [_label1 setContentCompressionResistancePriority:UILayoutPriorityRequired\
                                         forAxis:UILayoutConstraintAxisHorizontal];\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 2.
\f0 \'bf\'ed\'b6\'c8\'b9\'bb\'ca\'b1
\f1 \cb3 \
\pard\pardeftab720\partightenfactor0

\f2 \cf0 \cb2 [label setContentHuggingPriority:UILayoutPriorityRequired forAxis:UILayoutConstraintAxisHorizontal];\
\pard\pardeftab720\partightenfactor0

\f3\fs36 \cf4 \cb5 //
\f0 \'cf\'d4\'ca\'be\'b6\'e0\'d0\'d0\'a3\'ac\'d7\'d4\'ca\'ca\'d3\'a6\'b8\'df\'b6\'c8
\f3\fs28 \
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 \'a0 \'a0 \cf6 UILabel\cf2  *label3 = [[\cf6 UILabelalloc\cf2 ] \cf6 initWithFrame\cf2 :\cf6 CGRectZero\cf2 ];
\fs28 \cf6 \

\fs36 \cf2 \'a0 \'a0 [\cf7 self\cf2 .\cf6 viewaddSubview\cf2 :label3];
\fs28 \

\fs36 \'a0 \'a0 label3.\cf6 backgroundColor\cf2  =[\cf6 UIColorredColor\cf2 ];
\fs28 \cf6 \

\fs36 \cf2 \'a0 \'a0 label3.\cf6 text\cf2  =\cf8 @"
\f0 \'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1
\f3 "\cf2 ;
\fs28 \cf8 \

\fs36 \cf2 \'a0 \'a0 label3.\cf6 preferredMaxLayoutWidth\cf2  = (\cf7 self\cf2 .\cf6 view\cf2 .\cf6 frame\cf2 .\cf6 size\cf2 .\cf6 width\cf2  -\cf9 10.0\cf2  * \cf9 2\cf2 );
\fs28 \cf6 \

\fs36 \cf2 \'a0 \'a0 [label3 \cf6 setContentHuggingPriority\cf2 :\cf6 UILayoutPriorityRequiredforAxis\cf2 :\cf6 UILayoutConstraintAxisVertical\cf2 ];
\fs28 \cf6 \

\fs36 \cf2 \'a0 \'a0 label3.\cf6 numberOfLines\cf2  =\cf9 0\cf2 ;
\fs28 \

\fs36 \'a0 \'a0 [label3 \cf10 mas_makeConstraints\cf2 :^(\cf10 MASConstraintMaker\cf2  *make) \{
\fs28 \cf10 \

\fs36 \cf2 \'a0 \'a0 \'a0 \'a0 make.\cf10 left\cf2 .\cf11 mas_equalTo\cf2 (\cf9 10.0\cf2 );
\fs28 \

\fs36 \'a0 \'a0 \'a0 \'a0 make.\cf10 right\cf2 .\cf11 mas_equalTo\cf2 (-\cf9 10.0\cf2 );
\fs28 \

\fs36 \'a0 \'a0 \'a0 \'a0 make.\cf10 top\cf2 .\cf11 mas_equalTo\cf2 (\cf9 100.0\cf2 );
\fs28 \

\fs36 \'a0 \'a0 \}];\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f4\fs26 \cf12 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 - (\cf13 \cb3 void\cf12 \cb3 )rn_addChildViewController:(\cf14 \cb3 UIViewController\cf12 \cb3  *)controller \{\
    [controller \cf15 \cb3 beginAppearanceTransition\cf12 \cb3 :\cf13 \cb3 YES\cf12 \cb3  \cf15 \cb3 animated\cf12 \cb3 :\cf13 \cb3 NO\cf12 \cb3 ];\
    [controller \cf15 \cb3 willMoveToParentViewController\cf12 \cb3 :\cf13 \cb3 self\cf12 \cb3 ];\
    [\cf13 \cb3 self\cf12 \cb3  \cf15 \cb3 addChildViewController\cf12 \cb3 :controller];\
    [\cf13 \cb3 self\cf12 \cb3 .\cf14 \cb3 view\cf12 \cb3  \cf15 \cb3 addSubview\cf12 \cb3 :controller.\cf14 \cb3 view\cf12 \cb3 ];\
    [controller \cf15 \cb3 didMoveToParentViewController\cf12 \cb3 :controller];\
    [controller \cf15 \cb3 endAppearanceTransition\cf12 \cb3 ];\
\}\
- (\cf13 \cb3 void\cf12 \cb3 )rn_removeChildViewController:(\cf14 \cb3 UIViewController\cf12 \cb3  *)controller \{\
    \cf13 \cb3 if\cf12 \cb3  ([\cf13 \cb3 self\cf12 \cb3 .\cf14 \cb3 childViewControllers\cf12 \cb3  \cf15 \cb3 containsObject\cf12 \cb3 :controller]) \{\
        [controller \cf15 \cb3 beginAppearanceTransition\cf12 \cb3 :\cf13 \cb3 NO\cf12 \cb3  \cf15 \cb3 animated\cf12 \cb3 :\cf13 \cb3 NO\cf12 \cb3 ];\
        [controller \cf15 \cb3 willMoveToParentViewController\cf12 \cb3 :\cf13 \cb3 nil\cf12 \cb3 ];\
        [controller.\cf14 \cb3 view\cf12 \cb3  \cf15 \cb3 removeFromSuperview\cf12 \cb3 ];\
        [controller \cf15 \cb3 removeFromParentViewController\cf12 \cb3 ];\
        [controller \cf15 \cb3 didMoveToParentViewController\cf12 \cb3 :\cf13 \cb3 nil\cf12 \cb3 ];\
        [controller \cf15 \cb3 endAppearanceTransition\cf12 \cb3 ];\
    \}\
\}\
\
- (\cf13 \cb3 void\cf12 \cb3 ) flipFromViewController:(\cf14 \cb3 UIViewController\cf12 \cb3 *) fromController toViewController:(\cf14 \cb3 UIViewController\cf12 \cb3 *) toController  withDirection:(\cf14 \cb3 UIViewAnimationOptions\cf12 \cb3 ) direction andDelay:(\cf13 \cb3 double\cf12 \cb3 ) delay\
\{\
    \cf14 \cb3 dispatch_time_t\cf12 \cb3  popTime = \cf15 \cb3 dispatch_time\cf12 \cb3 (\cf16 \cb3 DISPATCH_TIME_NOW\cf12 \cb3 , delay * \cf16 \cb3 NSEC_PER_SEC\cf12 \cb3 );\
\
    \cf15 \cb3 dispatch_after\cf12 \cb3 (popTime, \cf15 \cb3 dispatch_get_main_queue\cf12 \cb3 (), ^(\cf13 \cb3 void\cf12 \cb3 )\{\
        \
        toController.\cf14 \cb3 view\cf12 \cb3 .\cf14 \cb3 frame\cf12 \cb3  = fromController.\cf14 \cb3 view\cf12 \cb3 .\cf14 \cb3 bounds\cf12 \cb3 ;                           \cf17 \cb3 //  1\cf12 \cb3 \
        [\cf13 \cb3 self\cf12 \cb3  \cf15 \cb3 addChildViewController\cf12 \cb3 :toController];                                     \cf17 \cb3 //  2\cf12 \cb3 \
        [fromController \cf15 \cb3 willMoveToParentViewController\cf12 \cb3 :\cf13 \cb3 nil\cf12 \cb3 ];                            \cf17 \cb3 //  3\cf12 \cb3 \
        \
        [\cf13 \cb3 self\cf12 \cb3  \cf15 \cb3 transitionFromViewController\cf12 \cb3 :fromController\
                          \cf15 \cb3 toViewController\cf12 \cb3 :toController\
                                  \cf15 \cb3 duration\cf12 \cb3 :\cf18 \cb3 0.2\cf12 \cb3 \
                                   \cf15 \cb3 options\cf12 \cb3 :direction | \cf15 \cb3 UIViewAnimationOptionCurveEaseIn\cf12 \cb3 \
                                \cf15 \cb3 animations\cf12 \cb3 :\cf13 \cb3 nil\cf12 \cb3 \
                                \cf15 \cb3 completion\cf12 \cb3 :^(\cf13 \cb3 BOOL\cf12 \cb3  finished) \{\
                                    \
                                    [toController \cf15 \cb3 didMoveToParentViewController\cf12 \cb3 :\cf13 \cb3 self\cf12 \cb3 ];  \cf17 \cb3 //  4\cf12 \cb3 \
                                    [fromController \cf15 \cb3 removeFromParentViewController\cf12 \cb3 ];    \cf17 \cb3 //  5\cf12 \cb3 \
                                    [\cf19 \cb3 infoButton\cf12 \cb3  \cf15 \cb3 setEnabled\cf12 \cb3 :\cf13 \cb3 YES\cf12 \cb3 ];\
                                \}];\
    \});\
\}\
\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth920\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr300 \gaph\cellx4320
\clvertalt \clshdrawnil \clwWidth13200\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0

\f1\fs2 \cf20 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0

\fs30 \cf21 \cb2 @warrenm Sorry to say that framesetter method didn't work for me.\cb3 \
\cb2 I got this.This function can help us to determine the frame size needed for a string range of an NSAttributedString in iphone/Ipad SDK for a given Width :\cb3 \
\cb2 It can be used for a dynamic height of UITableView Cells\cb3 \
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f3\fs26 \cf22 \cb23 - (\cf24 CGSize\cf22 )frameSizeForAttributedString:(\cf24 NSAttributedString\cf22  *)attributedString\
\{\
    \cf24 CTTypesetterRef\cf22  typesetter = \cf24 CTTypesetterCreateWithAttributedString\cf22 ((\cf24 CFAttributedStringRef\cf22 )attributedString);\
    \cf24 CGFloat\cf22  width = YOUR_FIXED_WIDTH;\
\
    \cf24 CFIndex\cf22  offset = \cf25 0\cf22 , length;\
    \cf24 CGFloat\cf22  y = \cf25 0\cf22 ;\
    \cf26 do\cf22  \{\
        length = \cf24 CTTypesetterSuggestLineBreak\cf22 (typesetter, offset, width);\
        \cf24 CTLineRef\cf22  line = \cf24 CTTypesetterCreateLine\cf22 (typesetter, \cf24 CFRangeMake\cf22 (offset, length));\
\
        \cf24 CGFloat\cf22  ascent, descent, leading;\
        \cf24 CTLineGetTypographicBounds\cf22 (line, &ascent, &descent, &leading);\
\
        \cf24 CFRelease\cf22 (line);\
\
        offset += length;\
        y += ascent + descent + leading;\
    \} \cf26 while\cf22  (offset < [attributedString length]);\
\
    \cf24 CFRelease\cf22 (typesetter);\
\
    \cf26 return\cf22  \cf24 CGSizeMake\cf22 (width, ceil(y));\
\}\cell \lastrow\row
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f4 \cf12 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf13 \cb3 self\cf12 \cb3 .\cf19 \cb3 searchController\cf12 \cb3  = [[\cf14 \cb3 UISearchDisplayController\cf12 \cb3  \cf15 \cb3 alloc\cf12 \cb3 ] \cf15 \cb3 initWithSearchBar\cf12 \cb3 :\cf13 \cb3 self\cf12 \cb3 .\cf19 \cb3 searchBar\cf12 \cb3  \cf15 \cb3 contentsController\cf12 \cb3 :\cf13 \cb3 self\cf12 \cb3 ];\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f5\fs24 \cf24 \cb27 \CocoaLigature1 {\listtext	1	}\expnd0\expndtw0\kerning0
-\'a0(\cf28 void\cf24 )\'a0enumerateFonts\{\'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\cf28 for\cf24 \'a0(NSString\'a0*familyName\'a0in\'a0[UIFont\'a0familyNames])\{\'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0NSLog(@\cf29 "Font\'a0Family\'a0=\'a0%@"\cf24 ,\'a0familyName);\cf30 //
\f0 \'d7\'d6\'cc\'e5\'d7\'e5\'bf\'c6
\f5 \cf24 \'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf28 for\cf24 \'a0(NSString\'a0*fontName\'a0in\'a0[UIFont\'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0fontNamesForFamilyName:familyName])\{\'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	6	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0NSLog(@\cf29 "\\t%@"\cf24 ,\'a0fontName);\cf30 //
\f0 \'d7\'d6\'cc\'e5\'c3\'fb
\f5 \cf24 \'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	7	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	8	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\}\'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	9	}\expnd0\expndtw0\kerning0
\}\'a0
\f4\fs26 \cf12 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf12 \cb3 \
\
stringRect = [string \cf15 \cb3 boundingRectWithSize\cf12 \cb3 :constraintSize\
                                              \cf15 \cb3 options\cf12 \cb3 :(\cf14 \cb3 NSStringDrawingOptions\cf12 \cb3 )(\cf15 \cb3 NSStringDrawingUsesFontLeading\cf12 \cb3 |\cf15 \cb3 NSStringDrawingTruncatesLastVisibleLine\cf12 \cb3 |\cf15 \cb3 NSStringDrawingUsesLineFragmentOrigin\cf12 \cb3 )\
                                           \cf15 \cb3 attributes\cf12 \cb3 :\cf18 \cb3 @\{\cf14 NSFontAttributeName\cf12 \cb3 : \cf13 \cb3 self\cf12 \cb3 .\cf19 \cb3 statusLabel\cf12 \cb3 .\cf14 \cb3 font\cf18 \}\cf12 \cb3 \
                                              \cf15 \cb3 context\cf12 \cb3 :\cf13 \cb3 NULL\cf12 \cb3 ];\
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf14 \cb3 NSMutableAttributedString\cf12 \cb3  *selectedAttrituteTitle = [[\cf14 \cb3 NSMutableAttributedString\cf12 \cb3  \cf15 \cb3 alloc\cf12 \cb3 ] \cf15 \cb3 initWithString\cf12 \cb3 :[\cf14 \cb3 NSString\cf12 \cb3  \cf15 \cb3 stringWithFormat\cf12 \cb3 :\cf31 \cb3 @"%@"\cf12 \cb3 ,btnTitle]];\
    [selectedAttrituteTitle \cf15 \cb3 setAttributes\cf12 \cb3 :\cf18 \cb3 @\{\cf14 NSForegroundColorAttributeName\cf12 \cb3  : [\cf14 \cb3 UIColor\cf12 \cb3  \cf15 \cb3 blackColor\cf12 \cb3 ], \cf14 \cb3 NSFontAttributeName\cf12 \cb3  : \cf16 \cb3 DDPingFangSCMediumFONT\cf12 \cb3 (\cf18 \cb3 12\cf12 \cb3 )\cf18 \cb3 \}\cf12 \cb3  \cf15 \cb3 range\cf12 \cb3 :\cf15 \cb3 NSMakeRange\cf12 \cb3 (\cf18 \cb3 0\cf12 \cb3 , attrituteTitle.\cf14 \cb3 length\cf12 \cb3 )];\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf14 \cb32 \CocoaLigature1 NSMutableAttributedString\cf12  *contentAttributeStr = [[\cf14 NSMutableAttributedString\cf12  \cf15 alloc\cf12 ] \cf15 initWithString\cf12 :[\cf14 NSString\cf12  \cf15 stringWithFormat\cf12 :\cf31 @"%@"\cf12 ,text]];
\f3\fs24 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f4\fs28 \cf12     [contentAttributeStr \cf15 setAttributes\cf12 :\cf18 @\{\cf14 NSForegroundColorAttributeName\cf12  : \cf16 UIColorHex\cf12 (\cf18 0xf1cbb2\cf12 ), \cf14 NSFontAttributeName\cf12  : \cf16 DDFONT\cf12 (\cf18 13\cf12 )\cf18 \}\cf12  \cf15 range\cf12 :\cf15 NSMakeRange\cf12 (\cf18 0\cf12 , contentAttributeStr.\cf14 length\cf12 )];
\f3\fs24 \cf0 \

\f4\fs28 \cf12     
\f3\fs24 \cf0 \

\f4\fs28 \cf12     if (model.\cf19 balkNickName\cf12 .\cf14 length\cf12 ) \{
\f3\fs24 \cf0 \

\f4\fs28 \cf12         [contentAttributeStr \cf15 appendAttributedString\cf12 :[[\cf14 NSAttributedString\cf12  \cf15 alloc\cf12 ] \cf15 initWithString\cf12 :\cf31 @" 
\f0 \cf31 \cb32 \'bb\'d8\'b8\'b4
\f4 \cf31 \cb32  "\cf12 ]];
\f3\fs24 \cf0 \

\f4\fs28 \cf12         
\f3\fs24 \cf0 \

\f4\fs28 \cf12         \cf14 NSMutableAttributedString\cf12  *contentAppendingStr = [[\cf14 NSMutableAttributedString\cf12  \cf15 alloc\cf12 ] \cf15 initWithString\cf12 :[\cf14 NSString\cf12  \cf15 stringWithFormat\cf12 :\cf31 @"%@"\cf12 ,model.\cf19 balkNickName\cf12 ]];
\f3\fs24 \cf0 \

\f4\fs28 \cf12         [contentAppendingStr \cf15 setAttributes\cf12 :\cf18 @\{\cf14 NSForegroundColorAttributeName\cf12  : \cf16 UIColorHex\cf12 (\cf18 0xf1cbb2\cf12 ), \cf14 NSFontAttributeName\cf12  : \cf16 DDFONT\cf12 (\cf18 13\cf12 )\cf18 \}\cf12  \cf15 range\cf12 :\cf15 NSMakeRange\cf12 (\cf18 0\cf12 , contentAppendingStr.\cf14 length\cf12 )];
\f3\fs24 \cf0 \

\f4\fs28 \cf12         
\f3\fs24 \cf0 \

\f4\fs28 \cf12         [contentAttributeStr \cf15 appendAttributedString\cf12 :contentAppendingStr];
\f3\fs24 \cf0 \

\f4\fs28 \cf12     \}
\f3\fs24 \cf0 \

\f4\fs28 \cf12     
\f3\fs24 \cf0 \

\f4\fs28 \cf12     \cf14 NSMutableAttributedString\cf12  *contentAppendingStr = [[\cf14 NSMutableAttributedString\cf12  \cf15 alloc\cf12 ] \cf15 initWithString\cf12 :[\cf14 NSString\cf12  \cf15 stringWithFormat\cf12 :\cf31 @"
\f0 \cf31 \cb32 \'a3\'ba
\f4 \cf31 \cb32 %@"\cf12 , model.\cf19 balkContent\cf12 ]];
\f3\fs24 \cf0 \

\f4\fs28 \cf12     [contentAttributeStr \cf15 appendAttributedString\cf12 :contentAppendingStr];\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs26 \cf12 \cb3 \CocoaLigature0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f3\b\fs24 \cf29 \cb2 \CocoaLigature1 {\listtext	1	}\expnd0\expndtw0\kerning0
UIFont
\b0 \cf33 \'a0*font\'a0=\'a0xxxx\'a0\cf30 //\'a0
\f0 \'d7\'d6\'cc\'e5
\f3 \cf33 \'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf34 \cb35 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0CGFloat\'a0offset\'a0=\'a0-0.7;\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf33 \cb2 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\b \cf29 NSMutableAttributedString
\b0 \cf33 \'a0*attributedString\'a0=\'a0[[NSMutableAttributedString\cf36 \'a0alloc\cf33 ]\cf36 \'a0initWithString\cf33 :placeHolder\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf34 \cb35 \kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf36 \'a0attributes\cf34 :@\{\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf33 \cb2 \kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf36 \'a0NSForegroundColorAttributeName\cf33 :\'a0
\f0 \'d1\'d5\'c9\'ab\'d6\'b5
\f3 ,\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf34 \cb35 \kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0NSFontAttributeName\'a0:\'a0font,\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf33 \cb2 \kerning1\expnd0\expndtw0 {\listtext	6	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0NSBaselineOffsetAttributeName\'a0:\'a0@(offset),\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf34 \cb35 \kerning1\expnd0\expndtw0 {\listtext	7	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}];\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf33 \cb2 \kerning1\expnd0\expndtw0 {\listtext	8	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf34 \cb35 \kerning1\expnd0\expndtw0 {\listtext	9	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf33 \cb2 \kerning1\expnd0\expndtw0 {\listtext	10	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0[[UITextField\cf36 \'a0appearanceWhenContainedIn\cf33 :[UISearchBar\cf36 \'a0class\cf33 ],
\b \cf29 \'a0nil
\b0 \cf36 \'a0nil\cf33 ]\cf36 \'a0setAttributedPlaceholder\cf33 :attributedString];\'a0
\f1\fs28 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\
\
\
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f4\fs26 \cf12 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 - (\cf14 \cb3 CAShapeLayer\cf12 \cb3  *)addLineOriginPoint:(\cf14 \cb3 CGPoint\cf12 \cb3 )p0 toPoint:(\cf14 \cb3 CGPoint\cf12 \cb3 )p1 color:(\cf14 \cb3 UIColor\cf12 \cb3  *)color borderWidth:(\cf14 \cb3 CGFloat\cf12 \cb3 )borderWidth \{\
    \cf17 \cb3 /// 
\f0 \'cf\'df\'b5\'c4\'c2\'b7\'be\'b6
\f4 \cf12 \cb3 \
    \cf14 \cb3 UIBezierPath\cf12 \cb3  * bezierPath = [\cf14 \cb3 UIBezierPath\cf12 \cb3  \cf15 \cb3 bezierPath\cf12 \cb3 ];\
    [bezierPath \cf15 \cb3 moveToPoint\cf12 \cb3 :p0];\
    [bezierPath \cf15 \cb3 addLineToPoint\cf12 \cb3 :p1];\
    \
    \cf14 \cb3 CAShapeLayer\cf12 \cb3  * shapeLayer = [\cf14 \cb3 CAShapeLayer\cf12 \cb3  \cf15 \cb3 layer\cf12 \cb3 ];\
    shapeLayer.\cf14 \cb3 strokeColor\cf12 \cb3  = color.\cf14 \cb3 CGColor\cf12 \cb3 ;\
    shapeLayer.\cf14 \cb3 fillColor\cf12 \cb3   = [\cf14 \cb3 UIColor\cf12 \cb3  \cf15 \cb3 clearColor\cf12 \cb3 ].\cf14 \cb3 CGColor\cf12 \cb3 ;\
    \cf17 \cb3 /// 
\f0 \'cc\'ed\'bc\'d3\'c2\'b7\'be\'b6
\f4 \cf12 \cb3 \
    shapeLayer.\cf14 \cb3 path\cf12 \cb3  = bezierPath.\cf14 \cb3 CGPath\cf12 \cb3 ;\
    \cf17 \cb3 /// 
\f0 \'cf\'df\'bf\'ed\'b6\'c8
\f4 \cf12 \cb3 \
    shapeLayer.\cf14 \cb3 lineWidth\cf12 \cb3  = borderWidth;\
    \cf13 \cb3 return\cf12 \cb3  shapeLayer;\
\}
\f1\fs28 \cf0 \cb2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0

\f0 \cf0 \
\
\
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f4\fs26 \cf17 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 //- (void)downLoadMusicWithModel:(WWMusicModel *)model Progress:(void (^)(NSProgress *))progressBlock Success:(SuccessStringBlock)success Fail:(FailBlock)fail\{\cf12 \cb3 \
\cf17 \cb3 //    \cf12 \cb3 \
\cf17 \cb3 //    NSString *url = model.music_desc;\cf12 \cb3 \
\cf17 \cb3 //    NSLog(@"
\f0 \'cf\'c2\'d4\'d8
\f4 mp3 = %@",url);\cf12 \cb3 \
\cf17 \cb3 //    \cf12 \cb3 \
\cf17 \cb3 //    NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];\cf12 \cb3 \
\cf17 \cb3 //    AFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];\cf12 \cb3 \
\cf17 \cb3 //    \cf12 \cb3 \
\cf17 \cb3 //    NSURL *URL = [NSURL URLWithString:url];\cf12 \cb3 \
\cf17 \cb3 //    NSURLRequest *request = [NSURLRequest requestWithURL:URL];\cf12 \cb3 \
\cf17 \cb3 //    NSURLSessionDownloadTask *downloadTask = [manager downloadTaskWithRequest:request progress:^(NSProgress * _Nonnull downloadProgress) \{\cf12 \cb3 \
\cf17 \cb3 //        progressBlock(downloadProgress);\cf12 \cb3 \
\cf17 \cb3 //    \} destination:^NSURL * _Nonnull(NSURL * _Nonnull targetPath, NSURLResponse * _Nonnull response) \{\cf12 \cb3 \
\cf17 \cb3 //        NSURL *documentsDirectoryURL = [[NSFileManager defaultManager] URLForDirectory:NSDocumentDirectory inDomain:NSUserDomainMask appropriateForURL:nil create:NO error:nil];\cf12 \cb3 \
\cf17 \cb3 //        NSURL *returnURL = [documentsDirectoryURL URLByAppendingPathComponent:[response suggestedFilename]];\cf12 \cb3 \
\cf17 \cb3 //        return returnURL;\cf12 \cb3 \
\cf17 \cb3 //    \} completionHandler:^(NSURLResponse * _Nonnull response, NSURL * _Nullable filePath, NSError * _Nullable error) \{\cf12 \cb3 \
\cf17 \cb3 //        if (!error) \{\cf12 \cb3 \
\cf17 \cb3 //            NSLog(@"F
\f0 \'ce\'c4\'bc\'fe\'cf\'c2\'d4\'d8\'b5\'bd
\f4 : %@", filePath);\cf12 \cb3 \
\cf17 \cb3 //            NSString *filePathStr = [NSString stringWithFormat:@"%@",filePath];\cf12 \cb3 \
\cf17 \cb3 //            filePathStr = [filePathStr substringWithRange:NSMakeRange(8, filePathStr.length - 8)];\cf12 \cb3 \
\cf17 \cb3 //            [[MusicCacheManager sharedManager] saveMusicArrayWithModel:model];\cf12 \cb3 \
\cf17 \cb3 //            \cf12 \cb3 \
\cf17 \cb3 //            success(filePathStr);\cf12 \cb3 \
\cf17 \cb3 //        \}else\{\cf12 \cb3 \
\cf17 \cb3 //            fail(error.localizedDescription);\cf12 \cb3 \
\cf17 \cb3 //        \}\cf12 \cb3 \
\cf17 \cb3 //    \}];\cf12 \cb3 \
\cf17 \cb3 //    [downloadTask resume];\cf12 \cb3 \
\cf17 \cb3 //\}\
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \cb2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f4\fs26 \cf17 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 //    UIImage *backButtonImage = [UIImage imageNamed:@"fabugushi_back_btn_red"];\cf12 \cb3 \
\cf17 \cb3 //    [self.backButton setImage:[backButtonImage imageWithRenderingMode:(UIImageRenderingModeAlwaysTemplate)] forState:UIControlStateNormal];\cf12 \cb3 \
\cf17 \cb3 //    [self.backButton setTintColor:UIColorHex(0x7269ff)];\
\
\cf14 NSString\cf12 \cb3  *script = [\cf14 \cb3 NSString\cf12 \cb3  \cf15 \cb3 stringWithFormat\cf12 \cb3 :\
                        \cf31 \cb3 @"var script = document.createElement('script');"\cf12 \cb3 \
                        \cf31 \cb3 "script.type = 'text/javascript';"\cf12 \cb3 \
                        \cf31 \cb3 "script.text = \\"function ResizeImages() \{ "\cf12 \cb3 \
                        \cf31 \cb3 "var img;"\cf12 \cb3 \
                        \cf31 \cb3 "var maxwidth=%f;"\cf12 \cb3 \
                        \cf31 \cb3 "for(i=0;i <document.images.length;i++)\{"\cf12 \cb3 \
                        \cf31 \cb3 "img = document.images[i];"\cf12 \cb3 \
                        \cf31 \cb3 "if(img.width > maxwidth)\{"\cf12 \cb3 \
                        \cf31 \cb3 "img.width = maxwidth;"\cf12 \cb3 \
                        \cf31 \cb3 "\}"\cf12 \cb3 \
                        \cf31 \cb3 "\}"\cf12 \cb3 \
                        \cf31 \cb3 "\}\\";"\cf12 \cb3 \
                        \cf31 \cb3 "document.getElementsByTagName('head')[0].appendChild(script);"\cf12 \cb3 , \cf16 \cb3 SCREEN_WIDTH\cf12 \cb3  - \cf18 \cb3 20\cf12 \cb3 ];\
    [webView \cf15 \cb3 stringByEvaluatingJavaScriptFromString\cf12 \cb3 : script];\
    [webView \cf15 \cb3 stringByEvaluatingJavaScriptFromString\cf12 \cb3 :\cf31 \cb3 @"ResizeImages();"\cf12 \cb3 ];\
\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs68 \cf37 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'ca\'b9\'d3\'c3
\f6 WebViewJavascriptBridge
\f0 \'ca\'b5\'cf\'d6
\f6 OC
\f0 \'d3\'eb
\f6 JS
\f0 \'bd\'bb\'bb\'a5
\f4\b0\fs26 \cf12 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\partightenfactor0

\f6\b\fs32 \cf0 \cb1 \CocoaLigature1 JS
\f0 \'b5\'f7\'d3\'c3
\f6 OC
\b0 \cf38 \expnd0\expndtw0\kerning0
\
/***\
      /@param registerHandler 
\f0 \'d2\'aa\'d7\'a2\'b2\'e1\'b5\'c4\'ca\'c2\'bc\'fe\'c3\'fb\'b3\'c6
\f6 (
\f0 \'d5\'e2\'c0\'ef\'ce\'d2\'c3\'c7\'ce\'aa
\f6 loginFunc)\
      /@param handel 
\f0 \'bb\'d8\'b5\'f7
\f6 block
\f0 \'ba\'af\'ca\'fd
\f6  
\f0 \'b5\'b1\'ba\'f3\'cc\'a8\'b4\'a5\'b7\'a2\'d5\'e2\'b8\'f6\'ca\'c2\'bc\'fe\'b5\'c4\'ca\'b1\'ba\'f2\'bb\'e1\'d6\'b4\'d0\'d0
\f6 block
\f0 \'c0\'ef\'c3\'e6\'b5\'c4\'b4\'fa\'c2\'eb
\f6 \
***/\
     [_bridge registerHandler:@"loginFunc" handler:^(id data, WVJBResponseCallback responseCallback) \{\
     // data 
\f0 \'ba\'f3\'cc\'a8\'b4\'ab\'b9\'fd\'c0\'b4\'b5\'c4\'b2\'ce\'ca\'fd
\f6 ,
\f0 \'c0\'fd\'c8\'e7\'d3\'c3\'bb\'a7\'c3\'fb\'a1\'a2\'c3\'dc\'c2\'eb\'b5\'c8
\f6 \
                NSLog(@"testObjcCallback called: %@", data);\
     //
\f0 \'be\'df\'cc\'e5\'b5\'c4\'b5\'c7\'c2\'bc\'ca\'c2\'bc\'fe\'b5\'c4\'ca\'b5\'cf\'d6
\f6 ,
\f0 \'d5\'e2\'c0\'ef\'b5\'c4
\f6 login
\f0 \'b4\'fa\'b1\'ed\'ca\'b5\'cf\'d6\'b5\'c7\'c2\'bc\'b9\'a6\'c4\'dc\'b5\'c4\'d2\'bb\'b8\'f6
\f6 OC
\f0 \'ba\'af\'ca\'fd\'a1\'a3
\f6 \
                [self login];   \
     // responseCallback 
\f0 \'b8\'f8\'ba\'f3\'cc\'a8\'b5\'c4\'bb\'d8\'b8\'b4
\f6     \
                responseCallback(@"Response from testObjcCallback");\
      \}];\

\b \cf0 \kerning1\expnd0\expndtw0 OC
\f0 \'b5\'f7\'d3\'c3
\f6 JS
\b0 \cf38 \expnd0\expndtw0\kerning0
\
//
\f0 \'b2\'bb\'d0\'e8\'d2\'aa\'b4\'ab\'b2\'ce\'ca\'fd
\f6 ,
\f0 \'b2\'bb\'d0\'e8\'d2\'aa\'ba\'f3\'cc\'a8\'b7\'b5\'bb\'d8\'d6\'b4\'d0\'d0\'bd\'e1\'b9\'fb
\f6 \
      [_bridge callHandler:@"registerFunc"];\
//
\f0 \'d0\'e8\'d2\'aa\'b4\'ab\'b2\'ce\'ca\'fd
\f6 ,
\f0 \'b2\'bb\'d0\'e8\'d2\'aa\'b4\'d3\'ba\'f3\'cc\'a8\'b7\'b5\'bb\'d8\'d6\'b4\'d0\'d0\'bd\'e1\'b9\'fb
\f6 \
/***\
       @param callHandler 
\f0 \'c9\'cc\'b6\'a8\'b5\'c4\'ca\'c2\'bc\'fe\'c3\'fb\'b3\'c6
\f6 ,
\f0 \'d3\'c3\'c0\'b4\'b5\'f7\'d3\'c3\'cd\'f8\'d2\'b3\'c0\'ef\'c3\'e6\'cf\'e0\'d3\'a6\'b5\'c4\'ca\'c2\'bc\'fe\'ca\'b5\'cf\'d6
\f6 \
       @param data id
\f0 \'c0\'e0\'d0\'cd
\f6 ,
\f0 \'cf\'e0\'b5\'b1\'d3\'da\'ce\'d2\'c3\'c7\'ba\'af\'ca\'fd\'d6\'d0\'b5\'c4\'b2\'ce\'ca\'fd
\f6 ,
\f0 \'cf\'f2\'cd\'f8\'d2\'b3\'b4\'ab\'b5\'dd\'ba\'af\'ca\'fd\'d6\'b4\'d0\'d0\'d0\'e8\'d2\'aa\'b5\'c4\'b2\'ce\'ca\'fd
\f6 \
***/\
     [_bridge callHandler:@"registerFunc" data:@"name"];\
    //
\f0 \'d0\'e8\'d2\'aa\'b4\'ab\'b2\'ce\'ca\'fd
\f6 ,
\f0 \'d0\'e8\'d2\'aa\'b4\'d3\'ba\'f3\'cc\'a8\'b7\'b5\'bb\'d8\'d6\'b4\'d0\'d0\'bd\'e1\'b9\'fb
\f6 \
     [_bridge callHandler:@"registerFunc" data:@"name" responseCallback:^(id responseData) \{\
\
             NSLog(@"
\f0 \'ba\'f3\'cc\'a8\'d6\'b4\'d0\'d0\'cd\'ea\'b3\'c9\'ba\'f3\'b7\'b5\'bb\'d8\'b5\'c4\'ca\'fd\'be\'dd
\f6 ");\
\
      \}];\

\f0\b \cf0 \kerning1\expnd0\expndtw0 \'b7\'a2\'cb\'cd\'cf\'fb\'cf\'a2
\f4\b0\fs26 \cf12 \cb3 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf12 //
\f0 \'b2\'bb\'d0\'e8\'d2\'aa\'ba\'f3\'cc\'a8\'b7\'b5\'bb\'d8\'d6\'b4\'d0\'d0\'bd\'e1\'b9\'fb\'bb\'f2\'ca\'fd\'be\'dd
\f4 \
      [_bridge send:@"
\f0 \'ba\'ec\'c9\'ab
\f4 "];\
//
\f0 \'d0\'e8\'d2\'aa\'ba\'f3\'cc\'a8\'b7\'b5\'bb\'d8\'d6\'b4\'d0\'d0\'bd\'e1\'b9\'fb\'bb\'f2\'ca\'fd\'be\'dd
\f4 \
      [_bridge send:@"
\f0 \'ba\'ec\'c9\'ab
\f4 " responseCallback:^(id responseData) \{\
        NSLog(@"
\f0 \'ba\'f3\'cc\'a8\'d6\'b4\'d0\'d0\'cd\'ea\'b3\'c9\'ba\'f3\'b7\'b5\'bb\'d8\'b5\'c4\'ca\'fd\'be\'dd
\f4  %@", responseData);\
      \}];\
\
\
\
- (void)webViewDidFinishLoad:(UIWebView *)webView\
\{\
//
\f0 \'b7\'bd\'b7\'a8
\f4 1 
\f0 \'ca\'b5\'bc\'ca\'ca\'b9\'d3\'c3
\f4 js
\f0 \'b7\'bd\'b7\'a8\'ca\'b5\'cf\'d6
\f4 \
CGFloat documentWidth = [[webView stringByEvaluatingJavaScriptFromString:@"document.getElementById('content').offsetWidth"] floatValue];\
CGFloat documentHeight = [[webView stringByEvaluatingJavaScriptFromString:@"document.getElementById(\\"content\\").offsetHeight;"] floatValue];\
NSLog(@"documentSize = \{%f, %f\}", documentWidth, documentHeight);\
\
[webView evaluateJavaScript:\cf31 \cb3 @"document.body.scrollHeight"\cf12 \cb3 completionHandler:^(\cf13 \cb3 id\cf12 \cb3  \cf13 \cb3 _Nullable\cf12 \cb3  result,NSError *\cf13 \cb3 _Nullable\cf12 \cb3  error) \{\
        \cf17 \cb3 //
\f0 \'bb\'f1\'c8\'a1\'d2\'b3\'c3\'e6\'b8\'df\'b6\'c8\'a3\'ac\'b2\'a2\'d6\'d8\'d6\'c3
\f4 webview
\f0 \'b5\'c4
\f4 frame\cf12 \cb3 \
        CGFloat documentHeight = [result doubleValue];\
        [UIView animateWithDuration:\cf18 \cb3 0.2\cf12 \cb3  animations:^\{\
            scr.contentSize = CGSizeMake(scrW, \cf18 \cb3 80\cf12 \cb3  + documentHeight);\
            detailWeb.frame = CGRectMake(\cf18 \cb3 0\cf12 \cb3 , \cf18 \cb3 0\cf12 \cb3 , scrW, documentHeight);\
        \}completion:^(\cf13 \cb3 BOOL\cf12 \cb3  finished) \{\
            \cf13 \cb3 if\cf12 \cb3  ((\cf13 \cb3 int\cf12 \cb3 )documentHeight != \cf18 \cb3 0\cf12 \cb3 ) \{\
                shareView.frame = CGRectMake(\cf18 \cb3 0\cf12 \cb3 , maxY(detailWeb), scrW, \cf18 \cb3 80\cf12 \cb3 );\
                [shareView createShareViewUI];\
            \}\
        \}];\
    \}];\
\
//
\f0 \'b7\'bd\'b7\'a8
\f4 2\
CGRect frame = webView.frame;\
frame.size.width = 768;\
frame.size.height = 1;\
//    webView.scrollView.scrollEnabled = NO;\
webView.frame = frame;\
frame.size.height = webView.scrollView.contentSize.height;\
NSLog(@"frame = %@", [NSValue valueWithCGRect:frame]);\
webView.frame = frame;\
\}\
\
        \cf14 \cb3 CGSize\cf12 \cb3  actualSize = [webView \cf15 \cb3 sizeThatFits\cf12 \cb3 :\cf14 \cb3 CGSizeZero\cf12 \cb3 ];\
        \cf14 \cb3 CGRect\cf12 \cb3  newFrame = webView.\cf14 \cb3 frame\cf12 \cb3 ;\
        newFrame.\cf14 \cb3 size\cf12 \cb3 .\cf14 \cb3 height\cf12 \cb3  = actualSize.\cf14 \cb3 height\cf12 \cb3 ;\
        \cf13 \cb3 self\cf12 \cb3 .\cf19 \cb3 contentWebview\cf12 \cb3 .\cf14 \cb3 frame\cf12 \cb3  = newFrame;\
        \cf13 \cb3 self\cf12 \cb3 .\cf19 \cb3 contentWebviewHeight\cf12 \cb3  = newFrame.\cf14 \cb3 size\cf12 \cb3 .\cf14 \cb3 height\cf12 \cb3 ;\
        \cf15 \cb3 NSLog\cf12 \cb3 (\cf31 \cb3 @"frame = %@"\cf12 \cb3 , [\cf14 \cb3 NSValue\cf12 \cb3  \cf15 \cb3 valueWithCGRect\cf12 \cb3 :newFrame]);\
//
\f0 \'b7\'bd\'b7\'a8
\f4 3\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf14 \cb3 NSString\cf12 \cb3  * htmlcontent = [\cf14 \cb3 NSString\cf12 \cb3  \cf15 \cb3 stringWithFormat\cf12 \cb3 :\cf31 \cb3 @"<div id=\\"webview_content_wrapper\\">%@</div>"\cf12 \cb3 , model.\cf19 \cb3 content\cf12 \cb3 ];\
    [\cf13 \cb3 self\cf12 \cb3 .\cf19 \cb3 contentWebview\cf12 \cb3  \cf15 \cb3 loadHTMLString\cf12 \cb3 :htmlcontent \cf15 \cb3 baseURL\cf12 \cb3 :\cf13 \cb3 nil\cf12 \cb3 ];\
\cf17 \cb3 //
\f0 \'bb\'f1\'c8\'a1\'d2\'b3\'c3\'e6\'b8\'df\'b6\'c8\'a3\'a8\'cf\'f1\'cb\'d8\'a3\'a9
\f4 \cf12 \cb3 \
    \cf14 \cb3 NSString\cf12 \cb3  * clientheight_str = [webView \cf15 \cb3 stringByEvaluatingJavaScriptFromString\cf12 \cb3 : \cf31 \cb3 @"document.body.offsetHeight"\cf12 \cb3 ];\
    \cf13 \cb3 float\cf12 \cb3  clientheight = [clientheight_str \cf15 \cb3 floatValue\cf12 \cb3 ];\
    \cf17 \cb3 //
\f0 \'c9\'e8\'d6\'c3\'b5\'bd
\f4 WebView
\f0 \'c9\'cf
\f4 \cf12 \cb3 \
    webView.\cf14 \cb3 frame\cf12 \cb3  = \cf15 \cb3 CGRectMake\cf12 \cb3 (\cf18 \cb3 0\cf12 \cb3 , \cf18 \cb3 0\cf12 \cb3 , webView.\cf14 \cb3 frame\cf12 \cb3 .\cf14 \cb3 size\cf12 \cb3 .\cf14 \cb3 width\cf12 \cb3 , clientheight);\
    \cf17 \cb3 //
\f0 \'bb\'f1\'c8\'a1
\f4 WebView
\f0 \'d7\'ee\'bc\'d1\'b3\'df\'b4\'e7\'a3\'a8\'b5\'e3\'a3\'a9
\f4 \cf12 \cb3 \
    \cf14 \cb3 CGSize\cf12 \cb3  frame = [webView \cf15 \cb3 sizeThatFits\cf12 \cb3 :webView.\cf14 \cb3 frame\cf12 \cb3 .\cf14 \cb3 size\cf12 \cb3 ];\
    \
    \cf14 \cb3 NSString\cf12 \cb3  * height_str= [webView \cf15 \cb3 stringByEvaluatingJavaScriptFromString\cf12 \cb3 : \cf31 \cb3 @"document.getElementById('webview_content_wrapper').offsetHeight + parseInt(window.getComputedStyle(document.getElementsByTagName('body')[0]).getPropertyValue('margin-top'))  + parseInt(window.getComputedStyle(document.getElementsByTagName('body')[0]).getPropertyValue('margin-bottom'))"\cf12 \cb3 ];\
    \cf13 \cb3 float\cf12 \cb3  height = [height_str \cf15 \cb3 floatValue\cf12 \cb3 ];\
    \cf17 \cb3 //
\f0 \'c4\'da\'c8\'dd\'ca\'b5\'bc\'ca\'b8\'df\'b6\'c8\'a3\'a8\'cf\'f1\'cb\'d8\'a3\'a9
\f4 * 
\f0 \'b5\'e3\'ba\'cd\'cf\'f1\'cb\'d8\'b5\'c4\'b1\'c8
\f4 \cf12 \cb3 \
    height = height * frame.\cf14 \cb3 height\cf12 \cb3  / clientheight;\
    \cf17 \cb3 //
\f0 \'d4\'d9\'b4\'ce\'c9\'e8\'d6\'c3
\f4 WebView
\f0 \'b8\'df\'b6\'c8\'a3\'a8\'b5\'e3\'a3\'a9
\f4 \cf12 \cb3 \
    webView.\cf14 \cb3 frame\cf12 \cb3  = \cf15 \cb3 CGRectMake\cf12 \cb3 (\cf18 \cb3 0\cf12 \cb3 , \cf18 \cb3 0\cf12 \cb3 , \cf13 \cb3 self\cf12 \cb3 .\cf14 \cb3 view\cf12 \cb3 .\cf14 \cb3 frame\cf12 \cb3 .\cf14 \cb3 size\cf12 \cb3 .\cf14 \cb3 width\cf12 \cb3 , height);\
//
\f0 \'b7\'bd\'b7\'a8
\f4 4\
\cf17 \cb3 //-(void)webViewDidFinishLoad:(UIWebView *)webView\{\cf12 \cb3 \
\cf17 \cb3 //    NSString *cssString = @"img\{max-width: 100%;-webkit-border-radius: 20px;border-radius: 20px;border: 0px solid black;\} body\{word-wrap:break-word;\}";\cf12 \cb3 \
\cf17 \cb3 //    NSString *javascriptString = @"var style = document.createElement('style'); style.innerHTML = '%@'; document.head.appendChild(style)";\cf12 \cb3 \
\cf17 \cb3 //    NSString *javascriptWithCSSString = [NSString stringWithFormat:javascriptString, cssString];\cf12 \cb3 \
\cf17 \cb3 //    [webView stringByEvaluatingJavaScriptFromString: javascriptWithCSSString];\cf12 \cb3 \
\cf17 \cb3 //    \cf12 \cb3 \
\cf17 \cb3 //    \cf12 \cb3 \
\cf17 \cb3 //    //
\f0 \'bb\'f1\'c8\'a1\'d2\'b3\'c3\'e6\'b8\'df\'b6\'c8\'a3\'a8\'cf\'f1\'cb\'d8\'a3\'a9
\f4 \cf12 \cb3 \
\cf17 \cb3 //    NSString * clientheight_str = [webView stringByEvaluatingJavaScriptFromString: @"document.body.offsetHeight"];\cf12 \cb3 \
\cf17 \cb3 //    float clientheight = [clientheight_str floatValue];\cf12 \cb3 \
\cf17 \cb3 //    //
\f0 \'c9\'e8\'d6\'c3\'b5\'bd
\f4 WebView
\f0 \'c9\'cf
\f4 \cf12 \cb3 \
\cf17 \cb3 //    webView.frame = CGRectMake(0, 0, webView.frame.size.width, clientheight);\cf12 \cb3 \
\cf17 \cb3 //    //
\f0 \'bb\'f1\'c8\'a1
\f4 WebView
\f0 \'d7\'ee\'bc\'d1\'b3\'df\'b4\'e7\'a3\'a8\'b5\'e3\'a3\'a9
\f4 \cf12 \cb3 \
\cf17 \cb3 //    CGSize frame = [webView sizeThatFits:webView.frame.size];\cf12 \cb3 \
\cf17 \cb3 //    \cf12 \cb3 \
\cf17 \cb3 //    NSString * height_str= [webView stringByEvaluatingJavaScriptFromString: @"document.getElementById('webview_content_wrapper').offsetHeight + parseInt(window.getComputedStyle(document.getElementsByTagName('body')[0]).getPropertyValue('margin-top'))  + parseInt(window.getComputedStyle(document.getElementsByTagName('body')[0]).getPropertyValue('margin-bottom'))"];\cf12 \cb3 \
\cf17 \cb3 //    float height = [height_str floatValue];\cf12 \cb3 \
\cf17 \cb3 //    //
\f0 \'c4\'da\'c8\'dd\'ca\'b5\'bc\'ca\'b8\'df\'b6\'c8\'a3\'a8\'cf\'f1\'cb\'d8\'a3\'a9
\f4 * 
\f0 \'b5\'e3\'ba\'cd\'cf\'f1\'cb\'d8\'b5\'c4\'b1\'c8
\f4 \cf12 \cb3 \
\cf17 \cb3 //    height = height * frame.height / clientheight;\cf12 \cb3 \
\cf17 \cb3 //    //
\f0 \'d4\'d9\'b4\'ce\'c9\'e8\'d6\'c3
\f4 WebView
\f0 \'b8\'df\'b6\'c8\'a3\'a8\'b5\'e3\'a3\'a9
\f4 \cf12 \cb3 \
\cf17 \cb3 //    webView.frame = CGRectMake(0, 0, self.contentWebview.frame.size.width, height);\cf12 \cb3 \
\cf17 \cb3 //    self.contentWebviewHeight = height;\cf12 \cb3 \
\cf17 \cb3 //    [self.tableView reloadData];\cf12 \cb3 \
\cf17 \cb3 //    \cf12 \cb3 \
\cf17 \cb3 //\}\cf12 \cb3 \
\
\cf17 \cb3 //- (void)webView:(WKWebView *)webView didFinishNavigation:(WKNavigation *)navigation\cf12 \cb3 \
\cf17 \cb3 //\{\cf12 \cb3 \
\cf17 \cb3 //    NSString *cssString = @"img\{max-width: 100%;-webkit-border-radius: 20px;border-radius: 20px;border: 0px solid black;\} body\{word-wrap:break-word;\}";\cf12 \cb3 \
\cf17 \cb3 //    NSString *javascriptString = @"var style = document.createElement('style'); style.innerHTML = '%@'; document.head.appendChild(style)";\cf12 \cb3 \
\cf17 \cb3 //    NSString *javascriptWithCSSString = [NSString stringWithFormat:javascriptString, cssString];\cf12 \cb3 \
\cf17 \cb3 //    [webView evaluateJavaScript:javascriptWithCSSString completionHandler:^(id _Nullable result, NSError * _Nullable error) \{\cf12 \cb3 \
\cf17 \cb3 //        [webView evaluateJavaScript:@"document.body.scrollHeight"completionHandler:^(id _Nullable result,NSError *_Nullable error) \{\cf12 \cb3 \
\cf17 \cb3 //            CGFloat documentHeight = [result doubleValue];\cf12 \cb3 \
\cf17 \cb3 //            self.contentWebviewHeight = documentHeight;\cf12 \cb3 \
\cf17 \cb3 //            [UIView animateWithDuration:0.2 animations:^\{\cf12 \cb3 \
\cf17 \cb3 //                CGRect webFrame = self.contentWebview.frame;\cf12 \cb3 \
\cf17 \cb3 //                webFrame.size.height = documentHeight;\cf12 \cb3 \
\cf17 \cb3 //                self.contentWebview.frame = webFrame;\cf12 \cb3 \
\cf17 \cb3 //            \}completion:^(BOOL finished) \{\cf12 \cb3 \
\cf17 \cb3 //                [self.tableView reloadData];\cf12 \cb3 \
\cf17 \cb3 //            \}];\cf12 \cb3 \
\cf17 \cb3 //        \}];\cf12 \cb3 \
\cf17 \cb3 //    \}];\cf12 \cb3 \
\cf17 \cb3 //\}\cf12 \cb3 \
\
-(\cf14 \cb3 UIView\cf12 \cb3  *)hitTest:(\cf14 \cb3 CGPoint\cf12 \cb3 )point withEvent:(\cf14 \cb3 UIEvent\cf12 \cb3  *)event\{\
    \
    \cf14 \cb3 UIView\cf12 \cb3  *hitView = [\cf13 \cb3 super\cf12 \cb3  \cf15 \cb3 hitTest\cf12 \cb3 :point \cf15 \cb3 withEvent\cf12 \cb3 :event];\
    \cf13 \cb3 if\cf12 \cb3 (hitView ==\cf13 \cb3 self\cf12 \cb3  && \cf15 \cb3 CGRectContainsPoint\cf12 \cb3 (\cf15 \cb3 CGRectMake\cf12 \cb3 (\cf18 \cb3 0\cf12 \cb3 , \cf18 \cb3 0\cf12 \cb3 , \cf16 \cb3 SCREEN_WIDTH\cf12 \cb3  - \cf18 \cb3 60\cf12 \cb3 , \cf13 \cb3 self\cf12 \cb3 .\cf14 \cb3 bounds\cf12 \cb3 .\cf14 \cb3 size\cf12 \cb3 .\cf14 \cb3 height\cf12 \cb3 ), point)) \{\
        \cf13 \cb3 return\cf12 \cb3  \cf13 \cb3 self\cf12 \cb3 ;\
    \}\cf13 \cb3 else\cf12 \cb3   \cf13 \cb3 if\cf12 \cb3 (hitView ==\cf13 \cb3 self\cf12 \cb3  && !\cf15 \cb3 CGRectContainsPoint\cf12 \cb3 (\cf15 \cb3 CGRectMake\cf12 \cb3 (\cf18 \cb3 0\cf12 \cb3 , \cf18 \cb3 0\cf12 \cb3 , \cf16 \cb3 SCREEN_WIDTH\cf12 \cb3  - \cf18 \cb3 60\cf12 \cb3 , \cf13 \cb3 self\cf12 \cb3 .\cf14 \cb3 bounds\cf12 \cb3 .\cf14 \cb3 size\cf12 \cb3 .\cf14 \cb3 height\cf12 \cb3 ), point)) \{\
        \cf13 \cb3 return\cf12 \cb3   \cf13 \cb3 nil\cf12 \cb3 ;\
    \}\cf13 \cb3 else\cf12 \cb3 \{\
        \cf13 \cb3 return\cf12 \cb3   hitView;\
    \}\
\}\
\cf17 \cb3 \
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf12 \cb3 - (\cf14 \cb3 CGFloat\cf12 \cb3 )screenViewY \{\
    \cf14 \cb3 CGFloat\cf12 \cb3  y = \cf18 \cb3 0\cf12 \cb3 ;\
    \cf13 \cb3 for\cf12 \cb3  (\cf14 \cb3 UIView\cf12 \cb3 * view = \cf13 \cb3 self\cf12 \cb3 ; view; view = view.\cf14 \cb3 superview\cf12 \cb3 ) \{\
        y += view.\cf19 \cb3 y\cf12 \cb3 ;\
        \
        \cf13 \cb3 if\cf12 \cb3  ([view \cf15 \cb3 isKindOfClass\cf12 \cb3 :[\cf14 \cb3 UIScrollView\cf12 \cb3  \cf15 \cb3 class\cf12 \cb3 ]]) \{\
            \cf14 \cb3 UIScrollView\cf12 \cb3 * scrollView = (\cf14 \cb3 UIScrollView\cf12 \cb3 *)view;\
            y -= scrollView.\cf14 \cb3 contentOffset\cf12 \cb3 .\cf14 \cb3 y\cf12 \cb3 ;\
        \}\
    \}\
    \cf13 \cb3 return\cf12 \cb3  y;\
\}\cf17 \cb3 \
\
\cf12 \cb3 - (\cf14 \cb3 UIView\cf12 \cb3  *)hitTest:(\cf14 \cb3 CGPoint\cf12 \cb3 )point withEvent:(\cf14 \cb3 UIEvent\cf12 \cb3  *)event \{\
    \cf13 \cb3 if\cf12 \cb3  (!\cf13 \cb3 self\cf12 \cb3 .\cf15 \cb3 isUserInteractionEnabled\cf12 \cb3  || \cf13 \cb3 self\cf12 \cb3 .\cf15 \cb3 isHidden\cf12 \cb3  || \cf13 \cb3 self\cf12 \cb3 .\cf14 \cb3 alpha\cf12 \cb3  <= \cf18 \cb3 0.01\cf12 \cb3 ) \{\
        \cf13 \cb3 return\cf12 \cb3  \cf13 \cb3 nil\cf12 \cb3 ;\
    \}\
    \cf14 \cb3 CGRect\cf12 \cb3  touchRect = \cf15 \cb3 CGRectMake\cf12 \cb3 (\cf18 \cb3 0\cf12 \cb3 , \cf18 \cb3 0\cf12 \cb3 , \cf16 \cb3 SCREEN_WIDTH\cf12 \cb3 , \cf18 \cb3 44\cf12 \cb3 );\
    \cf13 \cb3 if\cf12 \cb3  (\cf15 \cb3 CGRectContainsPoint\cf12 \cb3 (touchRect, point)) \{\
        \cf13 \cb3 for\cf12 \cb3  (\cf14 \cb3 UIView\cf12 \cb3  *subview \cf13 \cb3 in\cf12 \cb3  [\cf13 \cb3 self\cf12 \cb3 .\cf14 \cb3 subviews\cf12 \cb3  \cf15 \cb3 reverseObjectEnumerator\cf12 \cb3 ]) \{\
            \cf14 \cb3 CGPoint\cf12 \cb3  convertedPoint = [subview \cf15 \cb3 convertPoint\cf12 \cb3 :point \cf15 \cb3 fromView\cf12 \cb3 :\cf13 \cb3 self\cf12 \cb3 ];\
            \cf14 \cb3 UIView\cf12 \cb3  *hitTestView = [subview \cf15 \cb3 hitTest\cf12 \cb3 :convertedPoint \cf15 \cb3 withEvent\cf12 \cb3 :event];\
            \cf13 \cb3 if\cf12 \cb3  (hitTestView) \{\
                \cf13 \cb3 return\cf12 \cb3  hitTestView;\
            \}\
        \}\
        \cf13 \cb3 return\cf12 \cb3  \cf13 \cb3 self\cf12 \cb3 ;\
    \}\
    \cf13 \cb3 return\cf12 \cb3  \cf13 \cb3 self\cf12 \cb3 ;\
\}\cf17 \cb3 \
\
\
\pard\pardeftab720\partightenfactor0

\f7\b\fs42 \cf0 \cb2 \expnd0\expndtw0\kerning0
\CocoaLigature1 anchorPoint
\f0 \'a1\'a2
\f7 position
\f0 \'a1\'a2
\f7 frame
\f0 \'d6\'ae\'bc\'e4\'b5\'c4\'cf\'e0\'b6\'d4\'b9\'d8\'cf\'b5
\f7 .\cb3 \
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf0 \cb2 \'ca\'d7\'cf\'c8\'c5\'aa\'c7\'e5\'b3\'fe\'d5\'e2\'c8\'fd\'b8\'f6\'ca\'f4\'d0\'d4\'b1\'ed\'ca\'be\'ca\'b2\'c3\'b4
\f7 . 
\f0 \'bb\'d8\'b9\'cb\'d2\'bb\'cf\'c2\'c9\'cf\'c3\'e6\'bd\'b2\'b5\'c4
\f7 .\cb3 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf0 \cb2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
frame
\f0 \'d6\'d0\'b5\'c4
\f7 X,Y
\f0 \'b1\'ed\'ca\'be
\f7 sublayer
\f0 \'d7\'f3\'c9\'cf\'bd\'c7\'cf\'e0\'b6\'d4\'d3\'da
\f7 supLayer
\f0 \'b5\'c4\'d7\'f3\'c9\'cf\'bd\'c7\'b5\'c4\'be\'e0\'c0\'eb
\f7 \cb3 \
\ls3\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
position
\f0 \'d6\'d0\'b5\'c4
\f7 X,Y
\f0 \'b1\'ed\'ca\'be
\f7 sublay
\f0 \'c3\'aa\'b5\'e3\'cf\'e0\'b6\'d4\'d3\'da
\f7 supLayer
\f0 \'b5\'c4\'d7\'f3\'c9\'cf\'bd\'c7\'b5\'c4\'be\'e0\'c0\'eb
\f7 \cb3 \
\ls3\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
anchorPoint
\f0 \'d6\'d0\'b5\'c4
\f7 X,Y
\f0 \'b1\'ed\'ca\'be\'c3\'aa\'b5\'e3\'b5\'c4
\f7 x,y
\f0 \'b5\'c4\'cf\'e0\'b6\'d4\'be\'e0\'c0\'eb\'b1\'c8\'c0\'fd\'d6\'b5
\f7 \cb3 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs32 \cf0 \cb2 \'b5\'b1\'c8\'b7\'b6\'a8\'c3\'aa\'b5\'e3
\f7 ,
\f0 \'b8\'c4\'b1\'e4
\f7 frame
\f0 \'ca\'b1
\f7 , position
\f0 \'b5\'c4\'d6\'b5\'ce\'aa
\f7 :\cb3 \
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf0 \cb2 position.x = frame.origin.x + anchorPoint.x * bounds.size.width\'a3\'bb  \
position.y = frame.origin.y + anchorPoint.y * bounds.size.height\'a3\'bb\cb3 \
\pard\pardeftab720\partightenfactor0

\b\fs32 \cf0 \cb2 \'c8\'b7\'b6\'a8\'c3\'aa\'b5\'e3
\f7 , 
\f0 \'b8\'c4\'b1\'e4
\f7 position
\f0 \'ca\'b1
\f7 , frame
\f0 \'b5\'c4\'d6\'b5\'ce\'aa
\f7 :\cb3 \
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf0 \cb2 frame.origin.x = position.x - anchorPoint.x * bounds.size.width\'a3\'bb  \
frame.origin.y = position.y - anchorPoint.y * bounds.size.height\'a3\'bb\cb3 \
\pard\pardeftab720\partightenfactor0

\b\fs32 \cf0 \cb2 \'b8\'c4\'b1\'e4\'c3\'aa\'b5\'e3
\f7 , frame
\f0 \'b5\'c4\'d6\'b5\'b1\'e4\'bb\'af\'ce\'aa
\f7 \cb3 \
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf0 \cb2 frame.origin.x = - anchorPoint.x * bounds.size.width + position.x\'a3\'bb  \
frame.origin.y = - anchorPoint.y * bounds.size.height + position.y\'a3\'bb\cb3 \
\pard\pardeftab720\partightenfactor0

\b\fs32 \cf0 \cb2 \'d3\'b0\'cf\'ec\'b9\'d8\'cf\'b5
\f7 \cb3 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0
\b0\fs24 \cf0 \cb2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}
\f0 \expnd0\expndtw0\kerning0
\'c3\'aa\'b5\'e3\'b8\'c4\'b1\'e4
\f7 , position
\f0 \'b2\'bb\'d3\'b0\'cf\'ec
\f7 , frame
\f0 \'b1\'e4\'bb\'af
\f7 \cb3 \
\ls4\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
frame
\f0 \'b1\'e4\'bb\'af
\f7 , 
\f0 \'c3\'aa\'b5\'e3\'b2\'bb\'d3\'b0\'cf\'ec
\f7 , position
\f0 \'b1\'e4\'bb\'af
\f7 \cb3 \
\ls4\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
position
\f0 \'b1\'e4\'bb\'af
\f7 , 
\f0 \'c3\'aa\'b5\'e3\'b2\'bb\'d3\'b0\'cf\'ec
\f7 , frame
\f0 \'b1\'e4\'bb\'af
\f4\fs26 \cf17 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf17 \
\
 for(UIView*window in [UIApplication sharedApplication].windows)\
    \{\
        if([window isKindOfClass:NSClassFromString(@"UIRemoteKeyboardWindow")])\
        \{\
           UIView *backView = [[UIView alloc]initWithFrame:[UIScreen mainScreen].bounds];\
            backView.backgroundColor = [UIColor blackColor];\
            backView.alpha=0.5;\
            [window addSubview:backView];\
            \
            dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(2 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^\{\
                [backView removeFromSuperview];\
            \});\
        \}\
        \
    \}\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \cb2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
iPhone Portrait iOS 5,6\
\'c6\'d5\'cd\'a8\'c6\'c1\'c4\'bb(\'b7\'c7Retina\'c6\'c1\'a3\'a9\'a3\'ba 320 x 480         \'c3\'fc\'c3\'fbLaunchImage-1.png\
for iPhoen4s/4(@2x) :  640 x 960           \'c3\'fc\'c3\'fbLaunchImage-1@2x.png\
for iPhoen5s/5(@2x) :  640 x 1136          \'c3\'fc\'c3\'fbLaunchImage-1-700-568h@2x.png\
iPhone Portrait iOS 8,9\
for iPhone 6 plus (@3x) : 1242 x 2208     \'c3\'fc\'c3\'fbLaunchImage-1-800-Portrait-736h@3x.png\
for iPhone 6(@2x) :    750 x 1334           \'c3\'fc\'c3\'fbLaunchImage-1-800-667h@2x.png\
iPhone Portrait iOS 7,9\
for iPhoen4s/4(@2x) :  640 x 960          \'c3\'fc\'c3\'fbLaunchImage-2@2x.png\
for iPhoen5s/5(@2x) :  640 x 1136         \'c3\'fc\'c3\'fbLaunchImage-2-700-568h@2x.png\
iPhone Landscape iOS 8,9\
                       2208 x 1242 \
\
\pard\pardeftab720\partightenfactor0

\f2 \cf39 \cb40 // CustomCell.m\cf37 \
- (\cf41 void\cf37 )setFrame:(\cf42 CGRect\cf37 )frame \{\
    frame\cf42 .size.height\cf37  -= \cf43 10\cf37 ;    \cf39 // 
\f0 \'bc\'f5\'b5\'f4\'b5\'c4\'d6\'b5\'be\'cd\'ca\'c7\'b7\'d6\'b8\'f4\'cf\'df\'b5\'c4\'b8\'df\'b6\'c8
\f2 \cf37 \
    [\cf41 super\cf37  setFrame:frame];\
\}
\f0 \cf0 \cb2 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f8\fs24 \cf37 \cb44 1. 
\f0 \'d2\'c6\'b3\'fd\'cf\'b5\'cd\'b3\'b5\'c4\'b7\'d6\'b8\'ee\'cf\'df\'a3\'ac\'d7\'d4\'bc\'ba\'b6\'a8\'d2\'e5\'c3\'bf\'d0\'d0\'b5\'c4\'b7\'d6\'b8\'ee\'cf\'df
\f8       \
    \cf29 self\cf37 .tableView.separatorStyle = \cf29 UITableViewCellSeparatorStyleNone\cf37 ;\
\
2. 
\f0 \'d6\'b8\'b6\'a8\'c4\'b3\'d0\'d0\'b7\'d6\'b8\'ee\'cf\'df\'d2\'fe\'b2\'d8
\f8               \
     [cell setSeparatorInset:\cf29 UIEdgeInsetsMake\cf37 (0, 0, 0, MAXFLOAT)];
\f0\fs28 \cf0 \cb2 \
\pard\pardeftab720\partightenfactor0
\cf37 \'c8\'c3\'b7\'d6\'b8\'ee\'cf\'df\'b5\'c4\'bf\'ed\'b6\'c8\'ba\'cd
\f7 cell
\f0 \'b5\'c4\'bf\'ed\'b6\'c8\'d2\'bb\'d6\'c2
\f7 \cb3 \
\cb2 cell.preservesSuperviewLayoutMargins = false;\cb3 \
\cb2 cell.separatorInset = UIEdgeInsetsZero;\cb3 \
\cb2 cell.layoutMargins = UIEdgeInsetsZero;
\f0 \cf0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf0 \
- (void)viewDidLoad \{\
[super viewDidLoad];\
//\'cf\'c2\'bb\'ae\'cf\'df\'b3\'a4\'b6\'c8\
//UIEdgeInsetsZero \'cf\'c2\'bb\'ae\'cf\'df\'ce\'aa\'c6\'c1\'c4\'bb\'b5\'c4\'bf\'ed\
//UIEdgeInsetsMake(<#CGFloat top#>, <#CGFloat left#>, <#CGFloat bottom#>, <#CGFloat right#>) \'cf\'b8\'ce\'a2\'b5\'f7\'d5\'fb\
[self.tableView setSeparatorInset:UIEdgeInsetsZero];\
//\'cf\'c2\'bb\'ae\'cf\'df\'d1\'d5\'c9\'ab\
[self.tableView setSeparatorColor:[UIColor xxxx ]];\
[self.tableView setLayoutMargins:UIEdgeInsetsZero];\
\}\
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath\
\{\
UITableViewCell *cell;\
[cell setSeparatorInset:UIEdgeInsetsZero];\
[cell setLayoutMargins:UIEdgeInsetsZero];\
return cell;\
\}\
\
\
\pard\pardeftab720\partightenfactor0

\f8\fs24 \cf0 \cb44 NSString *message = \cf45 @"
\f0 \'c7\'eb\'c8\'b7\'c8\'cf\'d0\'c5\'cf\'a2\'ca\'c7\'b7\'f1\'d5\'fd\'c8\'b7
\f8 ?"\cf0 ;\
NSString *title = \cf45 @"
\f0 \'cc\'e1\'ca\'be
\f8 "\cf0 ;\
UIAlertController *alertController = [UIAlertController alertControllerWithTitle:title message:message preferredStyle:UIAlertControllerStyleActionSheet];\
\pard\pardeftab720\partightenfactor0
\cf46 //
\f0 \'b8\'c4\'b1\'e4
\f8 title
\f0 \'b5\'c4\'b4\'f3\'d0\'a1\'ba\'cd\'d1\'d5\'c9\'ab
\f8 \cf0 \
NSMutableAttributedString *titleAtt = [[NSMutableAttributedString alloc] initWithString:title];\
[titleAtt addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:\cf47 16\cf0 ] range:NSMakeRange(\cf47 0\cf0 , title.length)];\
[titleAtt addAttribute:NSForegroundColorAttributeName value:[UIColor orangeColor] range:NSMakeRange(\cf47 0\cf0 , title.length)];\
[alertController setValue:titleAtt forKey:\cf45 @"attributedTitle"\cf0 ];\
\cf46 //
\f0 \'b8\'c4\'b1\'e4
\f8 message
\f0 \'b5\'c4\'b4\'f3\'d0\'a1\'ba\'cd\'d1\'d5\'c9\'ab
\f8 \cf0 \
NSMutableAttributedString *messageAtt = [[NSMutableAttributedString alloc] initWithString:message];\
[messageAtt addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:\cf47 13\cf0 ] range:NSMakeRange(\cf47 0\cf0 , message.length)];\
[messageAtt addAttribute:NSForegroundColorAttributeName value:[UIColor yellowColor] range:NSMakeRange(\cf47 0\cf0 , message.length)];\
[alertController setValue:messageAtt forKey:\cf45 @"attributedMessage"\cf0 ];\
 [self presentViewController:alertController animated:YES completion:nil];\
\
\
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f4\fs26 \cf12 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 - (\cf13 \cb3 void\cf12 \cb3 )generateAttributedStringWithCommentItemModel:(\cf19 \cb3 WWCommentItemModel\cf12 \cb3  *)model\
\{\
    \cf14 \cb3 NSString\cf12 \cb3  *text = model.\cf19 \cb3 firstUserName\cf12 \cb3 ;\
    \cf13 \cb3 if\cf12 \cb3  (model.\cf19 \cb3 secondUserName\cf12 \cb3 .\cf14 \cb3 length\cf12 \cb3 ) \{\
        text = [text \cf15 \cb3 stringByAppendingString\cf12 \cb3 :[\cf14 \cb3 NSString\cf12 \cb3  \cf15 \cb3 stringWithFormat\cf12 \cb3 :\cf31 \cb3 @"
\f0 \'bb\'d8\'b8\'b4
\f4 %@"\cf12 \cb3 , model.\cf19 \cb3 secondUserName\cf12 \cb3 ]];\
    \}\
    text = [text \cf15 \cb3 stringByAppendingString\cf12 \cb3 :[\cf14 \cb3 NSString\cf12 \cb3  \cf15 \cb3 stringWithFormat\cf12 \cb3 :\cf31 \cb3 @"
\f0 \'a3\'ba
\f4 %@"\cf12 \cb3 , model.\cf19 \cb3 commentString\cf12 \cb3 ]];\
    \cf14 \cb3 NSMutableAttributedString\cf12 \cb3  *attString = [[\cf14 \cb3 NSMutableAttributedString\cf12 \cb3  \cf15 \cb3 alloc\cf12 \cb3 ] \cf15 \cb3 initWithString\cf12 \cb3 :text];\
    [attString setAttributes:\cf18 \cb3 @\{\cf12 \cb3 NSForegroundColorAttributeName:UIColorHex(\cf18 \cb3 0x333333\cf12 \cb3 ),NSFontAttributeName:[UIFont fontWithName:\cf31 \cb3 @"PingFang-SC-Medium"\cf12 \cb3  size:\cf18 \cb3 14\cf12 \cb3 ]\cf18 \cb3 \}\cf12 \cb3 ];\
    [attString setAttributes:\cf18 \cb3 @\{\cf12 \cb3 NSForegroundColorAttributeName:UIColorHex(\cf18 \cb3 0x75a5fa\cf12 \cb3 )\cf18 \cb3 \}\cf12 \cb3  range:[text rangeOfString:model.firstUserName]];\
    \cf13 \cb3 if\cf12 \cb3  (model.\cf19 \cb3 secondUserName\cf12 \cb3 ) \{\
        [attString setAttributes:\cf18 \cb3 @\{\cf12 \cb3 NSForegroundColorAttributeName:UIColorHex(\cf18 \cb3 0x75a5fa\cf12 \cb3 )\cf18 \cb3 \}\cf12 \cb3  range:[text rangeOfString:model.secondUserName]];\
    \}\
    \cf13 \cb3 self\cf12 \cb3 .\cf19 \cb3 contentLabel\cf12 \cb3 .\cf19 \cb3 attributedText\cf12 \cb3  = attString;\
    [\cf13 \cb3 self\cf12 \cb3 .\cf19 \cb3 contentLabel\cf12 \cb3  \cf48 \cb3 addLinkToTransitInformation\cf12 \cb3 :\cf18 \cb3 @\{\cf31 @"name"\cf12 \cb3 :model.\cf19 \cb3 firstUserName\cf18 \}\cf12 \cb3  \cf48 \cb3 withRange\cf12 \cb3 :[text \cf15 \cb3 rangeOfString\cf12 \cb3 :model.\cf19 \cb3 firstUserName\cf12 \cb3 ]];\
    [\cf13 \cb3 self\cf12 \cb3 .\cf19 \cb3 contentLabel\cf12 \cb3  \cf48 \cb3 addLinkToTransitInformation\cf12 \cb3 :\cf18 \cb3 @\{\cf31 @"name"\cf12 \cb3 :model.\cf19 \cb3 secondUserName\cf18 \}\cf12 \cb3  \cf48 \cb3 withRange\cf12 \cb3 :[text \cf15 \cb3 rangeOfString\cf12 \cb3 :model.\cf19 \cb3 secondUserName\cf12 \cb3 ]];\
\}
\f0\fs28 \cf0 \cb2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\
http://blog.csdn.net/lucy_wangli/article/details/37962699\
\pard\pardeftab720\sl560\partightenfactor0
\cf49 \'cd\'a8\'b9\'fd
\f3 NSNumberFormatter
\f0 \'a3\'ac\'c9\'e8\'d6\'c3
\f3 NSNumber
\f0 \'ca\'e4\'b3\'f6\'b5\'c4\'b8\'f1\'ca\'bd
\fs32 \cf50 \
\pard\pardeftab720\sl380\partightenfactor0

\f3\fs28 \cf50 NSNumberFormatter\'a0*formatter = [[NSNumberFormatteralloc]init];
\f0\fs32 \

\f3\fs28 formatter.numberStyle\'a0=NSNumberFormatterDecimalStyle;
\f0\fs32 \

\f3\fs28 NSString\'a0*newAmount = [formatterstringFromNumber:[NSNumbernumberWithint:\cf43 123456789\cf50 ]];
\f0\fs32 \

\fs28 \'a3\'a8\'d7\'a2\'d2\'e2\'b4\'ab\'c8\'eb\'b2\'ce\'ca\'fd\'b5\'c4\'ca\'fd\'be\'dd\'b3\'a4\'b6\'c8\'a3\'ac\'bb\'b9\'bf\'c9\'d3\'c3
\f3 double
\f0 \'c0\'e0\'d0\'cd\'b5\'c8\'a3\'a9
\fs32 \
\pard\pardeftab720\sl560\sa200\partightenfactor0

\f3\fs28 \cf50 NSNumberFormatter
\f0 \'c0\'e0\'d3\'d0\'b8\'f6\'ca\'f4\'d0\'d4
\f3 numberStyle
\f0 \'a3\'ac\'ca\'c7\'d2\'bb\'b8\'f6\'c3\'b6\'be\'d9\'d0\'cd\'a3\'ac\'c9\'e8\'d6\'c3\'b2\'bb\'cd\'ac\'b5\'c4\'d6\'b5\'bf\'c9\'d2\'d4\'ca\'e4\'b3\'f6\'b2\'bb\'cd\'ac\'b5\'c4\'ca\'fd\'d7\'d6\'b8\'f1\'ca\'bd\'a1\'a3\'b8\'c3\'c3\'b6\'be\'d9\'b0\'fc\'c0\'a8\'a3\'ba
\fs32 \
\pard\pardeftab720\sl440\partightenfactor0
\cf50 \uc0\u160  \u160 \u160 enum\{\
\uc0\u160  \u160  \u160  \u160  NSNumberFormatterNoStyle =\u160 kCFNumberFormatterNoStyle,\
\uc0\u160  \u160  \u160  \u160  NSNumberFormatterDecimalStyle =\u160 kCFNumberFormatterDecimalStyle,\
\uc0\u160  \u160  \u160  \u160  NSNumberFormatterCurrencyStyle =\u160 kCFNumberFormatterCurrencyStyle,\
\uc0\u160  \u160  \u160  \u160  NSNumberFormatterPercentStyle =\u160 kCFNumberFormatterPercentStyle,\
\uc0\u160  \u160  \u160  \u160  NSNumberFormatterScientificStyle =\u160 kCFNumberFormatterScientificStyle,\
\uc0\u160  \u160  \u160  \u160  NSNumberFormatterSpellOutStyle =\u160 kCFNumberFormatterSpellOutStyle\
\uc0\u160  \u160  \};\
\pard\pardeftab720\sl560\sa200\partightenfactor0
\cf49 \'b8\'f7\'b8\'f6\'c3\'b6\'be\'d9\'b6\'d4\'d3\'a6\'ca\'e4\'b3\'f6\'ca\'fd\'d7\'d6\'b8\'f1\'ca\'bd\'b5\'c4\'d0\'a7\'b9\'fb\'c8\'e7\'cf\'c2\'a3\'ba\

\f3\fs24 123456789
\f0\fs32 \

\f3\fs24 123,456,789
\f0\fs32 \
\pard\pardeftab720\sl460\sa200\partightenfactor0

\fs24 \cf49 \'a3\'a4
\f3 123,456,789.00
\f0\fs32 \
\pard\pardeftab720\sl560\sa200\partightenfactor0

\f3\fs24 \cf49 -539,222,988%
\f0\fs32 \
\pard\pardeftab720\sl460\sa200\partightenfactor0

\f3\fs24 \cf49 1.23456789E8
\f0\fs32 \
\pard\pardeftab720\sl560\sa200\partightenfactor0

\fs24 \cf49 \'d2\'bb\'d2\'da\'b6\'fe\'c7\'a7\'c8\'fd\'b0\'d9\'cb\'c4\'ca\'ae\'ce\'e5\'cd\'f2\'c1\'f9\'c7\'a7\'c6\'df\'b0\'d9\'b0\'cb\'ca\'ae\'be\'c5
\fs32 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf0 \
CFAbsoluteTime startTime =CFAbsoluteTimeGetCurrent();\
//\'d4\'da\'d5\'e2\'d0\'b4\'c8\'eb\'d2\'aa\'bc\'c6\'cb\'e3\'ca\'b1\'bc\'e4\'b5\'c4\'b4\'fa\'c2\'eb\
...\
CFAbsoluteTime linkTime = (CFAbsoluteTimeGetCurrent() - startTime);\
NSLog(@"Linked in %f ms", linkTime *1000.0);\
\'b4\'f2\'d3\'a1\'b3\'f6\'c0\'b4\'ce\'aa\'b4\'fa\'c2\'eb\'d6\'b4\'d0\'d0\'ca\'b1\'bc\'e4 \'b5\'a5\'ce\'bbms\
\
\pard\pardeftab720\partightenfactor0

\f9\b \cf0 \cb1 1.
\f0 \'d4\'da\'c3\'bf\'b4\'ce\'b5\'e3\'bb\'f7\'ca\'b1\'cf\'c8\'c8\'a1\'cf\'fb\'d6\'ae\'c7\'b0\'b5\'c4\'b2\'d9\'d7\'f7\'a3\'a8\'cd\'f8\'c9\'cf\'bf\'b4\'b5\'bd\'b5\'c4\'b7\'bd\'b7\'a8\'a3\'a9
\f9\b0 \
\pard\pardeftab720\partightenfactor0

\f8\fs24 \cf2 \cb51 ?\cb1 \

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt\clvertalbase \clshdrawnil \clwWidth648\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalt\clvertalbase \clshdrawnil \clwWidth19211\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\fs28 \cf52 \cb2 1\
2\
3\
4\
5\
6\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 - (
\f10\b \cf53 void
\f8\b0 \cf0 )buttonClicked:(id)sender\
\{\
\'a0\'a0\cf30 //
\f0 \'d5\'e2\'c0\'ef\'ca\'c7\'b9\'d8\'bc\'fc\'a3\'ac\'b5\'e3\'bb\'f7\'b0\'b4\'c5\'a5\'ba\'f3\'cf\'c8\'c8\'a1\'cf\'fb\'d6\'ae\'c7\'b0\'b5\'c4\'b2\'d9\'d7\'f7\'a3\'ac\'d4\'d9\'bd\'f8\'d0\'d0\'d0\'e8\'d2\'aa\'bd\'f8\'d0\'d0\'b5\'c4\'b2\'d9\'d7\'f7
\f8 \cf0 \
\'a0\'a0[[self 
\f10\b \cf53 class
\f8\b0 \cf0 ] cancelPreviousPerformRequestsWithTarget:self selector:@selector(buttonClicked:) object:sender];\
\'a0\'a0[self performSelector:@selector(buttonClicked: )withObject:sender afterDelay:0.2f];\
\}\cell \lastrow\row
\pard\pardeftab720\partightenfactor0

\f0 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f4 \cf12 \cb32 \kerning1\expnd0\expndtw0 - (\cf13 void\cf12 )setCoverImage \{
\f3\fs24 \cf0 \

\f4\fs28 \cf12     \cf14 NSURL\cf12  *fileURL = [\cf14 NSURL\cf12  \cf15 URLWithString\cf12 :\cf13 self\cf12 .\cf19 filePath\cf12 ];
\f3\fs24 \cf0 \

\f4\fs28 \cf12     \cf14 AVURLAsset\cf12  *asset = [\cf14 AVURLAsset\cf12  \cf15 URLAssetWithURL\cf12 :fileURL \cf15 options\cf12 :\cf13 nil\cf12 ];
\f3\fs24 \cf0 \

\f4\fs28 \cf12     \cf14 NSArray\cf12  *keys = [\cf14 NSArray\cf12  \cf15 arrayWithObjects\cf12 :\cf31 @"commonMetadata"\cf12 , \cf13 nil\cf12 ];
\f3\fs24 \cf0 \

\f4\fs28 \cf12     [asset \cf15 loadValuesAsynchronouslyForKeys\cf12 :keys \cf15 completionHandler\cf12 :^\{
\f3\fs24 \cf0 \

\f4\fs28 \cf12         \cf14 NSArray\cf12  *artworks = [\cf14 AVMetadataItem\cf12  \cf15 metadataItemsFromArray\cf12 :asset.\cf14 commonMetadata
\f3\fs24 \cf0 \

\f4\fs28 \cf12                                                            \cf15 withKey\cf12 :\cf14 AVMetadataCommonKeyArtwork
\f3\fs24 \cf0 \

\f4\fs28 \cf12                                                           \cf15 keySpace\cf12 :\cf14 AVMetadataKeySpaceCommon\cf12 ];
\f3\fs24 \cf0 \

\f4\fs28 \cf12         \cf13 if\cf12  (artworks.\cf14 count\cf12 ) \{
\f3\fs24 \cf0 \

\f4\fs28 \cf12             \cf14 AVMetadataItem\cf12  *metadataItem = [artworks \cf15 firstObject\cf12 ];
\f3\fs24 \cf0 \

\f4\fs28 \cf12             \cf13 if\cf12  ([metadataItem.\cf14 keySpace\cf12  \cf15 isEqualToString\cf12 :\cf14 AVMetadataKeySpaceID3\cf12 ]) \{
\f3\fs24 \cf0 \

\f4\fs28 \cf12                 \cf14 NSDictionary\cf12  *d = [metadataItem.\cf14 value\cf12  \cf15 copyWithZone\cf12 :\cf13 nil\cf12 ];
\f3\fs24 \cf0 \

\f4\fs28 \cf12                 [\cf13 self\cf12 .\cf19 coverImageView\cf12  \cf15 setImage\cf12 :[\cf14 UIImage\cf12  \cf15 imageWithData\cf12 :[d \cf15 objectForKey\cf12 :\cf31 @"data"\cf12 ]]];
\f3\fs24 \cf0 \

\f4\fs28 \cf12             \} \cf13 else\cf12  \cf13 if\cf12  ([metadataItem.\cf14 keySpace\cf12  \cf15 isEqualToString\cf12 :\cf14 AVMetadataKeySpaceiTunes\cf12 ]) \{
\f3\fs24 \cf0 \

\f4\fs28 \cf12                 [\cf13 self\cf12 .\cf19 coverImageView\cf12  \cf15 setImage\cf12 :[\cf14 UIImage\cf12  \cf15 imageWithData\cf12 :[metadataItem.\cf14 value\cf12  \cf15 copyWithZone\cf12 :\cf13 nil\cf12 ]]];
\f3\fs24 \cf0 \

\f4\fs28 \cf12             \}
\f3\fs24 \cf0 \

\f4\fs28 \cf12         \} \cf13 else\cf12  \{
\f3\fs24 \cf0 \

\f4\fs28 \cf12             [\cf13 self\cf12  \cf48 getContentAndCoverImage\cf12 ];
\f3\fs24 \cf0 \

\f4\fs28 \cf12         \}
\f3\fs24 \cf0 \

\f4\fs28 \cf12     \}];
\f3\fs24 \cf0 \

\f4\fs28 \cf12 \}
\f0 \cf0 \cb2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\
\
\
\
\
\
\
\
\
\
}