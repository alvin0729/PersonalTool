{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset134 PingFangSC-Regular;
\f3\fswiss\fcharset0 ArialMT;\f4\fnil\fcharset0 MicrosoftYaHei;\f5\fmodern\fcharset0 Courier;
\f6\fnil\fcharset0 Monaco;\f7\fnil\fcharset0 HelveticaNeue;\f8\fnil\fcharset0 Verdana;
\f9\fmodern\fcharset0 CourierNewPSMT;\f10\fnil\fcharset0 Tahoma;\f11\fmodern\fcharset0 CourierNewPS-BoldMT;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red92\green38\blue153;
\red170\green13\blue145;\red63\green110\blue116;\red28\green0\blue207;\red46\green13\blue110;\red100\green56\blue32;
\red255\green255\blue255;\red38\green38\blue38;\red67\green67\blue67;\red255\green255\blue255;\red65\green204\blue69;
\red0\green0\blue0;\red20\green159\blue255;\red211\green24\blue149;\red252\green44\blue56;\red120\green109\blue255;
\red35\green255\blue131;\red228\green124\blue72;\red0\green116\blue0;\red11\green96\blue192;\red27\green29\blue31;
\red36\green38\blue41;\red235\green236\blue237;\red37\green127\blue159;\red104\green26\blue29;\red13\green0\blue129;
\red249\green249\blue249;\red106\green0\blue67;\red0\green0\blue255;\red15\green114\blue1;\red196\green26\blue22;
\red74\green74\blue74;\red246\green246\blue246;\red210\green0\blue5;\red35\green35\blue35;\red115\green0\blue2;
\red109\green109\blue109;\red0\green0\blue117;\red82\green0\blue83;\red11\green84\blue83;\red242\green242\blue242;
\red10\green77\blue204;\red107\green0\blue1;\red15\green112\blue1;\red107\green0\blue109;\red38\green71\blue75;
\red65\green65\blue65;\red53\green53\blue53;\red94\green224\blue89;\red159\green159\blue159;\red10\green82\blue135;
}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c35900\c14900\c60100;
\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c24700\c43100\c45600;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c39100\c22000\c12500;
\cssrgb\c100000\c100000\c100000;\cssrgb\c20000\c20000\c20000;\cssrgb\c33333\c33333\c33333;\csgray\c100000;\cssrgb\c29412\c81961\c34118;
\cssrgb\c0\c0\c0;\cssrgb\c0\c69412\c100000;\cssrgb\c87059\c21961\c65098;\cssrgb\c100000\c27451\c27843;\cssrgb\c54510\c52941\c100000;
\cssrgb\c3137\c98039\c58431;\cssrgb\c92157\c56471\c35294;\csgenericrgb\c0\c45600\c0;\cssrgb\c0\c46667\c80000;\cssrgb\c14118\c15294\c16078;
\cssrgb\c18824\c20000\c21176;\cssrgb\c93725\c94118\c94510;\cssrgb\c16863\c56863\c68627;\cssrgb\c49020\c15294\c15294;\cssrgb\c6275\c6275\c58039;
\cssrgb\c98039\c98039\c98039;\cssrgb\c49804\c0\c33333;\cssrgb\c0\c0\c100000;\cssrgb\c0\c50980\c0;\csgenericrgb\c77000\c10200\c8600;
\cssrgb\c36078\c36078\c36078;\cssrgb\c97255\c97255\c97255;\cssrgb\c86667\c0\c0;\cssrgb\c18431\c18431\c18431;\cssrgb\c53333\c0\c0;
\cssrgb\c50196\c50196\c50196\c4706;\cssrgb\c0\c0\c53333;\cssrgb\c40000\c0\c40000;\cssrgb\c0\c40000\c40000;\cssrgb\c96078\c96078\c96078;
\cssrgb\c1176\c40000\c83922;\cssrgb\c50196\c0\c0;\cssrgb\c0\c50196\c0;\cssrgb\c50196\c0\c50196;\csgenericrgb\c14900\c27800\c29400;
\cssrgb\c32157\c32157\c32157;\cssrgb\c27059\c27059\c27059;\cssrgb\c42353\c88627\c42353;\cssrgb\c68627\c68627\c68627;\cssrgb\c0\c40000\c60000;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab692
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \cb3 - (\cf4 UIBezierPath\cf2  *)pathForProgress:(\cf4 CGFloat\cf2 )progress\{
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 CGFloat\cf2  radius = \cf5 self\cf2 .\cf6 topShowBackgroundView\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 height\cf2  * \cf7 0.5\cf2 ;
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 CGPoint\cf2  center1 = \cf8 CGPointMake\cf2 (\cf5 self\cf2 .\cf6 topShowBackgroundView\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 width\cf2  * progress+radius, \cf5 self\cf2 .\cf6 topShowBackgroundView\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 height\cf2  * \cf7 0.5\cf2 );
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 UIBezierPath\cf2  *path = [\cf4 UIBezierPath\cf2  \cf8 bezierPath\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     [path \cf8 moveToPoint\cf2 :\cf8 CGPointMake\cf2 (\cf5 self\cf2 .\cf6 topShowBackgroundView\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 width\cf2  * progress+radius, \cf7 0\cf2 )];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     [path \cf8 addArcWithCenter\cf2 :center1 \cf8 radius\cf2 :radius \cf8 startAngle\cf2 :\cf9 M_PI\cf2 *\cf7 1.5\cf2   \cf8 endAngle\cf2 : \cf9 M_PI\cf2 *\cf7 0.5\cf2  \cf8 clockwise\cf2 :\cf5 NO\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     [path \cf8 addLineToPoint\cf2 :\cf8 CGPointMake\cf2 (\cf5 self\cf2 .\cf6 topShowBackgroundView\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 width\cf2  - radius, \cf5 self\cf2 .\cf6 topShowBackgroundView\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 height\cf2 )];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 CGPoint\cf2  center2 = \cf8 CGPointMake\cf2 (\cf5 self\cf2 .\cf6 topShowBackgroundView\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 width\cf2  - radius, \cf5 self\cf2 .\cf6 topShowBackgroundView\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 height\cf2  * \cf7 0.5\cf2 );
\f1\fs24 \cf0 \

\f0\fs28 \cf2     [path \cf8 addArcWithCenter\cf2 :center2 \cf8 radius\cf2 : radius \cf8 startAngle\cf2 :\cf9 M_PI\cf2 *\cf7 0.5\cf2  \cf8 endAngle\cf2 :\cf9 M_PI\cf2 *\cf7 1.5\cf2  \cf8 clockwise\cf2 :\cf5 NO\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     [path \cf8 addLineToPoint\cf2 :\cf8 CGPointMake\cf2 (\cf5 self\cf2 .\cf6 topShowBackgroundView\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 width\cf2  * progress+radius, \cf7 0\cf2 )];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     [path \cf8 closePath\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     path.\cf4 lineWidth\cf2  = \cf7 1\cf2 ;
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf5 return\cf2  path;
\f1\fs24 \cf0 \

\f0\fs28 \cf2 \}\
\

\f2 \cf0 \cb10 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\sl560\partightenfactor0

\f3\b\fs48 \cf11 \cb10 UILabel
\f2 \'bf\'ed\'b6\'c8\'b9\'cc\'b6\'a8
\f3 , 
\f2 \'d7\'d6\'cc\'e5\'b4\'f3\'d0\'a1\'d7\'d4\'ca\'ca\'d3\'a6\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f0\b0\fs28 \cf2 \cb3 \kerning1\expnd0\expndtw0 - (\cf5 void\cf2 )setFontSizeThatFits:(\cf4 UILabel\cf2 *)label\{
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 CGFloat\cf2  fontSizeThatFits = \cf7 5\cf2 ;
\f1\fs24 \cf0 \

\f0\fs28 \cf2     [label.\cf4 text\cf2  \cf8 sizeWithFont\cf2 :label.\cf4 font
\f1\fs24 \cf0 \

\f0\fs28 \cf2                  \cf8 minFontSize\cf2 :\cf7 12.0
\f1\fs24 \cf0 \

\f0\fs28 \cf2               \cf8 actualFontSize\cf2 :&fontSizeThatFits
\f1\fs24 \cf0 \

\f0\fs28 \cf2                     \cf8 forWidth\cf2 :label.\cf4 bounds\cf2 .\cf4 size\cf2 .\cf4 width
\f1\fs24 \cf0 \

\f0\fs28 \cf2                \cf8 lineBreakMode\cf2 :\cf8 NSLineBreakByWordWrapping\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     label.\cf4 font\cf2  = [label.\cf4 font\cf2  \cf8 fontWithSize\cf2 :fontSizeThatFits];\uc0\u8232 
\f1\fs24 \cf0 \

\f0\fs28 \cf2  \}
\f4\fs36 \cf12 \cb1 \expnd0\expndtw0\kerning0
\uc0\u8232 \cb10 \uc0\u36824 \u26377 \u19968 \u31181 \u26041 \u27861 \cb1 \uc0\u8232 \cb10 label.adjustsFontSizeToFitWidth = YES;
\f2\fs32 \
\pard\pardeftab720\sl560\partightenfactor0

\fs28 \cf0 \cb10 \
\pard\pardeftab720\partightenfactor0
\cf0 \'b5\'b1
\f3  label
\f2 \'cf\'eb\'d2\'aa\'bf\'ed\'b6\'c8\'d7\'d4\'ca\'ca\'d3\'a6\'ca\'b1
\f3  
\f2 \'bc\'d3\'c9\'cf\'cf\'c2\'c3\'e6\'b5\'c4\'bb\'b0
\f3  \cb13 \
\cb10 \'93Content Compression Resistance\'94
\f2 \'ba\'cd
\f3 \'93Content Hugging\'94\cb13 \
\cb10 1.
\f2 \'bf\'ed\'b6\'c8\'b2\'bb\'b9\'bb\'ca\'b1
\f3 \cb13 \
\pard\pardeftab720\partightenfactor0

\f5 \cf0 \cb10 [_label1 setContentCompressionResistancePriority:UILayoutPriorityRequired\
                                         forAxis:UILayoutConstraintAxisHorizontal];\
\pard\pardeftab720\partightenfactor0

\f3 \cf0 2.
\f2 \'bf\'ed\'b6\'c8\'b9\'bb\'ca\'b1
\f3 \cb13 \
\pard\pardeftab720\partightenfactor0

\f5 \cf0 \cb10 [label setContentHuggingPriority:UILayoutPriorityRequired forAxis:UILayoutConstraintAxisHorizontal];\
\pard\pardeftab720\partightenfactor0

\f1\fs36 \cf14 \cb15 //
\f2 \'cf\'d4\'ca\'be\'b6\'e0\'d0\'d0\'a3\'ac\'d7\'d4\'ca\'ca\'d3\'a6\'b8\'df\'b6\'c8
\f1\fs28 \
\pard\pardeftab720\partightenfactor0

\fs36 \cf10 \'a0 \'a0 \cf16 UILabel\cf10  *label3 = [[\cf16 UILabelalloc\cf10 ] \cf16 initWithFrame\cf10 :\cf16 CGRectZero\cf10 ];
\fs28 \cf16 \

\fs36 \cf10 \'a0 \'a0 [\cf17 self\cf10 .\cf16 viewaddSubview\cf10 :label3];
\fs28 \

\fs36 \'a0 \'a0 label3.\cf16 backgroundColor\cf10  =[\cf16 UIColorredColor\cf10 ];
\fs28 \cf16 \

\fs36 \cf10 \'a0 \'a0 label3.\cf16 text\cf10  =\cf18 @"
\f2 \'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1\'ce\'d2\'b0\'ae\'b1\'b1\'be\'a9\'cc\'ec\'b0\'b2\'c3\'c5\'a3\'a1\'cc\'ec\'b0\'b2\'c3\'c5\'c9\'cf\'cc\'ab\'d1\'f4\'c9\'fd\'a3\'a1
\f1 "\cf10 ;
\fs28 \cf18 \

\fs36 \cf10 \'a0 \'a0 label3.\cf16 preferredMaxLayoutWidth\cf10  = (\cf17 self\cf10 .\cf16 view\cf10 .\cf16 frame\cf10 .\cf16 size\cf10 .\cf16 width\cf10  -\cf19 10.0\cf10  * \cf19 2\cf10 );
\fs28 \cf16 \

\fs36 \cf10 \'a0 \'a0 [label3 \cf16 setContentHuggingPriority\cf10 :\cf16 UILayoutPriorityRequiredforAxis\cf10 :\cf16 UILayoutConstraintAxisVertical\cf10 ];
\fs28 \cf16 \

\fs36 \cf10 \'a0 \'a0 label3.\cf16 numberOfLines\cf10  =\cf19 0\cf10 ;
\fs28 \

\fs36 \'a0 \'a0 [label3 \cf20 mas_makeConstraints\cf10 :^(\cf20 MASConstraintMaker\cf10  *make) \{
\fs28 \cf20 \

\fs36 \cf10 \'a0 \'a0 \'a0 \'a0 make.\cf20 left\cf10 .\cf21 mas_equalTo\cf10 (\cf19 10.0\cf10 );
\fs28 \

\fs36 \'a0 \'a0 \'a0 \'a0 make.\cf20 right\cf10 .\cf21 mas_equalTo\cf10 (-\cf19 10.0\cf10 );
\fs28 \

\fs36 \'a0 \'a0 \'a0 \'a0 make.\cf20 top\cf10 .\cf21 mas_equalTo\cf10 (\cf19 100.0\cf10 );
\fs28 \

\fs36 \'a0 \'a0 \}];\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb13 \kerning1\expnd0\expndtw0 \CocoaLigature0 - (\cf5 void\cf2 )rn_addChildViewController:(\cf4 UIViewController\cf2  *)controller \{\
    [controller \cf8 beginAppearanceTransition\cf2 :\cf5 YES\cf2  \cf8 animated\cf2 :\cf5 NO\cf2 ];\
    [controller \cf8 willMoveToParentViewController\cf2 :\cf5 self\cf2 ];\
    [\cf5 self\cf2  \cf8 addChildViewController\cf2 :controller];\
    [\cf5 self\cf2 .\cf4 view\cf2  \cf8 addSubview\cf2 :controller.\cf4 view\cf2 ];\
    [controller \cf8 didMoveToParentViewController\cf2 :controller];\
    [controller \cf8 endAppearanceTransition\cf2 ];\
\}\
- (\cf5 void\cf2 )rn_removeChildViewController:(\cf4 UIViewController\cf2  *)controller \{\
    \cf5 if\cf2  ([\cf5 self\cf2 .\cf4 childViewControllers\cf2  \cf8 containsObject\cf2 :controller]) \{\
        [controller \cf8 beginAppearanceTransition\cf2 :\cf5 NO\cf2  \cf8 animated\cf2 :\cf5 NO\cf2 ];\
        [controller \cf8 willMoveToParentViewController\cf2 :\cf5 nil\cf2 ];\
        [controller.\cf4 view\cf2  \cf8 removeFromSuperview\cf2 ];\
        [controller \cf8 removeFromParentViewController\cf2 ];\
        [controller \cf8 didMoveToParentViewController\cf2 :\cf5 nil\cf2 ];\
        [controller \cf8 endAppearanceTransition\cf2 ];\
    \}\
\}\
\
- (\cf5 void\cf2 ) flipFromViewController:(\cf4 UIViewController\cf2 *) fromController toViewController:(\cf4 UIViewController\cf2 *) toController  withDirection:(\cf4 UIViewAnimationOptions\cf2 ) direction andDelay:(\cf5 double\cf2 ) delay\
\{\
    \cf4 dispatch_time_t\cf2  popTime = \cf8 dispatch_time\cf2 (\cf9 DISPATCH_TIME_NOW\cf2 , delay * \cf9 NSEC_PER_SEC\cf2 );\
\
    \cf8 dispatch_after\cf2 (popTime, \cf8 dispatch_get_main_queue\cf2 (), ^(\cf5 void\cf2 )\{\
        \
        toController.\cf4 view\cf2 .\cf4 frame\cf2  = fromController.\cf4 view\cf2 .\cf4 bounds\cf2 ;                           \cf22 //  1\cf2 \
        [\cf5 self\cf2  \cf8 addChildViewController\cf2 :toController];                                     \cf22 //  2\cf2 \
        [fromController \cf8 willMoveToParentViewController\cf2 :\cf5 nil\cf2 ];                            \cf22 //  3\cf2 \
        \
        [\cf5 self\cf2  \cf8 transitionFromViewController\cf2 :fromController\
                          \cf8 toViewController\cf2 :toController\
                                  \cf8 duration\cf2 :\cf7 0.2\cf2 \
                                   \cf8 options\cf2 :direction | \cf8 UIViewAnimationOptionCurveEaseIn\cf2 \
                                \cf8 animations\cf2 :\cf5 nil\cf2 \
                                \cf8 completion\cf2 :^(\cf5 BOOL\cf2  finished) \{\
                                    \
                                    [toController \cf8 didMoveToParentViewController\cf2 :\cf5 self\cf2 ];  \cf22 //  4\cf2 \
                                    [fromController \cf8 removeFromParentViewController\cf2 ];    \cf22 //  5\cf2 \
                                    [\cf6 infoButton\cf2  \cf8 setEnabled\cf2 :\cf5 YES\cf2 ];\
                                \}];\
    \});\
\}\
\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth920\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr300 \gaph\cellx4320
\clvertalt \clshdrawnil \clwWidth13200\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0

\f3\fs2 \cf23 \expnd0\expndtw0\kerning0
\CocoaLigature1 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0

\fs30 \cf24 \cb10 @warrenm Sorry to say that framesetter method didn't work for me.\cb13 \
\cb10 I got this.This function can help us to determine the frame size needed for a string range of an NSAttributedString in iphone/Ipad SDK for a given Width :\cb13 \
\cb10 It can be used for a dynamic height of UITableView Cells\cb13 \
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f1\fs26 \cf25 \cb26 - (\cf27 CGSize\cf25 )frameSizeForAttributedString:(\cf27 NSAttributedString\cf25  *)attributedString\
\{\
    \cf27 CTTypesetterRef\cf25  typesetter = \cf27 CTTypesetterCreateWithAttributedString\cf25 ((\cf27 CFAttributedStringRef\cf25 )attributedString);\
    \cf27 CGFloat\cf25  width = YOUR_FIXED_WIDTH;\
\
    \cf27 CFIndex\cf25  offset = \cf28 0\cf25 , length;\
    \cf27 CGFloat\cf25  y = \cf28 0\cf25 ;\
    \cf29 do\cf25  \{\
        length = \cf27 CTTypesetterSuggestLineBreak\cf25 (typesetter, offset, width);\
        \cf27 CTLineRef\cf25  line = \cf27 CTTypesetterCreateLine\cf25 (typesetter, \cf27 CFRangeMake\cf25 (offset, length));\
\
        \cf27 CGFloat\cf25  ascent, descent, leading;\
        \cf27 CTLineGetTypographicBounds\cf25 (line, &ascent, &descent, &leading);\
\
        \cf27 CFRelease\cf25 (line);\
\
        offset += length;\
        y += ascent + descent + leading;\
    \} \cf29 while\cf25  (offset < [attributedString length]);\
\
    \cf27 CFRelease\cf25 (typesetter);\
\
    \cf29 return\cf25  \cf27 CGSizeMake\cf25 (width, ceil(y));\
\}\cell \lastrow\row
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f0 \cf2 \cb13 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\
\cf5 self\cf2 .\cf6 searchController\cf2  = [[\cf4 UISearchDisplayController\cf2  \cf8 alloc\cf2 ] \cf8 initWithSearchBar\cf2 :\cf5 self\cf2 .\cf6 searchBar\cf2  \cf8 contentsController\cf2 :\cf5 self\cf2 ];\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f6\fs24 \cf27 \cb30 \CocoaLigature1 {\listtext	1	}\expnd0\expndtw0\kerning0
-\'a0(\cf31 void\cf27 )\'a0enumerateFonts\{\'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\cf31 for\cf27 \'a0(NSString\'a0*familyName\'a0in\'a0[UIFont\'a0familyNames])\{\'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0NSLog(@\cf32 "Font\'a0Family\'a0=\'a0%@"\cf27 ,\'a0familyName);\cf33 //
\f2 \'d7\'d6\'cc\'e5\'d7\'e5\'bf\'c6
\f6 \cf27 \'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf31 for\cf27 \'a0(NSString\'a0*fontName\'a0in\'a0[UIFont\'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0fontNamesForFamilyName:familyName])\{\'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	6	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0NSLog(@\cf32 "\\t%@"\cf27 ,\'a0fontName);\cf33 //
\f2 \'d7\'d6\'cc\'e5\'c3\'fb
\f6 \cf27 \'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	7	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	8	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\}\'a0\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	9	}\expnd0\expndtw0\kerning0
\}\'a0
\f0\fs26 \cf2 \cb13 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 \
\
stringRect = [string \cf8 boundingRectWithSize\cf2 :constraintSize\
                                              \cf8 options\cf2 :(\cf4 NSStringDrawingOptions\cf2 )(\cf8 NSStringDrawingUsesFontLeading\cf2 |\cf8 NSStringDrawingTruncatesLastVisibleLine\cf2 |\cf8 NSStringDrawingUsesLineFragmentOrigin\cf2 )\
                                           \cf8 attributes\cf2 :\cf7 @\{\cf4 NSFontAttributeName\cf2 : \cf5 self\cf2 .\cf6 statusLabel\cf2 .\cf4 font\cf7 \}\cf2 \
                                              \cf8 context\cf2 :\cf5 NULL\cf2 ];\
\
\cf4 NSMutableAttributedString\cf2  *selectedAttrituteTitle = [[\cf4 NSMutableAttributedString\cf2  \cf8 alloc\cf2 ] \cf8 initWithString\cf2 :[\cf4 NSString\cf2  \cf8 stringWithFormat\cf2 :\cf34 @"%@"\cf2 ,btnTitle]];\
    [selectedAttrituteTitle \cf8 setAttributes\cf2 :\cf7 @\{\cf4 NSForegroundColorAttributeName\cf2  : [\cf4 UIColor\cf2  \cf8 blackColor\cf2 ], \cf4 NSFontAttributeName\cf2  : \cf9 DDPingFangSCMediumFONT\cf2 (\cf7 12\cf2 )\cf7 \}\cf2  \cf8 range\cf2 :\cf8 NSMakeRange\cf2 (\cf7 0\cf2 , attrituteTitle.\cf4 length\cf2 )];\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs28 \cf4 \cb3 \CocoaLigature1 NSMutableAttributedString\cf2  *contentAttributeStr = [[\cf4 NSMutableAttributedString\cf2  \cf8 alloc\cf2 ] \cf8 initWithString\cf2 :[\cf4 NSString\cf2  \cf8 stringWithFormat\cf2 :\cf34 @"%@"\cf2 ,text]];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     [contentAttributeStr \cf8 setAttributes\cf2 :\cf7 @\{\cf4 NSForegroundColorAttributeName\cf2  : \cf9 UIColorHex\cf2 (\cf7 0xf1cbb2\cf2 ), \cf4 NSFontAttributeName\cf2  : \cf9 DDFONT\cf2 (\cf7 13\cf2 )\cf7 \}\cf2  \cf8 range\cf2 :\cf8 NSMakeRange\cf2 (\cf7 0\cf2 , contentAttributeStr.\cf4 length\cf2 )];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     
\f1\fs24 \cf0 \

\f0\fs28 \cf2     if (model.\cf6 balkNickName\cf2 .\cf4 length\cf2 ) \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2         [contentAttributeStr \cf8 appendAttributedString\cf2 :[[\cf4 NSAttributedString\cf2  \cf8 alloc\cf2 ] \cf8 initWithString\cf2 :\cf34 @" 
\f2 \'bb\'d8\'b8\'b4
\f0  "\cf2 ]];
\f1\fs24 \cf0 \

\f0\fs28 \cf2         
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \cf4 NSMutableAttributedString\cf2  *contentAppendingStr = [[\cf4 NSMutableAttributedString\cf2  \cf8 alloc\cf2 ] \cf8 initWithString\cf2 :[\cf4 NSString\cf2  \cf8 stringWithFormat\cf2 :\cf34 @"%@"\cf2 ,model.\cf6 balkNickName\cf2 ]];
\f1\fs24 \cf0 \

\f0\fs28 \cf2         [contentAppendingStr \cf8 setAttributes\cf2 :\cf7 @\{\cf4 NSForegroundColorAttributeName\cf2  : \cf9 UIColorHex\cf2 (\cf7 0xf1cbb2\cf2 ), \cf4 NSFontAttributeName\cf2  : \cf9 DDFONT\cf2 (\cf7 13\cf2 )\cf7 \}\cf2  \cf8 range\cf2 :\cf8 NSMakeRange\cf2 (\cf7 0\cf2 , contentAppendingStr.\cf4 length\cf2 )];
\f1\fs24 \cf0 \

\f0\fs28 \cf2         
\f1\fs24 \cf0 \

\f0\fs28 \cf2         [contentAttributeStr \cf8 appendAttributedString\cf2 :contentAppendingStr];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \}
\f1\fs24 \cf0 \

\f0\fs28 \cf2     
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 NSMutableAttributedString\cf2  *contentAppendingStr = [[\cf4 NSMutableAttributedString\cf2  \cf8 alloc\cf2 ] \cf8 initWithString\cf2 :[\cf4 NSString\cf2  \cf8 stringWithFormat\cf2 :\cf34 @"
\f2 \'a3\'ba
\f0 %@"\cf2 , model.\cf6 balkContent\cf2 ]];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     [contentAttributeStr \cf8 appendAttributedString\cf2 :contentAppendingStr];\
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\fs26 \cf2 \cb13 \CocoaLigature0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f1\b\fs24 \cf32 \cb10 \CocoaLigature1 {\listtext	1	}\expnd0\expndtw0\kerning0
UIFont
\b0 \cf35 \'a0*font\'a0=\'a0xxxx\'a0\cf33 //\'a0
\f2 \'d7\'d6\'cc\'e5
\f1 \cf35 \'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf12 \cb36 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0CGFloat\'a0offset\'a0=\'a0-0.7;\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf35 \cb10 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\b \cf32 NSMutableAttributedString
\b0 \cf35 \'a0*attributedString\'a0=\'a0[[NSMutableAttributedString\cf37 \'a0alloc\cf35 ]\cf37 \'a0initWithString\cf35 :placeHolder\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf12 \cb36 \kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf37 \'a0attributes\cf12 :@\{\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf35 \cb10 \kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf37 \'a0NSForegroundColorAttributeName\cf35 :\'a0
\f2 \'d1\'d5\'c9\'ab\'d6\'b5
\f1 ,\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf12 \cb36 \kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0NSFontAttributeName\'a0:\'a0font,\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf35 \cb10 \kerning1\expnd0\expndtw0 {\listtext	6	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0NSBaselineOffsetAttributeName\'a0:\'a0@(offset),\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf12 \cb36 \kerning1\expnd0\expndtw0 {\listtext	7	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}];\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf35 \cb10 \kerning1\expnd0\expndtw0 {\listtext	8	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf12 \cb36 \kerning1\expnd0\expndtw0 {\listtext	9	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf35 \cb10 \kerning1\expnd0\expndtw0 {\listtext	10	}\expnd0\expndtw0\kerning0
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0[[UITextField\cf37 \'a0appearanceWhenContainedIn\cf35 :[UISearchBar\cf37 \'a0class\cf35 ],
\b \cf32 \'a0nil
\b0 \cf37 \'a0nil\cf35 ]\cf37 \'a0setAttributedPlaceholder\cf35 :attributedString];\'a0
\f3\fs28 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\
\
\
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb13 \kerning1\expnd0\expndtw0 \CocoaLigature0 - (\cf4 CAShapeLayer\cf2  *)addLineOriginPoint:(\cf4 CGPoint\cf2 )p0 toPoint:(\cf4 CGPoint\cf2 )p1 color:(\cf4 UIColor\cf2  *)color borderWidth:(\cf4 CGFloat\cf2 )borderWidth \{\
    \cf22 /// 
\f2 \'cf\'df\'b5\'c4\'c2\'b7\'be\'b6
\f0 \cf2 \
    \cf4 UIBezierPath\cf2  * bezierPath = [\cf4 UIBezierPath\cf2  \cf8 bezierPath\cf2 ];\
    [bezierPath \cf8 moveToPoint\cf2 :p0];\
    [bezierPath \cf8 addLineToPoint\cf2 :p1];\
    \
    \cf4 CAShapeLayer\cf2  * shapeLayer = [\cf4 CAShapeLayer\cf2  \cf8 layer\cf2 ];\
    shapeLayer.\cf4 strokeColor\cf2  = color.\cf4 CGColor\cf2 ;\
    shapeLayer.\cf4 fillColor\cf2   = [\cf4 UIColor\cf2  \cf8 clearColor\cf2 ].\cf4 CGColor\cf2 ;\
    \cf22 /// 
\f2 \'cc\'ed\'bc\'d3\'c2\'b7\'be\'b6
\f0 \cf2 \
    shapeLayer.\cf4 path\cf2  = bezierPath.\cf4 CGPath\cf2 ;\
    \cf22 /// 
\f2 \'cf\'df\'bf\'ed\'b6\'c8
\f0 \cf2 \
    shapeLayer.\cf4 lineWidth\cf2  = borderWidth;\
    \cf5 return\cf2  shapeLayer;\
\}
\f3\fs28 \cf0 \cb10 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0

\f2 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f0 \cf4 \cb3 \kerning1\expnd0\expndtw0 UIBezierPath\cf2  *maskPath = [\cf4 UIBezierPath\cf2  \cf8 bezierPathWithRoundedRect\cf2 :cellBounds \cf8 byRoundingCorners\cf2 :\cf8 UIRectCornerTopLeft\cf2  | \cf8 UIRectCornerTopRight\cf2  \cf8 cornerRadii\cf2 :\cf8 CGSizeMake\cf2 (\cf7 15\cf2 , \cf7 15\cf2 )];
\f1\fs24 \cf0 \

\f0\fs28 \cf2                 
\f1\fs24 \cf0 \

\f0\fs28 \cf2                 \cf4 CAShapeLayer\cf2  *maskLayer = [[\cf4 CAShapeLayer\cf2  \cf8 alloc\cf2 ] \cf8 init\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2                 
\f1\fs24 \cf0 \

\f0\fs28 \cf2                 maskLayer.\cf4 frame\cf2  = cellBounds;
\f1\fs24 \cf0 \

\f0\fs28 \cf2                 
\f1\fs24 \cf0 \

\f0\fs28 \cf2                 maskLayer.\cf4 path\cf2  = maskPath.\cf4 CGPath\cf2 ;
\f1\fs24 \cf0 \

\f0\fs28 \cf2                 
\f1\fs24 \cf0 \

\f0\fs28 \cf2                 cell.\cf4 layer\cf2 .\cf4 mask\cf2  = maskLayer;
\f2 \cf0 \cb10 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f0\fs26 \cf22 \cb13 \kerning1\expnd0\expndtw0 \CocoaLigature0 //- (void)downLoadMusicWithModel:(WWMusicModel *)model Progress:(void (^)(NSProgress *))progressBlock Success:(SuccessStringBlock)success Fail:(FailBlock)fail\{\cf2 \
\cf22 //    \cf2 \
\cf22 //    NSString *url = model.music_desc;\cf2 \
\cf22 //    NSLog(@"
\f2 \'cf\'c2\'d4\'d8
\f0 mp3 = %@",url);\cf2 \
\cf22 //    \cf2 \
\cf22 //    NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];\cf2 \
\cf22 //    AFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];\cf2 \
\cf22 //    \cf2 \
\cf22 //    NSURL *URL = [NSURL URLWithString:url];\cf2 \
\cf22 //    NSURLRequest *request = [NSURLRequest requestWithURL:URL];\cf2 \
\cf22 //    NSURLSessionDownloadTask *downloadTask = [manager downloadTaskWithRequest:request progress:^(NSProgress * _Nonnull downloadProgress) \{\cf2 \
\cf22 //        progressBlock(downloadProgress);\cf2 \
\cf22 //    \} destination:^NSURL * _Nonnull(NSURL * _Nonnull targetPath, NSURLResponse * _Nonnull response) \{\cf2 \
\cf22 //        NSURL *documentsDirectoryURL = [[NSFileManager defaultManager] URLForDirectory:NSDocumentDirectory inDomain:NSUserDomainMask appropriateForURL:nil create:NO error:nil];\cf2 \
\cf22 //        NSURL *returnURL = [documentsDirectoryURL URLByAppendingPathComponent:[response suggestedFilename]];\cf2 \
\cf22 //        return returnURL;\cf2 \
\cf22 //    \} completionHandler:^(NSURLResponse * _Nonnull response, NSURL * _Nullable filePath, NSError * _Nullable error) \{\cf2 \
\cf22 //        if (!error) \{\cf2 \
\cf22 //            NSLog(@"F
\f2 \'ce\'c4\'bc\'fe\'cf\'c2\'d4\'d8\'b5\'bd
\f0 : %@", filePath);\cf2 \
\cf22 //            NSString *filePathStr = [NSString stringWithFormat:@"%@",filePath];\cf2 \
\cf22 //            filePathStr = [filePathStr substringWithRange:NSMakeRange(8, filePathStr.length - 8)];\cf2 \
\cf22 //            [[MusicCacheManager sharedManager] saveMusicArrayWithModel:model];\cf2 \
\cf22 //            \cf2 \
\cf22 //            success(filePathStr);\cf2 \
\cf22 //        \}else\{\cf2 \
\cf22 //            fail(error.localizedDescription);\cf2 \
\cf22 //        \}\cf2 \
\cf22 //    \}];\cf2 \
\cf22 //    [downloadTask resume];\cf2 \
\cf22 //\}\
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f2\fs28 \cf0 \cb10 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f0\fs26 \cf22 \cb13 \kerning1\expnd0\expndtw0 \CocoaLigature0 //    UIImage *backButtonImage = [UIImage imageNamed:@"fabugushi_back_btn_red"];\cf2 \
\cf22 //    [self.backButton setImage:[backButtonImage imageWithRenderingMode:(UIImageRenderingModeAlwaysTemplate)] forState:UIControlStateNormal];\cf2 \
\cf22 //    [self.backButton setTintColor:UIColorHex(0x7269ff)];\
\
\cf4 NSString\cf2  *script = [\cf4 NSString\cf2  \cf8 stringWithFormat\cf2 :\
                        \cf34 @"var script = document.createElement('script');"\cf2 \
                        \cf34 "script.type = 'text/javascript';"\cf2 \
                        \cf34 "script.text = \\"function ResizeImages() \{ "\cf2 \
                        \cf34 "var img;"\cf2 \
                        \cf34 "var maxwidth=%f;"\cf2 \
                        \cf34 "for(i=0;i <document.images.length;i++)\{"\cf2 \
                        \cf34 "img = document.images[i];"\cf2 \
                        \cf34 "if(img.width > maxwidth)\{"\cf2 \
                        \cf34 "img.width = maxwidth;"\cf2 \
                        \cf34 "\}"\cf2 \
                        \cf34 "\}"\cf2 \
                        \cf34 "\}\\";"\cf2 \
                        \cf34 "document.getElementsByTagName('head')[0].appendChild(script);"\cf2 , \cf9 SCREEN_WIDTH\cf2  - \cf7 20\cf2 ];\
    [webView \cf8 stringByEvaluatingJavaScriptFromString\cf2 : script];\
    [webView \cf8 stringByEvaluatingJavaScriptFromString\cf2 :\cf34 @"ResizeImages();"\cf2 ];\
\
\
\pard\pardeftab720\partightenfactor0

\f2\b\fs68 \cf11 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'ca\'b9\'d3\'c3
\f7 WebViewJavascriptBridge
\f2 \'ca\'b5\'cf\'d6
\f7 OC
\f2 \'d3\'eb
\f7 JS
\f2 \'bd\'bb\'bb\'a5
\f0\b0\fs26 \cf2 \cb13 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\partightenfactor0

\f7\b\fs32 \cf0 \cb1 \CocoaLigature1 JS
\f2 \'b5\'f7\'d3\'c3
\f7 OC
\b0 \cf38 \expnd0\expndtw0\kerning0
\
/***\
      /@param registerHandler 
\f2 \'d2\'aa\'d7\'a2\'b2\'e1\'b5\'c4\'ca\'c2\'bc\'fe\'c3\'fb\'b3\'c6
\f7 (
\f2 \'d5\'e2\'c0\'ef\'ce\'d2\'c3\'c7\'ce\'aa
\f7 loginFunc)\
      /@param handel 
\f2 \'bb\'d8\'b5\'f7
\f7 block
\f2 \'ba\'af\'ca\'fd
\f7  
\f2 \'b5\'b1\'ba\'f3\'cc\'a8\'b4\'a5\'b7\'a2\'d5\'e2\'b8\'f6\'ca\'c2\'bc\'fe\'b5\'c4\'ca\'b1\'ba\'f2\'bb\'e1\'d6\'b4\'d0\'d0
\f7 block
\f2 \'c0\'ef\'c3\'e6\'b5\'c4\'b4\'fa\'c2\'eb
\f7 \
***/\
     [_bridge registerHandler:@"loginFunc" handler:^(id data, WVJBResponseCallback responseCallback) \{\
     // data 
\f2 \'ba\'f3\'cc\'a8\'b4\'ab\'b9\'fd\'c0\'b4\'b5\'c4\'b2\'ce\'ca\'fd
\f7 ,
\f2 \'c0\'fd\'c8\'e7\'d3\'c3\'bb\'a7\'c3\'fb\'a1\'a2\'c3\'dc\'c2\'eb\'b5\'c8
\f7 \
                NSLog(@"testObjcCallback called: %@", data);\
     //
\f2 \'be\'df\'cc\'e5\'b5\'c4\'b5\'c7\'c2\'bc\'ca\'c2\'bc\'fe\'b5\'c4\'ca\'b5\'cf\'d6
\f7 ,
\f2 \'d5\'e2\'c0\'ef\'b5\'c4
\f7 login
\f2 \'b4\'fa\'b1\'ed\'ca\'b5\'cf\'d6\'b5\'c7\'c2\'bc\'b9\'a6\'c4\'dc\'b5\'c4\'d2\'bb\'b8\'f6
\f7 OC
\f2 \'ba\'af\'ca\'fd\'a1\'a3
\f7 \
                [self login];   \
     // responseCallback 
\f2 \'b8\'f8\'ba\'f3\'cc\'a8\'b5\'c4\'bb\'d8\'b8\'b4
\f7     \
                responseCallback(@"Response from testObjcCallback");\
      \}];\

\b \cf0 \kerning1\expnd0\expndtw0 OC
\f2 \'b5\'f7\'d3\'c3
\f7 JS
\b0 \cf38 \expnd0\expndtw0\kerning0
\
//
\f2 \'b2\'bb\'d0\'e8\'d2\'aa\'b4\'ab\'b2\'ce\'ca\'fd
\f7 ,
\f2 \'b2\'bb\'d0\'e8\'d2\'aa\'ba\'f3\'cc\'a8\'b7\'b5\'bb\'d8\'d6\'b4\'d0\'d0\'bd\'e1\'b9\'fb
\f7 \
      [_bridge callHandler:@"registerFunc"];\
//
\f2 \'d0\'e8\'d2\'aa\'b4\'ab\'b2\'ce\'ca\'fd
\f7 ,
\f2 \'b2\'bb\'d0\'e8\'d2\'aa\'b4\'d3\'ba\'f3\'cc\'a8\'b7\'b5\'bb\'d8\'d6\'b4\'d0\'d0\'bd\'e1\'b9\'fb
\f7 \
/***\
       @param callHandler 
\f2 \'c9\'cc\'b6\'a8\'b5\'c4\'ca\'c2\'bc\'fe\'c3\'fb\'b3\'c6
\f7 ,
\f2 \'d3\'c3\'c0\'b4\'b5\'f7\'d3\'c3\'cd\'f8\'d2\'b3\'c0\'ef\'c3\'e6\'cf\'e0\'d3\'a6\'b5\'c4\'ca\'c2\'bc\'fe\'ca\'b5\'cf\'d6
\f7 \
       @param data id
\f2 \'c0\'e0\'d0\'cd
\f7 ,
\f2 \'cf\'e0\'b5\'b1\'d3\'da\'ce\'d2\'c3\'c7\'ba\'af\'ca\'fd\'d6\'d0\'b5\'c4\'b2\'ce\'ca\'fd
\f7 ,
\f2 \'cf\'f2\'cd\'f8\'d2\'b3\'b4\'ab\'b5\'dd\'ba\'af\'ca\'fd\'d6\'b4\'d0\'d0\'d0\'e8\'d2\'aa\'b5\'c4\'b2\'ce\'ca\'fd
\f7 \
***/\
     [_bridge callHandler:@"registerFunc" data:@"name"];\
    //
\f2 \'d0\'e8\'d2\'aa\'b4\'ab\'b2\'ce\'ca\'fd
\f7 ,
\f2 \'d0\'e8\'d2\'aa\'b4\'d3\'ba\'f3\'cc\'a8\'b7\'b5\'bb\'d8\'d6\'b4\'d0\'d0\'bd\'e1\'b9\'fb
\f7 \
     [_bridge callHandler:@"registerFunc" data:@"name" responseCallback:^(id responseData) \{\
\
             NSLog(@"
\f2 \'ba\'f3\'cc\'a8\'d6\'b4\'d0\'d0\'cd\'ea\'b3\'c9\'ba\'f3\'b7\'b5\'bb\'d8\'b5\'c4\'ca\'fd\'be\'dd
\f7 ");\
\
      \}];\

\f2\b \cf0 \kerning1\expnd0\expndtw0 \'b7\'a2\'cb\'cd\'cf\'fb\'cf\'a2
\f0\b0\fs26 \cf2 \cb13 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf2 //
\f2 \'b2\'bb\'d0\'e8\'d2\'aa\'ba\'f3\'cc\'a8\'b7\'b5\'bb\'d8\'d6\'b4\'d0\'d0\'bd\'e1\'b9\'fb\'bb\'f2\'ca\'fd\'be\'dd
\f0 \
      [_bridge send:@"
\f2 \'ba\'ec\'c9\'ab
\f0 "];\
//
\f2 \'d0\'e8\'d2\'aa\'ba\'f3\'cc\'a8\'b7\'b5\'bb\'d8\'d6\'b4\'d0\'d0\'bd\'e1\'b9\'fb\'bb\'f2\'ca\'fd\'be\'dd
\f0 \
      [_bridge send:@"
\f2 \'ba\'ec\'c9\'ab
\f0 " responseCallback:^(id responseData) \{\
        NSLog(@"
\f2 \'ba\'f3\'cc\'a8\'d6\'b4\'d0\'d0\'cd\'ea\'b3\'c9\'ba\'f3\'b7\'b5\'bb\'d8\'b5\'c4\'ca\'fd\'be\'dd
\f0  %@", responseData);\
      \}];\
\
\
\
- (void)webViewDidFinishLoad:(UIWebView *)webView\
\{\
//
\f2 \'b7\'bd\'b7\'a8
\f0 1 
\f2 \'ca\'b5\'bc\'ca\'ca\'b9\'d3\'c3
\f0 js
\f2 \'b7\'bd\'b7\'a8\'ca\'b5\'cf\'d6
\f0 \
CGFloat documentWidth = [[webView stringByEvaluatingJavaScriptFromString:@"document.getElementById('content').offsetWidth"] floatValue];\
CGFloat documentHeight = [[webView stringByEvaluatingJavaScriptFromString:@"document.getElementById(\\"content\\").offsetHeight;"] floatValue];\
NSLog(@"documentSize = \{%f, %f\}", documentWidth, documentHeight);\
\
[webView evaluateJavaScript:\cf34 @"document.body.scrollHeight"\cf2 completionHandler:^(\cf5 id\cf2  \cf5 _Nullable\cf2  result,NSError *\cf5 _Nullable\cf2  error) \{\
        \cf22 //
\f2 \'bb\'f1\'c8\'a1\'d2\'b3\'c3\'e6\'b8\'df\'b6\'c8\'a3\'ac\'b2\'a2\'d6\'d8\'d6\'c3
\f0 webview
\f2 \'b5\'c4
\f0 frame\cf2 \
        CGFloat documentHeight = [result doubleValue];\
        [UIView animateWithDuration:\cf7 0.2\cf2  animations:^\{\
            scr.contentSize = CGSizeMake(scrW, \cf7 80\cf2  + documentHeight);\
            detailWeb.frame = CGRectMake(\cf7 0\cf2 , \cf7 0\cf2 , scrW, documentHeight);\
        \}completion:^(\cf5 BOOL\cf2  finished) \{\
            \cf5 if\cf2  ((\cf5 int\cf2 )documentHeight != \cf7 0\cf2 ) \{\
                shareView.frame = CGRectMake(\cf7 0\cf2 , maxY(detailWeb), scrW, \cf7 80\cf2 );\
                [shareView createShareViewUI];\
            \}\
        \}];\
    \}];\
\
//
\f2 \'b7\'bd\'b7\'a8
\f0 2\
CGRect frame = webView.frame;\
frame.size.width = 768;\
frame.size.height = 1;\
//    webView.scrollView.scrollEnabled = NO;\
webView.frame = frame;\
frame.size.height = webView.scrollView.contentSize.height;\
NSLog(@"frame = %@", [NSValue valueWithCGRect:frame]);\
webView.frame = frame;\
\}\
\
        \cf4 CGSize\cf2  actualSize = [webView \cf8 sizeThatFits\cf2 :\cf4 CGSizeZero\cf2 ];\
        \cf4 CGRect\cf2  newFrame = webView.\cf4 frame\cf2 ;\
        newFrame.\cf4 size\cf2 .\cf4 height\cf2  = actualSize.\cf4 height\cf2 ;\
        \cf5 self\cf2 .\cf6 contentWebview\cf2 .\cf4 frame\cf2  = newFrame;\
        \cf5 self\cf2 .\cf6 contentWebviewHeight\cf2  = newFrame.\cf4 size\cf2 .\cf4 height\cf2 ;\
        \cf8 NSLog\cf2 (\cf34 @"frame = %@"\cf2 , [\cf4 NSValue\cf2  \cf8 valueWithCGRect\cf2 :newFrame]);\
//
\f2 \'b7\'bd\'b7\'a8
\f0 3\
\cf4 NSString\cf2  * htmlcontent = [\cf4 NSString\cf2  \cf8 stringWithFormat\cf2 :\cf34 @"<div id=\\"webview_content_wrapper\\">%@</div>"\cf2 , model.\cf6 content\cf2 ];\
    [\cf5 self\cf2 .\cf6 contentWebview\cf2  \cf8 loadHTMLString\cf2 :htmlcontent \cf8 baseURL\cf2 :\cf5 nil\cf2 ];\
\cf22 //
\f2 \'bb\'f1\'c8\'a1\'d2\'b3\'c3\'e6\'b8\'df\'b6\'c8\'a3\'a8\'cf\'f1\'cb\'d8\'a3\'a9
\f0 \cf2 \
    \cf4 NSString\cf2  * clientheight_str = [webView \cf8 stringByEvaluatingJavaScriptFromString\cf2 : \cf34 @"document.body.offsetHeight"\cf2 ];\
    \cf5 float\cf2  clientheight = [clientheight_str \cf8 floatValue\cf2 ];\
    \cf22 //
\f2 \'c9\'e8\'d6\'c3\'b5\'bd
\f0 WebView
\f2 \'c9\'cf
\f0 \cf2 \
    webView.\cf4 frame\cf2  = \cf8 CGRectMake\cf2 (\cf7 0\cf2 , \cf7 0\cf2 , webView.\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 width\cf2 , clientheight);\
    \cf22 //
\f2 \'bb\'f1\'c8\'a1
\f0 WebView
\f2 \'d7\'ee\'bc\'d1\'b3\'df\'b4\'e7\'a3\'a8\'b5\'e3\'a3\'a9
\f0 \cf2 \
    \cf4 CGSize\cf2  frame = [webView \cf8 sizeThatFits\cf2 :webView.\cf4 frame\cf2 .\cf4 size\cf2 ];\
    \
    \cf4 NSString\cf2  * height_str= [webView \cf8 stringByEvaluatingJavaScriptFromString\cf2 : \cf34 @"document.getElementById('webview_content_wrapper').offsetHeight + parseInt(window.getComputedStyle(document.getElementsByTagName('body')[0]).getPropertyValue('margin-top'))  + parseInt(window.getComputedStyle(document.getElementsByTagName('body')[0]).getPropertyValue('margin-bottom'))"\cf2 ];\
    \cf5 float\cf2  height = [height_str \cf8 floatValue\cf2 ];\
    \cf22 //
\f2 \'c4\'da\'c8\'dd\'ca\'b5\'bc\'ca\'b8\'df\'b6\'c8\'a3\'a8\'cf\'f1\'cb\'d8\'a3\'a9
\f0 * 
\f2 \'b5\'e3\'ba\'cd\'cf\'f1\'cb\'d8\'b5\'c4\'b1\'c8
\f0 \cf2 \
    height = height * frame.\cf4 height\cf2  / clientheight;\
    \cf22 //
\f2 \'d4\'d9\'b4\'ce\'c9\'e8\'d6\'c3
\f0 WebView
\f2 \'b8\'df\'b6\'c8\'a3\'a8\'b5\'e3\'a3\'a9
\f0 \cf2 \
    webView.\cf4 frame\cf2  = \cf8 CGRectMake\cf2 (\cf7 0\cf2 , \cf7 0\cf2 , \cf5 self\cf2 .\cf4 view\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 width\cf2 , height);\
//
\f2 \'b7\'bd\'b7\'a8
\f0 4\
\cf22 //-(void)webViewDidFinishLoad:(UIWebView *)webView\{\cf2 \
\cf22 //    NSString *cssString = @"img\{max-width: 100%;-webkit-border-radius: 20px;border-radius: 20px;border: 0px solid black;\} body\{word-wrap:break-word;\}";\cf2 \
\cf22 //    NSString *javascriptString = @"var style = document.createElement('style'); style.innerHTML = '%@'; document.head.appendChild(style)";\cf2 \
\cf22 //    NSString *javascriptWithCSSString = [NSString stringWithFormat:javascriptString, cssString];\cf2 \
\cf22 //    [webView stringByEvaluatingJavaScriptFromString: javascriptWithCSSString];\cf2 \
\cf22 //    \cf2 \
\cf22 //    \cf2 \
\cf22 //    //
\f2 \'bb\'f1\'c8\'a1\'d2\'b3\'c3\'e6\'b8\'df\'b6\'c8\'a3\'a8\'cf\'f1\'cb\'d8\'a3\'a9
\f0 \cf2 \
\cf22 //    NSString * clientheight_str = [webView stringByEvaluatingJavaScriptFromString: @"document.body.offsetHeight"];\cf2 \
\cf22 //    float clientheight = [clientheight_str floatValue];\cf2 \
\cf22 //    //
\f2 \'c9\'e8\'d6\'c3\'b5\'bd
\f0 WebView
\f2 \'c9\'cf
\f0 \cf2 \
\cf22 //    webView.frame = CGRectMake(0, 0, webView.frame.size.width, clientheight);\cf2 \
\cf22 //    //
\f2 \'bb\'f1\'c8\'a1
\f0 WebView
\f2 \'d7\'ee\'bc\'d1\'b3\'df\'b4\'e7\'a3\'a8\'b5\'e3\'a3\'a9
\f0 \cf2 \
\cf22 //    CGSize frame = [webView sizeThatFits:webView.frame.size];\cf2 \
\cf22 //    \cf2 \
\cf22 //    NSString * height_str= [webView stringByEvaluatingJavaScriptFromString: @"document.getElementById('webview_content_wrapper').offsetHeight + parseInt(window.getComputedStyle(document.getElementsByTagName('body')[0]).getPropertyValue('margin-top'))  + parseInt(window.getComputedStyle(document.getElementsByTagName('body')[0]).getPropertyValue('margin-bottom'))"];\cf2 \
\cf22 //    float height = [height_str floatValue];\cf2 \
\cf22 //    //
\f2 \'c4\'da\'c8\'dd\'ca\'b5\'bc\'ca\'b8\'df\'b6\'c8\'a3\'a8\'cf\'f1\'cb\'d8\'a3\'a9
\f0 * 
\f2 \'b5\'e3\'ba\'cd\'cf\'f1\'cb\'d8\'b5\'c4\'b1\'c8
\f0 \cf2 \
\cf22 //    height = height * frame.height / clientheight;\cf2 \
\cf22 //    //
\f2 \'d4\'d9\'b4\'ce\'c9\'e8\'d6\'c3
\f0 WebView
\f2 \'b8\'df\'b6\'c8\'a3\'a8\'b5\'e3\'a3\'a9
\f0 \cf2 \
\cf22 //    webView.frame = CGRectMake(0, 0, self.contentWebview.frame.size.width, height);\cf2 \
\cf22 //    self.contentWebviewHeight = height;\cf2 \
\cf22 //    [self.tableView reloadData];\cf2 \
\cf22 //    \cf2 \
\cf22 //\}\cf2 \
\
\cf22 //- (void)webView:(WKWebView *)webView didFinishNavigation:(WKNavigation *)navigation\cf2 \
\cf22 //\{\cf2 \
\cf22 //    NSString *cssString = @"img\{max-width: 100%;-webkit-border-radius: 20px;border-radius: 20px;border: 0px solid black;\} body\{word-wrap:break-word;\}";\cf2 \
\cf22 //    NSString *javascriptString = @"var style = document.createElement('style'); style.innerHTML = '%@'; document.head.appendChild(style)";\cf2 \
\cf22 //    NSString *javascriptWithCSSString = [NSString stringWithFormat:javascriptString, cssString];\cf2 \
\cf22 //    [webView evaluateJavaScript:javascriptWithCSSString completionHandler:^(id _Nullable result, NSError * _Nullable error) \{\cf2 \
\cf22 //        [webView evaluateJavaScript:@"document.body.scrollHeight"completionHandler:^(id _Nullable result,NSError *_Nullable error) \{\cf2 \
\cf22 //            CGFloat documentHeight = [result doubleValue];\cf2 \
\cf22 //            self.contentWebviewHeight = documentHeight;\cf2 \
\cf22 //            [UIView animateWithDuration:0.2 animations:^\{\cf2 \
\cf22 //                CGRect webFrame = self.contentWebview.frame;\cf2 \
\cf22 //                webFrame.size.height = documentHeight;\cf2 \
\cf22 //                self.contentWebview.frame = webFrame;\cf2 \
\cf22 //            \}completion:^(BOOL finished) \{\cf2 \
\cf22 //                [self.tableView reloadData];\cf2 \
\cf22 //            \}];\cf2 \
\cf22 //        \}];\cf2 \
\cf22 //    \}];\cf2 \
\cf22 //\}\cf2 \
\
-(\cf4 UIView\cf2  *)hitTest:(\cf4 CGPoint\cf2 )point withEvent:(\cf4 UIEvent\cf2  *)event\{\
    \
    \cf4 UIView\cf2  *hitView = [\cf5 super\cf2  \cf8 hitTest\cf2 :point \cf8 withEvent\cf2 :event];\
    \cf5 if\cf2 (hitView ==\cf5 self\cf2  && \cf8 CGRectContainsPoint\cf2 (\cf8 CGRectMake\cf2 (\cf7 0\cf2 , \cf7 0\cf2 , \cf9 SCREEN_WIDTH\cf2  - \cf7 60\cf2 , \cf5 self\cf2 .\cf4 bounds\cf2 .\cf4 size\cf2 .\cf4 height\cf2 ), point)) \{\
        \cf5 return\cf2  \cf5 self\cf2 ;\
    \}\cf5 else\cf2   \cf5 if\cf2 (hitView ==\cf5 self\cf2  && !\cf8 CGRectContainsPoint\cf2 (\cf8 CGRectMake\cf2 (\cf7 0\cf2 , \cf7 0\cf2 , \cf9 SCREEN_WIDTH\cf2  - \cf7 60\cf2 , \cf5 self\cf2 .\cf4 bounds\cf2 .\cf4 size\cf2 .\cf4 height\cf2 ), point)) \{\
        \cf5 return\cf2   \cf5 nil\cf2 ;\
    \}\cf5 else\cf2 \{\
        \cf5 return\cf2   hitView;\
    \}\
\}\
\cf22 \
\
\cf2 - (\cf4 CGFloat\cf2 )screenViewY \{\
    \cf4 CGFloat\cf2  y = \cf7 0\cf2 ;\
    \cf5 for\cf2  (\cf4 UIView\cf2 * view = \cf5 self\cf2 ; view; view = view.\cf4 superview\cf2 ) \{\
        y += view.\cf6 y\cf2 ;\
        \
        \cf5 if\cf2  ([view \cf8 isKindOfClass\cf2 :[\cf4 UIScrollView\cf2  \cf8 class\cf2 ]]) \{\
            \cf4 UIScrollView\cf2 * scrollView = (\cf4 UIScrollView\cf2 *)view;\
            y -= scrollView.\cf4 contentOffset\cf2 .\cf4 y\cf2 ;\
        \}\
    \}\
    \cf5 return\cf2  y;\
\}\cf22 \
\
\cf2 - (\cf4 UIView\cf2  *)hitTest:(\cf4 CGPoint\cf2 )point withEvent:(\cf4 UIEvent\cf2  *)event \{\
    \cf5 if\cf2  (!\cf5 self\cf2 .\cf8 isUserInteractionEnabled\cf2  || \cf5 self\cf2 .\cf8 isHidden\cf2  || \cf5 self\cf2 .\cf4 alpha\cf2  <= \cf7 0.01\cf2 ) \{\
        \cf5 return\cf2  \cf5 nil\cf2 ;\
    \}\
    \cf4 CGRect\cf2  touchRect = \cf8 CGRectMake\cf2 (\cf7 0\cf2 , \cf7 0\cf2 , \cf9 SCREEN_WIDTH\cf2 , \cf7 44\cf2 );\
    \cf5 if\cf2  (\cf8 CGRectContainsPoint\cf2 (touchRect, point)) \{\
        \cf5 for\cf2  (\cf4 UIView\cf2  *subview \cf5 in\cf2  [\cf5 self\cf2 .\cf4 subviews\cf2  \cf8 reverseObjectEnumerator\cf2 ]) \{\
            \cf4 CGPoint\cf2  convertedPoint = [subview \cf8 convertPoint\cf2 :point \cf8 fromView\cf2 :\cf5 self\cf2 ];\
            \cf4 UIView\cf2  *hitTestView = [subview \cf8 hitTest\cf2 :convertedPoint \cf8 withEvent\cf2 :event];\
            \cf5 if\cf2  (hitTestView) \{\
                \cf5 return\cf2  hitTestView;\
            \}\
        \}\
        \cf5 return\cf2  \cf5 self\cf2 ;\
    \}\
    \cf5 return\cf2  \cf5 self\cf2 ;\
\}\cf22 \
\
\
\pard\pardeftab720\partightenfactor0

\f8\b\fs42 \cf0 \cb10 \expnd0\expndtw0\kerning0
\CocoaLigature1 anchorPoint
\f2 \'a1\'a2
\f8 position
\f2 \'a1\'a2
\f8 frame
\f2 \'d6\'ae\'bc\'e4\'b5\'c4\'cf\'e0\'b6\'d4\'b9\'d8\'cf\'b5
\f8 .\cb13 \
\pard\pardeftab720\partightenfactor0

\f2\b0\fs24 \cf0 \cb10 \'ca\'d7\'cf\'c8\'c5\'aa\'c7\'e5\'b3\'fe\'d5\'e2\'c8\'fd\'b8\'f6\'ca\'f4\'d0\'d4\'b1\'ed\'ca\'be\'ca\'b2\'c3\'b4
\f8 . 
\f2 \'bb\'d8\'b9\'cb\'d2\'bb\'cf\'c2\'c9\'cf\'c3\'e6\'bd\'b2\'b5\'c4
\f8 .\cb13 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf0 \cb10 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
frame
\f2 \'d6\'d0\'b5\'c4
\f8 X,Y
\f2 \'b1\'ed\'ca\'be
\f8 sublayer
\f2 \'d7\'f3\'c9\'cf\'bd\'c7\'cf\'e0\'b6\'d4\'d3\'da
\f8 supLayer
\f2 \'b5\'c4\'d7\'f3\'c9\'cf\'bd\'c7\'b5\'c4\'be\'e0\'c0\'eb
\f8 \cb13 \
\ls3\ilvl0\cb10 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
position
\f2 \'d6\'d0\'b5\'c4
\f8 X,Y
\f2 \'b1\'ed\'ca\'be
\f8 sublay
\f2 \'c3\'aa\'b5\'e3\'cf\'e0\'b6\'d4\'d3\'da
\f8 supLayer
\f2 \'b5\'c4\'d7\'f3\'c9\'cf\'bd\'c7\'b5\'c4\'be\'e0\'c0\'eb
\f8 \cb13 \
\ls3\ilvl0\cb10 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
anchorPoint
\f2 \'d6\'d0\'b5\'c4
\f8 X,Y
\f2 \'b1\'ed\'ca\'be\'c3\'aa\'b5\'e3\'b5\'c4
\f8 x,y
\f2 \'b5\'c4\'cf\'e0\'b6\'d4\'be\'e0\'c0\'eb\'b1\'c8\'c0\'fd\'d6\'b5
\f8 \cb13 \
\pard\pardeftab720\partightenfactor0

\f2\b\fs32 \cf0 \cb10 \'b5\'b1\'c8\'b7\'b6\'a8\'c3\'aa\'b5\'e3
\f8 ,
\f2 \'b8\'c4\'b1\'e4
\f8 frame
\f2 \'ca\'b1
\f8 , position
\f2 \'b5\'c4\'d6\'b5\'ce\'aa
\f8 :\cb13 \
\pard\pardeftab720\partightenfactor0

\f2\b0\fs24 \cf0 \cb10 position.x = frame.origin.x + anchorPoint.x * bounds.size.width\'a3\'bb  \
position.y = frame.origin.y + anchorPoint.y * bounds.size.height\'a3\'bb\cb13 \
\pard\pardeftab720\partightenfactor0

\b\fs32 \cf0 \cb10 \'c8\'b7\'b6\'a8\'c3\'aa\'b5\'e3
\f8 , 
\f2 \'b8\'c4\'b1\'e4
\f8 position
\f2 \'ca\'b1
\f8 , frame
\f2 \'b5\'c4\'d6\'b5\'ce\'aa
\f8 :\cb13 \
\pard\pardeftab720\partightenfactor0

\f2\b0\fs24 \cf0 \cb10 frame.origin.x = position.x - anchorPoint.x * bounds.size.width\'a3\'bb  \
frame.origin.y = position.y - anchorPoint.y * bounds.size.height\'a3\'bb\cb13 \
\pard\pardeftab720\partightenfactor0

\b\fs32 \cf0 \cb10 \'b8\'c4\'b1\'e4\'c3\'aa\'b5\'e3
\f8 , frame
\f2 \'b5\'c4\'d6\'b5\'b1\'e4\'bb\'af\'ce\'aa
\f8 \cb13 \
\pard\pardeftab720\partightenfactor0

\f2\b0\fs24 \cf0 \cb10 frame.origin.x = - anchorPoint.x * bounds.size.width + position.x\'a3\'bb  \
frame.origin.y = - anchorPoint.y * bounds.size.height + position.y\'a3\'bb\cb13 \
\pard\pardeftab720\partightenfactor0

\b\fs32 \cf0 \cb10 \'d3\'b0\'cf\'ec\'b9\'d8\'cf\'b5
\f8 \cb13 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0
\b0\fs24 \cf0 \cb10 \kerning1\expnd0\expndtw0 {\listtext	\'95	}
\f2 \expnd0\expndtw0\kerning0
\'c3\'aa\'b5\'e3\'b8\'c4\'b1\'e4
\f8 , position
\f2 \'b2\'bb\'d3\'b0\'cf\'ec
\f8 , frame
\f2 \'b1\'e4\'bb\'af
\f8 \cb13 \
\ls4\ilvl0\cb10 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
frame
\f2 \'b1\'e4\'bb\'af
\f8 , 
\f2 \'c3\'aa\'b5\'e3\'b2\'bb\'d3\'b0\'cf\'ec
\f8 , position
\f2 \'b1\'e4\'bb\'af
\f8 \cb13 \
\ls4\ilvl0\cb10 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
position
\f2 \'b1\'e4\'bb\'af
\f8 , 
\f2 \'c3\'aa\'b5\'e3\'b2\'bb\'d3\'b0\'cf\'ec
\f8 , frame
\f2 \'b1\'e4\'bb\'af
\f0\fs26 \cf22 \cb13 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf22 \
\
 for(UIView*window in [UIApplication sharedApplication].windows)\
    \{\
        if([window isKindOfClass:NSClassFromString(@"UIRemoteKeyboardWindow")])\
        \{\
           UIView *backView = [[UIView alloc]initWithFrame:[UIScreen mainScreen].bounds];\
            backView.backgroundColor = [UIColor blackColor];\
            backView.alpha=0.5;\
            [window addSubview:backView];\
            \
            dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(2 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^\{\
                [backView removeFromSuperview];\
            \});\
        \}\
        \
    \}\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f2\fs28 \cf0 \cb10 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
iPhone Portrait iOS 5,6\
\'c6\'d5\'cd\'a8\'c6\'c1\'c4\'bb(\'b7\'c7Retina\'c6\'c1\'a3\'a9\'a3\'ba 320 x 480         \'c3\'fc\'c3\'fbLaunchImage-1.png\
for iPhoen4s/4(@2x) :  640 x 960           \'c3\'fc\'c3\'fbLaunchImage-1@2x.png\
for iPhoen5s/5(@2x) :  640 x 1136          \'c3\'fc\'c3\'fbLaunchImage-1-700-568h@2x.png\
iPhone Portrait iOS 8,9\
for iPhone 6 plus (@3x) : 1242 x 2208     \'c3\'fc\'c3\'fbLaunchImage-1-800-Portrait-736h@3x.png\
for iPhone 6(@2x) :    750 x 1334           \'c3\'fc\'c3\'fbLaunchImage-1-800-667h@2x.png\
iPhone Portrait iOS 7,9\
for iPhoen4s/4(@2x) :  640 x 960          \'c3\'fc\'c3\'fbLaunchImage-2@2x.png\
for iPhoen5s/5(@2x) :  640 x 1136         \'c3\'fc\'c3\'fbLaunchImage-2-700-568h@2x.png\
iPhone Landscape iOS 8,9\
                       2208 x 1242 \
\
\pard\pardeftab720\partightenfactor0

\f5 \cf39 \cb40 // CustomCell.m\cf11 \
- (\cf41 void\cf11 )setFrame:(\cf42 CGRect\cf11 )frame \{\
    frame\cf42 .size.height\cf11  -= \cf43 10\cf11 ;    \cf39 // 
\f2 \'bc\'f5\'b5\'f4\'b5\'c4\'d6\'b5\'be\'cd\'ca\'c7\'b7\'d6\'b8\'f4\'cf\'df\'b5\'c4\'b8\'df\'b6\'c8
\f5 \cf11 \
    [\cf41 super\cf11  setFrame:frame];\
\}
\f2 \cf0 \cb10 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f9\fs24 \cf11 \cb44 1. 
\f2 \'d2\'c6\'b3\'fd\'cf\'b5\'cd\'b3\'b5\'c4\'b7\'d6\'b8\'ee\'cf\'df\'a3\'ac\'d7\'d4\'bc\'ba\'b6\'a8\'d2\'e5\'c3\'bf\'d0\'d0\'b5\'c4\'b7\'d6\'b8\'ee\'cf\'df
\f9       \
    \cf32 self\cf11 .tableView.separatorStyle = \cf32 UITableViewCellSeparatorStyleNone\cf11 ;\
\
2. 
\f2 \'d6\'b8\'b6\'a8\'c4\'b3\'d0\'d0\'b7\'d6\'b8\'ee\'cf\'df\'d2\'fe\'b2\'d8
\f9               \
     [cell setSeparatorInset:\cf32 UIEdgeInsetsMake\cf11 (0, 0, 0, MAXFLOAT)];
\f2\fs28 \cf0 \cb10 \
\pard\pardeftab720\partightenfactor0
\cf11 \'c8\'c3\'b7\'d6\'b8\'ee\'cf\'df\'b5\'c4\'bf\'ed\'b6\'c8\'ba\'cd
\f8 cell
\f2 \'b5\'c4\'bf\'ed\'b6\'c8\'d2\'bb\'d6\'c2
\f8 \cb13 \
\cb10 cell.preservesSuperviewLayoutMargins = false;\cb13 \
\cb10 cell.separatorInset = UIEdgeInsetsZero;\cb13 \
\cb10 cell.layoutMargins = UIEdgeInsetsZero;
\f2 \cf0 \
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf0 \
- (void)viewDidLoad \{\
[super viewDidLoad];\
//\'cf\'c2\'bb\'ae\'cf\'df\'b3\'a4\'b6\'c8\
//UIEdgeInsetsZero \'cf\'c2\'bb\'ae\'cf\'df\'ce\'aa\'c6\'c1\'c4\'bb\'b5\'c4\'bf\'ed\
//UIEdgeInsetsMake(<#CGFloat top#>, <#CGFloat left#>, <#CGFloat bottom#>, <#CGFloat right#>) \'cf\'b8\'ce\'a2\'b5\'f7\'d5\'fb\
[self.tableView setSeparatorInset:UIEdgeInsetsZero];\
//\'cf\'c2\'bb\'ae\'cf\'df\'d1\'d5\'c9\'ab\
[self.tableView setSeparatorColor:[UIColor xxxx ]];\
[self.tableView setLayoutMargins:UIEdgeInsetsZero];\
\}\
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath\
\{\
UITableViewCell *cell;\
[cell setSeparatorInset:UIEdgeInsetsZero];\
[cell setLayoutMargins:UIEdgeInsetsZero];\
return cell;\
\}\
\pard\pardeftab720\partightenfactor0

\b\fs40 \cf45 \cb1 systemLayoutSizeFittingSize
\b0\fs28 \cf0 \cb10 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f0 \cf2 \cb3 \kerning1\expnd0\expndtw0 - (\cf4 UICollectionViewLayoutAttributes\cf2  *)preferredLayoutAttributesFittingAttributes:(\cf4 UICollectionViewLayoutAttributes\cf2  *)layoutAttributes \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2     [\cf5 self\cf2  \cf8 setNeedsLayout\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     [\cf5 self\cf2  \cf8 layoutIfNeeded\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 CGSize\cf2  size = [\cf5 self\cf2 .\cf4 contentView\cf2  \cf8 systemLayoutSizeFittingSize\cf2 :layoutAttributes.\cf4 size\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 CGRect\cf2  cellFrame = layoutAttributes.\cf4 frame\cf2 ;
\f1\fs24 \cf0 \

\f0\fs28 \cf2     cellFrame.\cf4 size\cf2 .\cf4 height\cf2  = size.\cf4 height\cf2 ;
\f1\fs24 \cf0 \

\f0\fs28 \cf2     layoutAttributes.\cf4 frame\cf2  = cellFrame;
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf5 return\cf2  layoutAttributes;
\f1\fs24 \cf0 \

\f0\fs28 \cf2 \}
\f2 \cf0 \cb10 \expnd0\expndtw0\kerning0
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0
\cf0 \
\
\pard\pardeftab720\partightenfactor0

\f9\fs24 \cf0 \cb44 NSString *message = \cf46 @"
\f2 \'c7\'eb\'c8\'b7\'c8\'cf\'d0\'c5\'cf\'a2\'ca\'c7\'b7\'f1\'d5\'fd\'c8\'b7
\f9 ?"\cf0 ;\
NSString *title = \cf46 @"
\f2 \'cc\'e1\'ca\'be
\f9 "\cf0 ;\
UIAlertController *alertController = [UIAlertController alertControllerWithTitle:title message:message preferredStyle:UIAlertControllerStyleActionSheet];\
\pard\pardeftab720\partightenfactor0
\cf47 //
\f2 \'b8\'c4\'b1\'e4
\f9 title
\f2 \'b5\'c4\'b4\'f3\'d0\'a1\'ba\'cd\'d1\'d5\'c9\'ab
\f9 \cf0 \
NSMutableAttributedString *titleAtt = [[NSMutableAttributedString alloc] initWithString:title];\
[titleAtt addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:\cf48 16\cf0 ] range:NSMakeRange(\cf48 0\cf0 , title.length)];\
[titleAtt addAttribute:NSForegroundColorAttributeName value:[UIColor orangeColor] range:NSMakeRange(\cf48 0\cf0 , title.length)];\
[alertController setValue:titleAtt forKey:\cf46 @"attributedTitle"\cf0 ];\
\cf47 //
\f2 \'b8\'c4\'b1\'e4
\f9 message
\f2 \'b5\'c4\'b4\'f3\'d0\'a1\'ba\'cd\'d1\'d5\'c9\'ab
\f9 \cf0 \
NSMutableAttributedString *messageAtt = [[NSMutableAttributedString alloc] initWithString:message];\
[messageAtt addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:\cf48 13\cf0 ] range:NSMakeRange(\cf48 0\cf0 , message.length)];\
[messageAtt addAttribute:NSForegroundColorAttributeName value:[UIColor yellowColor] range:NSMakeRange(\cf48 0\cf0 , message.length)];\
[alertController setValue:messageAtt forKey:\cf46 @"attributedMessage"\cf0 ];\
 [self presentViewController:alertController animated:YES completion:nil];\
\
\
\
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb13 \kerning1\expnd0\expndtw0 \CocoaLigature0 - (\cf5 void\cf2 )generateAttributedStringWithCommentItemModel:(\cf6 WWCommentItemModel\cf2  *)model\
\{\
    \cf4 NSString\cf2  *text = model.\cf6 firstUserName\cf2 ;\
    \cf5 if\cf2  (model.\cf6 secondUserName\cf2 .\cf4 length\cf2 ) \{\
        text = [text \cf8 stringByAppendingString\cf2 :[\cf4 NSString\cf2  \cf8 stringWithFormat\cf2 :\cf34 @"
\f2 \'bb\'d8\'b8\'b4
\f0 %@"\cf2 , model.\cf6 secondUserName\cf2 ]];\
    \}\
    text = [text \cf8 stringByAppendingString\cf2 :[\cf4 NSString\cf2  \cf8 stringWithFormat\cf2 :\cf34 @"
\f2 \'a3\'ba
\f0 %@"\cf2 , model.\cf6 commentString\cf2 ]];\
    \cf4 NSMutableAttributedString\cf2  *attString = [[\cf4 NSMutableAttributedString\cf2  \cf8 alloc\cf2 ] \cf8 initWithString\cf2 :text];\
    [attString setAttributes:\cf7 @\{\cf2 NSForegroundColorAttributeName:UIColorHex(\cf7 0x333333\cf2 ),NSFontAttributeName:[UIFont fontWithName:\cf34 @"PingFang-SC-Medium"\cf2  size:\cf7 14\cf2 ]\cf7 \}\cf2 ];\
    [attString setAttributes:\cf7 @\{\cf2 NSForegroundColorAttributeName:UIColorHex(\cf7 0x75a5fa\cf2 )\cf7 \}\cf2  range:[text rangeOfString:model.firstUserName]];\
    \cf5 if\cf2  (model.\cf6 secondUserName\cf2 ) \{\
        [attString setAttributes:\cf7 @\{\cf2 NSForegroundColorAttributeName:UIColorHex(\cf7 0x75a5fa\cf2 )\cf7 \}\cf2  range:[text rangeOfString:model.secondUserName]];\
    \}\
    \cf5 self\cf2 .\cf6 contentLabel\cf2 .\cf6 attributedText\cf2  = attString;\
    [\cf5 self\cf2 .\cf6 contentLabel\cf2  \cf49 addLinkToTransitInformation\cf2 :\cf7 @\{\cf34 @"name"\cf2 :model.\cf6 firstUserName\cf7 \}\cf2  \cf49 withRange\cf2 :[text \cf8 rangeOfString\cf2 :model.\cf6 firstUserName\cf2 ]];\
    [\cf5 self\cf2 .\cf6 contentLabel\cf2  \cf49 addLinkToTransitInformation\cf2 :\cf7 @\{\cf34 @"name"\cf2 :model.\cf6 secondUserName\cf7 \}\cf2  \cf49 withRange\cf2 :[text \cf8 rangeOfString\cf2 :model.\cf6 secondUserName\cf2 ]];\
\}
\f2\fs28 \cf0 \cb10 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\
http://blog.csdn.net/lucy_wangli/article/details/37962699\
\pard\pardeftab720\sl560\partightenfactor0
\cf50 \'cd\'a8\'b9\'fd
\f1 NSNumberFormatter
\f2 \'a3\'ac\'c9\'e8\'d6\'c3
\f1 NSNumber
\f2 \'ca\'e4\'b3\'f6\'b5\'c4\'b8\'f1\'ca\'bd
\fs32 \cf51 \
\pard\pardeftab720\sl380\partightenfactor0

\f1\fs28 \cf51 NSNumberFormatter\'a0*formatter = [[NSNumberFormatteralloc]init];
\f2\fs32 \

\f1\fs28 formatter.numberStyle\'a0=NSNumberFormatterDecimalStyle;
\f2\fs32 \

\f1\fs28 NSString\'a0*newAmount = [formatterstringFromNumber:[NSNumbernumberWithint:\cf43 123456789\cf51 ]];
\f2\fs32 \

\fs28 \'a3\'a8\'d7\'a2\'d2\'e2\'b4\'ab\'c8\'eb\'b2\'ce\'ca\'fd\'b5\'c4\'ca\'fd\'be\'dd\'b3\'a4\'b6\'c8\'a3\'ac\'bb\'b9\'bf\'c9\'d3\'c3
\f1 double
\f2 \'c0\'e0\'d0\'cd\'b5\'c8\'a3\'a9
\fs32 \
\pard\pardeftab720\sl560\sa200\partightenfactor0

\f1\fs28 \cf51 NSNumberFormatter
\f2 \'c0\'e0\'d3\'d0\'b8\'f6\'ca\'f4\'d0\'d4
\f1 numberStyle
\f2 \'a3\'ac\'ca\'c7\'d2\'bb\'b8\'f6\'c3\'b6\'be\'d9\'d0\'cd\'a3\'ac\'c9\'e8\'d6\'c3\'b2\'bb\'cd\'ac\'b5\'c4\'d6\'b5\'bf\'c9\'d2\'d4\'ca\'e4\'b3\'f6\'b2\'bb\'cd\'ac\'b5\'c4\'ca\'fd\'d7\'d6\'b8\'f1\'ca\'bd\'a1\'a3\'b8\'c3\'c3\'b6\'be\'d9\'b0\'fc\'c0\'a8\'a3\'ba
\fs32 \
\pard\pardeftab720\sl440\partightenfactor0
\cf51 \uc0\u160  \u160 \u160 enum\{\
\uc0\u160  \u160  \u160  \u160  NSNumberFormatterNoStyle =\u160 kCFNumberFormatterNoStyle,\
\uc0\u160  \u160  \u160  \u160  NSNumberFormatterDecimalStyle =\u160 kCFNumberFormatterDecimalStyle,\
\uc0\u160  \u160  \u160  \u160  NSNumberFormatterCurrencyStyle =\u160 kCFNumberFormatterCurrencyStyle,\
\uc0\u160  \u160  \u160  \u160  NSNumberFormatterPercentStyle =\u160 kCFNumberFormatterPercentStyle,\
\uc0\u160  \u160  \u160  \u160  NSNumberFormatterScientificStyle =\u160 kCFNumberFormatterScientificStyle,\
\uc0\u160  \u160  \u160  \u160  NSNumberFormatterSpellOutStyle =\u160 kCFNumberFormatterSpellOutStyle\
\uc0\u160  \u160  \};\
\pard\pardeftab720\sl560\sa200\partightenfactor0
\cf50 \'b8\'f7\'b8\'f6\'c3\'b6\'be\'d9\'b6\'d4\'d3\'a6\'ca\'e4\'b3\'f6\'ca\'fd\'d7\'d6\'b8\'f1\'ca\'bd\'b5\'c4\'d0\'a7\'b9\'fb\'c8\'e7\'cf\'c2\'a3\'ba\

\f1\fs24 123456789
\f2\fs32 \

\f1\fs24 123,456,789
\f2\fs32 \
\pard\pardeftab720\sl460\sa200\partightenfactor0

\fs24 \cf50 \'a3\'a4
\f1 123,456,789.00
\f2\fs32 \
\pard\pardeftab720\sl560\sa200\partightenfactor0

\f1\fs24 \cf50 -539,222,988%
\f2\fs32 \
\pard\pardeftab720\sl460\sa200\partightenfactor0

\f1\fs24 \cf50 1.23456789E8
\f2\fs32 \
\pard\pardeftab720\sl560\sa200\partightenfactor0

\fs24 \cf50 \'d2\'bb\'d2\'da\'b6\'fe\'c7\'a7\'c8\'fd\'b0\'d9\'cb\'c4\'ca\'ae\'ce\'e5\'cd\'f2\'c1\'f9\'c7\'a7\'c6\'df\'b0\'d9\'b0\'cb\'ca\'ae\'be\'c5
\fs32 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf0 \
CFAbsoluteTime startTime =CFAbsoluteTimeGetCurrent();\
//\'d4\'da\'d5\'e2\'d0\'b4\'c8\'eb\'d2\'aa\'bc\'c6\'cb\'e3\'ca\'b1\'bc\'e4\'b5\'c4\'b4\'fa\'c2\'eb\
...\
CFAbsoluteTime linkTime = (CFAbsoluteTimeGetCurrent() - startTime);\
NSLog(@"Linked in %f ms", linkTime *1000.0);\
\'b4\'f2\'d3\'a1\'b3\'f6\'c0\'b4\'ce\'aa\'b4\'fa\'c2\'eb\'d6\'b4\'d0\'d0\'ca\'b1\'bc\'e4 \'b5\'a5\'ce\'bbms\
\
\pard\pardeftab720\partightenfactor0

\f10\b \cf0 \cb1 1.
\f2 \'d4\'da\'c3\'bf\'b4\'ce\'b5\'e3\'bb\'f7\'ca\'b1\'cf\'c8\'c8\'a1\'cf\'fb\'d6\'ae\'c7\'b0\'b5\'c4\'b2\'d9\'d7\'f7\'a3\'a8\'cd\'f8\'c9\'cf\'bf\'b4\'b5\'bd\'b5\'c4\'b7\'bd\'b7\'a8\'a3\'a9
\f10\b0 \
\pard\pardeftab720\partightenfactor0

\f9\fs24 \cf10 \cb52 ?\cb1 \

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt\clvertalbase \clshdrawnil \clwWidth648\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalt\clvertalbase \clshdrawnil \clwWidth19211\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\fs28 \cf53 \cb10 1\
2\
3\
4\
5\
6\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 - (
\f11\b \cf54 void
\f9\b0 \cf0 )buttonClicked:(id)sender\
\{\
\'a0\'a0\cf33 //
\f2 \'d5\'e2\'c0\'ef\'ca\'c7\'b9\'d8\'bc\'fc\'a3\'ac\'b5\'e3\'bb\'f7\'b0\'b4\'c5\'a5\'ba\'f3\'cf\'c8\'c8\'a1\'cf\'fb\'d6\'ae\'c7\'b0\'b5\'c4\'b2\'d9\'d7\'f7\'a3\'ac\'d4\'d9\'bd\'f8\'d0\'d0\'d0\'e8\'d2\'aa\'bd\'f8\'d0\'d0\'b5\'c4\'b2\'d9\'d7\'f7
\f9 \cf0 \
\'a0\'a0[[self 
\f11\b \cf54 class
\f9\b0 \cf0 ] cancelPreviousPerformRequestsWithTarget:self selector:@selector(buttonClicked:) object:sender];\
\'a0\'a0[self performSelector:@selector(buttonClicked: )withObject:sender afterDelay:0.2f];\
\}\cell \lastrow\row
\pard\pardeftab720\partightenfactor0

\f2 \cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f0 \cf2 \cb3 \kerning1\expnd0\expndtw0 - (\cf5 void\cf2 )setCoverImage \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 NSURL\cf2  *fileURL = [\cf4 NSURL\cf2  \cf8 URLWithString\cf2 :\cf5 self\cf2 .\cf6 filePath\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 AVURLAsset\cf2  *asset = [\cf4 AVURLAsset\cf2  \cf8 URLAssetWithURL\cf2 :fileURL \cf8 options\cf2 :\cf5 nil\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 NSArray\cf2  *keys = [\cf4 NSArray\cf2  \cf8 arrayWithObjects\cf2 :\cf34 @"commonMetadata"\cf2 , \cf5 nil\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     [asset \cf8 loadValuesAsynchronouslyForKeys\cf2 :keys \cf8 completionHandler\cf2 :^\{
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \cf4 NSArray\cf2  *artworks = [\cf4 AVMetadataItem\cf2  \cf8 metadataItemsFromArray\cf2 :asset.\cf4 commonMetadata
\f1\fs24 \cf0 \

\f0\fs28 \cf2                                                            \cf8 withKey\cf2 :\cf4 AVMetadataCommonKeyArtwork
\f1\fs24 \cf0 \

\f0\fs28 \cf2                                                           \cf8 keySpace\cf2 :\cf4 AVMetadataKeySpaceCommon\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \cf5 if\cf2  (artworks.\cf4 count\cf2 ) \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2             \cf4 AVMetadataItem\cf2  *metadataItem = [artworks \cf8 firstObject\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2             \cf5 if\cf2  ([metadataItem.\cf4 keySpace\cf2  \cf8 isEqualToString\cf2 :\cf4 AVMetadataKeySpaceID3\cf2 ]) \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2                 \cf4 NSDictionary\cf2  *d = [metadataItem.\cf4 value\cf2  \cf8 copyWithZone\cf2 :\cf5 nil\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2                 [\cf5 self\cf2 .\cf6 coverImageView\cf2  \cf8 setImage\cf2 :[\cf4 UIImage\cf2  \cf8 imageWithData\cf2 :[d \cf8 objectForKey\cf2 :\cf34 @"data"\cf2 ]]];
\f1\fs24 \cf0 \

\f0\fs28 \cf2             \} \cf5 else\cf2  \cf5 if\cf2  ([metadataItem.\cf4 keySpace\cf2  \cf8 isEqualToString\cf2 :\cf4 AVMetadataKeySpaceiTunes\cf2 ]) \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2                 [\cf5 self\cf2 .\cf6 coverImageView\cf2  \cf8 setImage\cf2 :[\cf4 UIImage\cf2  \cf8 imageWithData\cf2 :[metadataItem.\cf4 value\cf2  \cf8 copyWithZone\cf2 :\cf5 nil\cf2 ]]];
\f1\fs24 \cf0 \

\f0\fs28 \cf2             \}
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \} \cf5 else\cf2  \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2             [\cf5 self\cf2  \cf49 getContentAndCoverImage\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \}
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \}];
\f1\fs24 \cf0 \

\f0\fs28 \cf2 \}
\f2 \cf0 \cb10 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f0 \cf2 \cb3 \kerning1\expnd0\expndtw0 - (\cf4 NSURLSessionDataTask\cf2  *)POST:(\cf4 NSString\cf2  *)URLString
\f1\fs24 \cf0 \

\f0\fs28 \cf2                     parameters:(\cf5 nullable\cf2  \cf5 id\cf2 )parameters
\f1\fs24 \cf0 \

\f0\fs28 \cf2      constructingBodyWithBlock:(\cf5 nullable\cf2  \cf5 void\cf2  (^)(\cf5 id\cf2 <\cf6 AFMultipartFormData\cf2 > \cf5 _Nonnull\cf2 ))block
\f1\fs24 \cf0 \

\f0\fs28 \cf2                        success:(\cf5 nullable\cf2  \cf5 void\cf2  (^)(\cf4 NSURLSessionDataTask\cf2  * \cf5 _Nonnull\cf2 , \cf5 id\cf2  \cf5 _Nullable\cf2 ))success
\f1\fs24 \cf0 \

\f0\fs28 \cf2                        failure:(\cf5 nullable\cf2  \cf5 void\cf2  (^)(\cf4 NSURLSessionDataTask\cf2  * \cf5 _Nullable\cf2 , \cf4 NSError\cf2  * \cf5 _Nonnull\cf2 ))failure
\f1\fs24 \cf0 \

\f0\fs28 \cf2 \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf5 return\cf2  [\cf5 self\cf2  \cf49 POST\cf2 :URLString \cf49 parameters\cf2 :parameters \cf49 constructingBodyWithBlock\cf2 :block \cf49 progress\cf2 :\cf5 nil\cf2  \cf49 success\cf2 :success \cf49 failure\cf2 :failure];
\f1\fs24 \cf0 \

\f0\fs28 \cf2 \}
\f2 \cf0 \cb10 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \
\'b5\'d8\'cd\'bc\'c9\'b8\'d1\'a1\
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f0 \cf4 \cb3 \kerning1\expnd0\expndtw0 NSMutableArray\cf2  *dataArr = [\cf4 NSMutableArray\cf2  \cf8 array\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 NSError\cf2 *error;
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 NSString\cf2  *filePath = [[\cf4 NSBundle\cf2  \cf8 mainBundle\cf2 ]\cf8 pathForResource\cf2 :\cf34 @"province"\cf8 ofType\cf2 :\cf34 @"json"\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 NSData\cf2  *jdata = [[\cf4 NSData\cf2  \cf8 alloc\cf2 ]\cf8 initWithContentsOfFile\cf2 :filePath];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 NSDictionary\cf2  *JsonObject=[\cf4 NSJSONSerialization\cf2  \cf8 JSONObjectWithData\cf2 :jdata
\f1\fs24 \cf0 \

\f0\fs28 \cf2                                                   \cf8 options\cf2 :\cf8 NSJSONReadingAllowFragments
\f1\fs24 \cf0 \

\f0\fs28 \cf2                                                     \cf8 error\cf2 :&error];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 NSString\cf2  *filePath1 = [[\cf4 NSBundle\cf2  \cf8 mainBundle\cf2 ]\cf8 pathForResource\cf2 :\cf34 @"city"\cf8 ofType\cf2 :\cf34 @"json"\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 NSData\cf2  *jdata1 = [[\cf4 NSData\cf2  \cf8 alloc\cf2 ]\cf8 initWithContentsOfFile\cf2 :filePath1];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 NSDictionary\cf2  *JsonObject1=[\cf4 NSJSONSerialization\cf2  \cf8 JSONObjectWithData\cf2 :jdata1
\f1\fs24 \cf0 \

\f0\fs28 \cf2                                                              \cf8 options\cf2 :\cf8 NSJSONReadingAllowFragments
\f1\fs24 \cf0 \

\f0\fs28 \cf2                                                                \cf8 error\cf2 :\cf5 nil\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf4 NSMutableArray\cf2  *keysArr = [JsonObject.\cf4 allKeys\cf2  \cf8 mutableCopy\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     [keysArr \cf8 sortUsingComparator\cf2 :^\cf4 NSComparisonResult\cf2 (\cf5 id\cf2   \cf5 _Nonnull\cf2  obj1, \cf5 id\cf2   \cf5 _Nonnull\cf2  obj2) \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \cf5 return\cf2  [obj1 \cf8 compare\cf2 :obj2];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \}];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf5 for\cf2  (\cf4 NSString\cf2  *key \cf5 in\cf2  keysArr) \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \cf5 if\cf2  ([JsonObject1.\cf4 allKeys\cf2  \cf8 containsObject\cf2 :key]) \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2             [dataArr \cf8 addObject\cf2 :\cf7 @\{\cf34 @"code"\cf2 :key,\cf34 @"name"\cf2 :JsonObject[key][\cf34 @"name"\cf2 ],\cf34 @"cities"\cf2 :JsonObject1[key]\cf7 \}\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \}\cf5 else\cf2 \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2             [dataArr \cf8 addObject\cf2 :\cf7 @\{\cf34 @"code"\cf2 :key,\cf34 @"name"\cf2 :JsonObject[key][\cf34 @"name"\cf2 ],\cf34 @"cities"\cf2 :\cf34 @""\cf7 \}\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \}
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \}
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf5 BOOL\cf2  isYes = [\cf4 NSJSONSerialization\cf2  \cf8 isValidJSONObject\cf2 :dataArr];
\f1\fs24 \cf0 \
\

\f0\fs28 \cf2     \cf5 if\cf2  (isYes) \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \cf4 NSData\cf2  *data = [\cf4 NSJSONSerialization\cf2  \cf8 dataWithJSONObject\cf2 :dataArr \cf8 options\cf2 :\cf7 0\cf2  \cf8 error\cf2 :\cf5 NULL\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2         [\cf6 FCFileManager\cf2  \cf49 writeFileAtPath\cf2 :\cf34 @"002.json"\cf2  \cf49 content\cf2 :data];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \}
\f2 \cf0 \cb10 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f0 \cf2 \cb3 \kerning1\expnd0\expndtw0 - (\cf5 instancetype\cf2 )initWithMultiDelegates:(\cf5 id\cf2 )firstObject, ... \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf5 self\cf2  = [\cf5 super\cf2  \cf8 init\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf5 if\cf2  (\cf5 self\cf2 ) \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \cf6 _pointerArray\cf2  = [\cf4 NSPointerArray\cf2  \cf8 weakObjectsPointerArray\cf2 ];
\f1\fs24 \cf0 \

\f0\fs28 \cf2         
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \cf4 va_list\cf2  params;
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \cf9 va_start\cf2 (params, firstObject);
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \cf5 id\cf2  arg;
\f1\fs24 \cf0 \

\f0\fs28 \cf2         
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \cf5 if\cf2  (firstObject) \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2             [\cf6 _pointerArray\cf2  \cf8 addPointer\cf2 :(\cf5 __bridge\cf2  \cf5 void\cf2  *)firstObject];
\f1\fs24 \cf0 \

\f0\fs28 \cf2             arg = \cf9 va_arg\cf2 (params, \cf5 id\cf2 );
\f1\fs24 \cf0 \

\f0\fs28 \cf2             \cf5 while\cf2  (arg) \{
\f1\fs24 \cf0 \

\f0\fs28 \cf2                 [\cf6 _pointerArray\cf2  \cf8 addPointer\cf2 :(\cf5 __bridge\cf2  \cf5 void\cf2  *)arg];
\f1\fs24 \cf0 \

\f0\fs28 \cf2                 arg = \cf9 va_arg\cf2 (params, \cf5 id\cf2 );
\f1\fs24 \cf0 \

\f0\fs28 \cf2             \}
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \}
\f1\fs24 \cf0 \

\f0\fs28 \cf2         
\f1\fs24 \cf0 \

\f0\fs28 \cf2         \cf9 va_end\cf2 (params);
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \}
\f1\fs24 \cf0 \

\f0\fs28 \cf2     \cf5 return\cf2  \cf5 self\cf2 ;
\f1\fs24 \cf0 \

\f0\fs28 \cf2 \}
\f2 \cf0 \cb10 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\
\
}